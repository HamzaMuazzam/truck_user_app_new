Index: lib/main.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:io';\r\nimport 'package:firebase_core/firebase_core.dart';\r\nimport 'package:firebase_phone_auth_handler/firebase_phone_auth_handler.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:get/get.dart';\r\nimport 'package:get_storage/get_storage.dart';\r\nimport 'package:sultan_cab/auth_widget.dart';\r\nimport 'package:sultan_cab/providers/auth_provider.dart';\r\nimport 'package:sultan_cab/providers/booking_provider.dart';\r\nimport 'package:sultan_cab/providers/home_provider.dart';\r\nimport 'package:sultan_cab/providers/track_provider.dart';\r\nimport 'package:sultan_cab/providers/user_provider.dart';\r\nimport 'package:provider/provider.dart';\r\nimport 'providers/AddToFav/add_to_fav_controller.dart';\r\nimport 'providers/ChatProvider/chat_provider.dart';\r\nimport 'providers/Dispute/dispute_provider.dart';\r\nimport 'providers/GoogleMapProvider/location_and_map_provider.dart';\r\nimport 'providers/NotificationProvider/notification_provider.dart';\r\nimport 'providers/Reoccurring/reoccurring.dart';\r\nimport 'providers/RideHistory/ride_history.dart';\r\nimport 'providers/SubscriptionModel/subscription_plan.dart';\r\nimport 'providers/TaxiBookingProvider/in_progress_ride_provider.dart';\r\nimport 'providers/TaxiBookingProvider/taxi_booking_provider.dart';\r\nimport 'providers/Truck _provider/fair_provider.dart';\r\nimport 'providers/taxi/app_flow_provider.dart';\r\n\r\n\r\nclass MyHttpOverrides extends HttpOverrides {\r\n  @override\r\n  HttpClient createHttpClient(SecurityContext? context) {\r\n    return super.createHttpClient(context)\r\n      ..badCertificateCallback =\r\n          (X509Certificate cert, String host, int port) => true;\r\n  }\r\n}\r\n\r\nvoid main() async {\r\n  HttpOverrides.global = MyHttpOverrides();\r\n\r\n  WidgetsFlutterBinding.ensureInitialized();\r\n  await GetStorage.init();\r\n\r\n  await Firebase.initializeApp(\r\n  );\r\n\r\n  runApp(\r\n    MyApp(),\r\n  );\r\n}\r\n\r\nGlobalKey<NavigatorState> navigatorKey = GlobalKey<NavigatorState>();\r\n\r\nclass MyApp extends StatelessWidget {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MultiProvider(\r\n      providers: [\r\n        ChangeNotifierProvider(create: (_) => AuthProvider()),\r\n        ChangeNotifierProvider(create: (_) => NotificationsProvider()),\r\n        ChangeNotifierProvider(create: (_) => HomeProvider()),\r\n        ChangeNotifierProvider(create: (_) => UserProvider()),\r\n        ChangeNotifierProvider(create: (_) => BookingProvider()),\r\n        ChangeNotifierProvider(create: (_) => TrackProvider()),\r\n        ChangeNotifierProvider(create: (_) => TaxiBookingProvider()),\r\n        ChangeNotifierProvider(create: (_) => AppFlowProvider()),\r\n        ChangeNotifierProvider(create: (_) => ChatProvider()),\r\n        ChangeNotifierProvider(create: (_) => LocationAndMapProvider()),\r\n        ChangeNotifierProvider(create: (_) => RideHistoryProvider()),\r\n        ChangeNotifierProvider(create: (_) => ReoccurringProvider()),\r\n        ChangeNotifierProvider(create: (_) => AddToFavourite()),\r\n        ChangeNotifierProvider(create: (_) => SubscriptionProvider()),\r\n        ChangeNotifierProvider(create: (_) => DisputeProvider()),\r\n        ChangeNotifierProvider(create: (_) => FirebasePhoneAuthController()),\r\n        ChangeNotifierProvider(create: (_) => InProgressRideProvider()),\r\n        ChangeNotifierProvider(create: (_) => FairTruckProvider()),\r\n      ],\r\n      child: GetMaterialApp(\r\n        title: 'Truck King',\r\n        debugShowCheckedModeBanner: false,\r\n        navigatorKey: navigatorKey,\r\n        theme: ThemeData.dark(),\r\n        home:\r\n\r\n        AuthWidget(),\r\n      ),\r\n    );\r\n  }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/main.dart b/lib/main.dart
--- a/lib/main.dart	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ b/lib/main.dart	(date 1679551618190)
@@ -56,7 +56,7 @@
     return MultiProvider(
       providers: [
         ChangeNotifierProvider(create: (_) => AuthProvider()),
-        ChangeNotifierProvider(create: (_) => NotificationsProvider()),
+        // ChangeNotifierProvider(create: (_) => NotificationsProvider()),
         ChangeNotifierProvider(create: (_) => HomeProvider()),
         ChangeNotifierProvider(create: (_) => UserProvider()),
         ChangeNotifierProvider(create: (_) => BookingProvider()),
Index: android/app/src/main/kotlin/com/truck_user_app/MainActivity.kt
===================================================================
diff --git a/android/app/src/main/kotlin/com/truck_user_app/MainActivity.kt b/android/app/src/main/kotlin/com/truck_user_app/MainActivity.kt
deleted file mode 100644
--- a/android/app/src/main/kotlin/com/truck_user_app/MainActivity.kt	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ /dev/null	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
@@ -1,6 +0,0 @@
-package com.truck_user_app
-
-import io.flutter.embedding.android.FlutterActivity
-
-class MainActivity: FlutterActivity() {
-}
Index: lib/test.dart
===================================================================
diff --git a/lib/test.dart b/lib/test.dart
deleted file mode 100644
--- a/lib/test.dart	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ /dev/null	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
@@ -1,2797 +0,0 @@
-// import 'dart:async';
-// import 'dart:convert';
-// import 'dart:io';
-//
-// import 'package:flutter/cupertino.dart';
-// import 'package:flutter/foundation.dart';
-// import 'package:flutter/material.dart';
-// import 'package:flutter/services.dart';
-// import 'package:flutter_local_notifications/flutter_local_notifications.dart';
-// import 'package:http/http.dart' as http;
-// import 'package:/.dart' as ;
-// import 'package:path_provider/path_provider.dart';
-// import 'package:timezone/data/latest_all.dart' as tz;
-// import 'package:timezone/timezone.dart' as tz;
-//
-// int id = 0;
-//
-// final FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =
-// FlutterLocalNotificationsPlugin();
-//
-// /// Streams are created so that app can respond to notification-related events
-// /// since the plugin is initialised in the `main` function
-// final StreamController<ReceivedNotification> didReceiveLocalNotificationStream =
-// StreamController<ReceivedNotification>.broadcast();
-//
-// final StreamController<String?> selectNotificationStream =
-// StreamController<String?>.broadcast();
-//
-// const MethodChannel platform =
-// MethodChannel('dexterx.dev/flutter_local_notifications_example');
-//
-// const String portName = 'notification_send_port';
-//
-// class ReceivedNotification {
-//   ReceivedNotification({
-//     required this.id,
-//     required this.title,
-//     required this.body,
-//     required this.payload,
-//   });
-//
-//   final int id;
-//   final String? title;
-//   final String? body;
-//   final String? payload;
-// }
-//
-// String? selectedNotificationPayload;
-//
-// /// A notification action which triggers a url launch event
-// const String urlLaunchActionId = 'id_1';
-//
-// /// A notification action which triggers a App navigation event
-// const String navigationActionId = 'id_3';
-//
-// /// Defines a iOS/MacOS notification category for text input actions.
-// const String darwinNotificationCategoryText = 'textCategory';
-//
-// /// Defines a iOS/MacOS notification category for plain actions.
-// const String darwinNotificationCategoryPlain = 'plainCategory';
-//
-// @pragma('vm:entry-point')
-// void notificationTapBackground(NotificationResponse notificationResponse) {
-//   // ignore: avoid_print
-//   print('notification(${notificationResponse.id}) action tapped: '
-//       '${notificationResponse.actionId} with'
-//       ' payload: ${notificationResponse.payload}');
-//   if (notificationResponse.input?.isNotEmpty ?? false) {
-//     // ignore: avoid_print
-//     print(
-//         'notification action tapped with input: ${notificationResponse.input}');
-//   }
-// }
-//
-// /// IMPORTANT: running the following code on its own won't work as there is
-// /// setup required for each platform head project.
-// ///
-// /// Please download the complete example app from the GitHub repository where
-// /// all the setup has been done
-// Future<void> main() async {
-//   // needed if you intend to initialize in the `main` function
-//   WidgetsFlutterBinding.ensureInitialized();
-//
-//   await _configureLocalTimeZone();
-//
-//   final NotificationAppLaunchDetails? notificationAppLaunchDetails = !kIsWeb &&
-//       Platform.isLinux
-//       ? null
-//       : await flutterLocalNotificationsPlugin.getNotificationAppLaunchDetails();
-//   String initialRoute = HomePage.routeName;
-//   if (notificationAppLaunchDetails?.didNotificationLaunchApp ?? false) {
-//     selectedNotificationPayload =
-//         notificationAppLaunchDetails!.notificationResponse?.payload;
-//     initialRoute = SecondPage.routeName;
-//   }
-//
-//   const AndroidInitializationSettings initializationSettingsAndroid =
-//   AndroidInitializationSettings('app_icon');
-//
-//   final List<DarwinNotificationCategory> darwinNotificationCategories =
-//   <DarwinNotificationCategory>[
-//     DarwinNotificationCategory(
-//       darwinNotificationCategoryText,
-//       actions: <DarwinNotificationAction>[
-//         DarwinNotificationAction.text(
-//           'text_1',
-//           'Action 1',
-//           buttonTitle: 'Send',
-//           placeholder: 'Placeholder',
-//         ),
-//       ],
-//     ),
-//     DarwinNotificationCategory(
-//       darwinNotificationCategoryPlain,
-//       actions: <DarwinNotificationAction>[
-//         DarwinNotificationAction.plain('id_1', 'Action 1'),
-//         DarwinNotificationAction.plain(
-//           'id_2',
-//           'Action 2 (destructive)',
-//           options: <DarwinNotificationActionOption>{
-//             DarwinNotificationActionOption.destructive,
-//           },
-//         ),
-//         DarwinNotificationAction.plain(
-//           navigationActionId,
-//           'Action 3 (foreground)',
-//           options: <DarwinNotificationActionOption>{
-//             DarwinNotificationActionOption.foreground,
-//           },
-//         ),
-//         DarwinNotificationAction.plain(
-//           'id_4',
-//           'Action 4 (auth required)',
-//           options: <DarwinNotificationActionOption>{
-//             DarwinNotificationActionOption.authenticationRequired,
-//           },
-//         ),
-//       ],
-//       options: <DarwinNotificationCategoryOption>{
-//         DarwinNotificationCategoryOption.hiddenPreviewShowTitle,
-//       },
-//     )
-//   ];
-//
-//   /// Note: permissions aren't requested here just to demonstrate that can be
-//   /// done later
-//   final DarwinInitializationSettings initializationSettingsDarwin =
-//   DarwinInitializationSettings(
-//     requestAlertPermission: false,
-//     requestBadgePermission: false,
-//     requestSoundPermission: false,
-//     onDidReceiveLocalNotification:
-//         (int id, String? title, String? body, String? payload) async {
-//       didReceiveLocalNotificationStream.add(
-//         ReceivedNotification(
-//           id: id,
-//           title: title,
-//           body: body,
-//           payload: payload,
-//         ),
-//       );
-//     },
-//     notificationCategories: darwinNotificationCategories,
-//   );
-//   final LinuxInitializationSettings initializationSettingsLinux =
-//   LinuxInitializationSettings(
-//     defaultActionName: 'Open notification',
-//     defaultIcon: AssetsLinuxIcon('icons/app_icon.png'),
-//   );
-//   final InitializationSettings initializationSettings = InitializationSettings(
-//     android: initializationSettingsAndroid,
-//     iOS: initializationSettingsDarwin,
-//     macOS: initializationSettingsDarwin,
-//     linux: initializationSettingsLinux,
-//   );
-//   await flutterLocalNotificationsPlugin.initialize(
-//     initializationSettings,
-//     onDidReceiveNotificationResponse:
-//         (NotificationResponse notificationResponse) {
-//       switch (notificationResponse.notificationResponseType) {
-//         case NotificationResponseType.selectedNotification:initializationSettingsDarwin
-//           selectNotificationStream.add(notificationResponse.payload);
-//           break;
-//         case NotificationResponseType.selectedNotificationAction:
-//
-//
-//           if (notificationResponse.actionId == navigationActionId) {
-//             selectNotificationStream.add(notificationResponse.payload);
-//           }
-//           break;
-//       }
-//     },
-//     onDidReceiveBackgroundNotificationResponse: notificationTapBackground,
-//   );
-//   runApp(
-//     MaterialApp(
-//       initialRoute: initialRoute,
-//       routes: <String, WidgetBuilder>{
-//         HomePage.routeName: (_) => HomePage(notificationAppLaunchDetails),
-//         SecondPage.routeName: (_) => SecondPage(selectedNotificationPayload)
-//       },
-//     ),
-//   );
-// }
-//
-// Future<void> _configureLocalTimeZone() async {
-//   if (kIsWeb || Platform.isLinux) {
-//     return;
-//   }
-// }
-//
-// class PaddedElevatedButton extends StatelessWidget {
-//   const PaddedElevatedButton({
-//     required this.buttonText,
-//     required this.onPressed,
-//     Key? key,
-//   }) : super(key: key);
-//
-//   final String buttonText;
-//   final VoidCallback onPressed;
-//
-//   @override
-//   Widget build(BuildContext context) => Padding(
-//     padding: const EdgeInsets.fromLTRB(0, 0, 0, 8),
-//     child: ElevatedButton(
-//       onPressed: onPressed,
-//       child: Text(buttonText),
-//     ),
-//   );
-// }
-//
-// class HomePage extends StatefulWidget {
-//   const HomePage(
-//       this.notificationAppLaunchDetails, {
-//         Key? key,
-//       }) : super(key: key);
-//
-//   static const String routeName = '/';
-//
-//   final NotificationAppLaunchDetails? notificationAppLaunchDetails;
-//
-//   bool get didNotificationLaunchApp =>
-//       notificationAppLaunchDetails?.didNotificationLaunchApp ?? false;
-//
-//   @override
-//   _HomePageState createState() => _HomePageState();
-// }
-//
-// class _HomePageState extends State<HomePage> {
-//   final TextEditingController _linuxIconPathController =
-//   TextEditingController();
-//
-//   bool _notificationsEnabled = false;
-//
-//   @override
-//   void initState() {
-//     super.initState();
-//     _isAndroidPermissionGranted();
-//     _requestPermissions();
-//     _configureDidReceiveLocalNotificationSubject();
-//     _configureSelectNotificationSubject();
-//   }
-//
-//   Future<void> _isAndroidPermissionGranted() async {
-//     if (Platform.isAndroid) {
-//       final bool granted = await flutterLocalNotificationsPlugin
-//           .resolvePlatformSpecificImplementation<
-//           AndroidFlutterLocalNotificationsPlugin>()
-//           ?.areNotificationsEnabled() ??
-//           false;
-//
-//       setState(() {
-//         _notificationsEnabled = granted;
-//       });
-//     }
-//   }
-//
-//   Future<void> _requestPermissions() async {
-//     if (Platform.isIOS || Platform.isMacOS) {
-//       await flutterLocalNotificationsPlugin
-//           .resolvePlatformSpecificImplementation<
-//           IOSFlutterLocalNotificationsPlugin>()
-//           ?.requestPermissions(
-//         alert: true,
-//         badge: true,
-//         sound: true,
-//         critical: true,
-//       );
-//       await flutterLocalNotificationsPlugin
-//           .resolvePlatformSpecificImplementation<
-//           MacOSFlutterLocalNotificationsPlugin>()
-//           ?.requestPermissions(
-//         alert: true,
-//         badge: true,
-//         sound: true,
-//         critical: true,
-//       );
-//     } else if (Platform.isAndroid) {
-//       final AndroidFlutterLocalNotificationsPlugin? androidImplementation =
-//       flutterLocalNotificationsPlugin.resolvePlatformSpecificImplementation<
-//           AndroidFlutterLocalNotificationsPlugin>();
-//
-//       final bool? granted = await androidImplementation?.requestPermission();
-//       setState(() {
-//         _notificationsEnabled = granted ?? false;
-//       });
-//     }
-//   }
-//
-//   void _configureDidReceiveLocalNotificationSubject() {
-//     didReceiveLocalNotificationStream.stream
-//         .listen((ReceivedNotification receivedNotification) async {
-//       await showDialog(
-//         context: context,
-//         builder: (BuildContext context) => CupertinoAlertDialog(
-//           title: receivedNotification.title != null
-//               ? Text(receivedNotification.title!)
-//               : null,
-//           content: receivedNotification.body != null
-//               ? Text(receivedNotification.body!)
-//               : null,
-//           actions: <Widget>[
-//             CupertinoDialogAction(
-//               isDefaultAction: true,
-//               onPressed: () async {
-//                 Navigator.of(context, rootNavigator: true).pop();
-//                 await Navigator.of(context).push(
-//                   MaterialPageRoute<void>(
-//                     builder: (BuildContext context) =>
-//                         SecondPage(receivedNotification.payload),
-//                   ),
-//                 );
-//               },
-//               child: const Text('Ok'),
-//             )
-//           ],
-//         ),
-//       );
-//     });
-//   }
-//
-//   void _configureSelectNotificationSubject() {
-//     selectNotificationStream.stream.listen((String? payload) async {
-//       await Navigator.of(context).push(MaterialPageRoute<void>(
-//         builder: (BuildContext context) => SecondPage(payload),
-//       ));
-//     });
-//   }
-//
-//   @override
-//   void dispose() {
-//     didReceiveLocalNotificationStream.close();
-//     selectNotificationStream.close();
-//     super.dispose();
-//   }
-//
-//   @override
-//   Widget build(BuildContext context) => Scaffold(
-//     appBar: AppBar(
-//       title: const Text('Plugin example app'),
-//     ),
-//     body: SingleChildScrollView(
-//       child: Padding(
-//         padding: const EdgeInsets.all(8),
-//         child: Center(
-//           child: Column(
-//             children: <Widget>[
-//               const Padding(
-//                 padding: EdgeInsets.fromLTRB(0, 0, 0, 8),
-//                 child:
-//                 Text('Tap on a notification when it appears to trigger'
-//                     ' navigation'),
-//               ),
-//               _InfoValueString(
-//                 title: 'Did notification launch app?',
-//                 value: widget.didNotificationLaunchApp,
-//               ),
-//               if (widget.didNotificationLaunchApp) ...<Widget>[
-//                 const Text('Launch notification details'),
-//                 _InfoValueString(
-//                     title: 'Notification id',
-//                     value: widget.notificationAppLaunchDetails!
-//                         .notificationResponse?.id),
-//                 _InfoValueString(
-//                     title: 'Action id',
-//                     value: widget.notificationAppLaunchDetails!
-//                         .notificationResponse?.actionId),
-//                 _InfoValueString(
-//                     title: 'Input',
-//                     value: widget.notificationAppLaunchDetails!
-//                         .notificationResponse?.input),
-//                 _InfoValueString(
-//                   title: 'Payload:',
-//                   value: widget.notificationAppLaunchDetails!
-//                       .notificationResponse?.payload,
-//                 ),
-//               ],
-//               PaddedElevatedButton(
-//                 buttonText: 'Show plain notification with payload',
-//                 onPressed: () async {
-//                   await _showNotification();
-//                 },
-//               ),
-//               PaddedElevatedButton(
-//                 buttonText:
-//                 'Show plain notification that has no title with '
-//                     'payload',
-//                 onPressed: () async {
-//                   await _showNotificationWithNoTitle();
-//                 },
-//               ),
-//               PaddedElevatedButton(
-//                 buttonText: 'Show plain notification that has no body with '
-//                     'payload',
-//                 onPressed: () async {
-//                   await _showNotificationWithNoBody();
-//                 },
-//               ),
-//               PaddedElevatedButton(
-//                 buttonText: 'Show notification with custom sound',
-//                 onPressed: () async {
-//                   await _showNotificationCustomSound();
-//                 },
-//               ),
-//               if (kIsWeb || !Platform.isLinux) ...<Widget>[
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Schedule notification to appear in 5 seconds '
-//                       'based on local time zone',
-//                   onPressed: () async {
-//                     await _zonedScheduleNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Repeat notification every minute',
-//                   onPressed: () async {
-//                     await _repeatNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Schedule daily 10:00:00 am notification in your '
-//                       'local time zone',
-//                   onPressed: () async {
-//                     await _scheduleDailyTenAMNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Schedule daily 10:00:00 am notification in your '
-//                       "local time zone using last year's date",
-//                   onPressed: () async {
-//                     await _scheduleDailyTenAMLastYearNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Schedule weekly 10:00:00 am notification in your '
-//                       'local time zone',
-//                   onPressed: () async {
-//                     await _scheduleWeeklyTenAMNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Schedule weekly Monday 10:00:00 am notification '
-//                       'in your local time zone',
-//                   onPressed: () async {
-//                     await _scheduleWeeklyMondayTenAMNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Check pending notifications',
-//                   onPressed: () async {
-//                     await _checkPendingNotificationRequests();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Get active notifications',
-//                   onPressed: () async {
-//                   },
-//                 ),
-//               ],
-//               PaddedElevatedButton(
-//                 buttonText:
-//                 'Schedule monthly Monday 10:00:00 am notification in '
-//                     'your local time zone',
-//                 onPressed: () async {
-//                   await _scheduleMonthlyMondayTenAMNotification();
-//                 },
-//               ),
-//               PaddedElevatedButton(
-//                 buttonText:
-//                 'Schedule yearly Monday 10:00:00 am notification in '
-//                     'your local time zone',
-//                 onPressed: () async {
-//                   await _scheduleYearlyMondayTenAMNotification();
-//                 },
-//               ),
-//               PaddedElevatedButton(
-//                 buttonText: 'Show notification with no sound',
-//                 onPressed: () async {
-//                   await _showNotificationWithNoSound();
-//                 },
-//               ),
-//               PaddedElevatedButton(
-//                 buttonText: 'Cancel latest notification',
-//                 onPressed: () async {
-//                   await _cancelNotification();
-//                 },
-//               ),
-//               PaddedElevatedButton(
-//                 buttonText: 'Cancel all notifications',
-//                 onPressed: () async {
-//                   await _cancelAllNotifications();
-//                 },
-//               ),
-//               const Divider(),
-//               const Text(
-//                 'Notifications with actions',
-//                 style: TextStyle(fontWeight: FontWeight.bold),
-//               ),
-//               PaddedElevatedButton(
-//                 buttonText: 'Show notification with plain actions',
-//                 onPressed: () async {
-//                   await _showNotificationWithActions();
-//                 },
-//               ),
-//               if (Platform.isLinux)
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Show notification with icon action (if supported)',
-//                   onPressed: () async {
-//                     await _showNotificationWithIconAction();
-//                   },
-//                 ),
-//               if (!Platform.isLinux)
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification with text action',
-//                   onPressed: () async {
-//                     await _showNotificationWithTextAction();
-//                   },
-//                 ),
-//               if (!Platform.isLinux)
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification with text choice',
-//                   onPressed: () async {
-//                     await _showNotificationWithTextChoice();
-//                   },
-//                 ),
-//               const Divider(),
-//               if (Platform.isAndroid) ...<Widget>[
-//                 const Text(
-//                   'Android-specific examples',
-//                   style: TextStyle(fontWeight: FontWeight.bold),
-//                 ),
-//                 Text('notifications enabled: $_notificationsEnabled'),
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Check if notifications are enabled for this app',
-//                   onPressed: _areNotifcationsEnabledOnAndroid,
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Request permission (API 33+)',
-//                   onPressed: () => _requestPermissions(),
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Show plain notification with payload and update '
-//                       'channel description',
-//                   onPressed: () async {
-//                     await _showNotificationUpdateChannelDescription();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show plain notification as public on every '
-//                       'lockscreen',
-//                   onPressed: () async {
-//                     await _showPublicNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Show notification with custom vibration pattern, '
-//                       'red LED and red icon',
-//                   onPressed: () async {
-//                     await _showNotificationCustomVibrationIconLed();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification using Android Uri sound',
-//                   onPressed: () async {
-//                     await _showSoundUriNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Show notification that times out after 3 seconds',
-//                   onPressed: () async {
-//                     await _showTimeoutNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show insistent notification',
-//                   onPressed: () async {
-//                     await _showInsistentNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Show big picture notification using local s',
-//                   onPressed: () async {
-//                     await _showBigPictureNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Show big picture notification using base64 String '
-//                       'for s',
-//                   onPressed: () async {
-//                     await _showBigPictureNotificationBase64();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Show big picture notification using URLs for '
-//                       's',
-//                   onPressed: () async {
-//                     await _showBigPictureNotificationURL();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Show big picture notification, hide large icon '
-//                       'on expand',
-//                   onPressed: () async {
-//                     await _showBigPictureNotificationHiddenLargeIcon();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show media notification',
-//                   onPressed: () async {
-//                     await _showNotificationMediaStyle();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show big text notification',
-//                   onPressed: () async {
-//                     await _showBigTextNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show inbox notification',
-//                   onPressed: () async {
-//                     await _showInboxNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show messaging notification',
-//                   onPressed: () async {
-//                     await _showMessagingNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show grouped notifications',
-//                   onPressed: () async {
-//                     await _showGroupedNotifications();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification with tag',
-//                   onPressed: () async {
-//                     await _showNotificationWithTag();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Cancel notification with tag',
-//                   onPressed: () async {
-//                     await _cancelNotificationWithTag();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show ongoing notification',
-//                   onPressed: () async {
-//                     await _showOngoingNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Show notification with no badge, alert only once',
-//                   onPressed: () async {
-//                     await _showNotificationWithNoBadge();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Show progress notification - updates every second',
-//                   onPressed: () async {
-//                     await _showProgressNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show indeterminate progress notification',
-//                   onPressed: () async {
-//                     await _showIndeterminateProgressNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification without timestamp',
-//                   onPressed: () async {
-//                     await _showNotificationWithoutTimestamp();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification with custom timestamp',
-//                   onPressed: () async {
-//                     await _showNotificationWithCustomTimestamp();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification with custom sub-text',
-//                   onPressed: () async {
-//                     await _showNotificationWithCustomSubText();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification with chronometer',
-//                   onPressed: () async {
-//                     await _showNotificationWithChronometer();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show full-screen notification',
-//                   onPressed: () async {
-//                     await _showFullScreenNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Show notification with number if the launcher '
-//                       'supports',
-//                   onPressed: () async {
-//                     await _showNotificationWithNumber();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification with sound controlled by '
-//                       'alarm volume',
-//                   onPressed: () async {
-//                     await _showNotificationWithAudioAttributeAlarm();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Create grouped notification channels',
-//                   onPressed: () async {
-//                     await _createNotificationChannelGroup();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Delete notification channel group',
-//                   onPressed: () async {
-//                     await _deleteNotificationChannelGroup();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Create notification channel',
-//                   onPressed: () async {
-//                     await _createNotificationChannel();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Delete notification channel',
-//                   onPressed: () async {
-//                     await _deleteNotificationChannel();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Get notification channels',
-//                   onPressed: () async {
-//                     await _getNotificationChannels();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Start foreground service',
-//                   onPressed: () async {
-//                     await _startForegroundService();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Start foreground service with blue background '
-//                       'notification',
-//                   onPressed: () async {
-//                     await _startForegroundServiceWithBlueBackgroundNotification();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Stop foreground service',
-//                   onPressed: () async {
-//                     await _stopForegroundService();
-//                   },
-//                 ),
-//               ],
-//               if (!kIsWeb &&
-//                   (Platform.isIOS || Platform.isMacOS)) ...<Widget>[
-//                 const Text(
-//                   'iOS and macOS-specific examples',
-//                   style: TextStyle(fontWeight: FontWeight.bold),
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Request permission',
-//                   onPressed: _requestPermissions,
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification with subtitle',
-//                   onPressed: () async {
-//                     await _showNotificationWithSubtitle();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification with icon badge',
-//                   onPressed: () async {
-//                     await _showNotificationWithIconBadge();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification with attachment',
-//                   onPressed: () async {
-//                     await _showNotificationWithAttachment();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notifications with thread identifier',
-//                   onPressed: () async {
-//                     await _showNotificationsWithThreadIdentifier();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText:
-//                   'Show notification with time sensitive interruption '
-//                       'level',
-//                   onPressed: () async {
-//                     await _showNotificationWithTimeSensitiveInterruptionLevel();
-//                   },
-//                 ),
-//               ],
-//               if (!kIsWeb && Platform.isLinux) ...<Widget>[
-//                 const Text(
-//                   'Linux-specific examples',
-//                   style: TextStyle(fontWeight: FontWeight.bold),
-//                 ),
-//                 FutureBuilder<LinuxServerCapabilities>(
-//                   future: getLinuxCapabilities(),
-//                   builder: (
-//                       BuildContext context,
-//                       AsyncSnapshot<LinuxServerCapabilities> snapshot,
-//                       ) {
-//                     if (snapshot.hasData) {
-//                       final LinuxServerCapabilities caps = snapshot.data!;
-//                       return Padding(
-//                         padding: const EdgeInsets.symmetric(vertical: 8),
-//                         child: Column(
-//                           crossAxisAlignment: CrossAxisAlignment.start,
-//                           children: <Widget>[
-//                             Text(
-//                               'Capabilities of the current system:',
-//                               style: Theme.of(context)
-//                                   .textTheme
-//                                   .subtitle1!
-//                                   .copyWith(fontWeight: FontWeight.bold),
-//                             ),
-//                             const SizedBox(height: 8),
-//                             _InfoValueString(
-//                               title: 'Body text:',
-//                               value: caps.body,
-//                             ),
-//                             _InfoValueString(
-//                               title: 'Hyperlinks in body text:',
-//                               value: caps.bodyHyperlinks,
-//                             ),
-//                             _InfoValueString(
-//                               title: 's in body:',
-//                               value: caps.bodys,
-//                             ),
-//                             _InfoValueString(
-//                               title: 'Markup in the body text:',
-//                               value: caps.bodyMarkup,
-//                             ),
-//                             _InfoValueString(
-//                               title: 'Animated icons:',
-//                               value: caps.iconMulti,
-//                             ),
-//                             _InfoValueString(
-//                               title: 'Static icons:',
-//                               value: caps.iconStatic,
-//                             ),
-//                             _InfoValueString(
-//                               title: 'Notification persistence:',
-//                               value: caps.persistence,
-//                             ),
-//                             _InfoValueString(
-//                               title: 'Sound:',
-//                               value: caps.sound,
-//                             ),
-//                             _InfoValueString(
-//                               title: 'Actions:',
-//                               value: caps.actions,
-//                             ),
-//                             _InfoValueString(
-//                               title: 'Action icons:',
-//                               value: caps.actionIcons,
-//                             ),
-//                             _InfoValueString(
-//                               title: 'Other capabilities:',
-//                               value: caps.otherCapabilities,
-//                             ),
-//                           ],
-//                         ),
-//                       );
-//                     } else {
-//                       return const CircularProgressIndicator();
-//                     }
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification with body markup',
-//                   onPressed: () async {
-//                     await _showLinuxNotificationWithBodyMarkup();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification with category',
-//                   onPressed: () async {
-//                     await _showLinuxNotificationWithCategory();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification with byte data icon',
-//                   onPressed: () async {
-//                     await _showLinuxNotificationWithByteDataIcon();
-//                   },
-//                 ),
-//                 Builder(
-//                   builder: (BuildContext context) => PaddedElevatedButton(
-//                     buttonText: 'Show notification with file path icon',
-//                     onPressed: () async {
-//                       final String path = _linuxIconPathController.text;
-//                       if (path.isEmpty) {
-//                         ScaffoldMessenger.of(context).showSnackBar(
-//                           const SnackBar(
-//                             content: Text('Please enter the icon path'),
-//                           ),
-//                         );
-//                         return;
-//                       }
-//                       await _showLinuxNotificationWithPathIcon(path);
-//                     },
-//                   ),
-//                 ),
-//                 Padding(
-//                   padding: const EdgeInsets.fromLTRB(0, 0, 0, 8),
-//                   child: TextField(
-//                     controller: _linuxIconPathController,
-//                     decoration: InputDecoration(
-//                       hintText: 'Enter the icon path',
-//                       constraints: const BoxConstraints.tightFor(
-//                         width: 300,
-//                       ),
-//                       suffixIcon: IconButton(
-//                         icon: const Icon(Icons.clear),
-//                         onPressed: () => _linuxIconPathController.clear(),
-//                       ),
-//                     ),
-//                   ),
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification with theme icon',
-//                   onPressed: () async {
-//                     await _showLinuxNotificationWithThemeIcon();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification with theme sound',
-//                   onPressed: () async {
-//                     await _showLinuxNotificationWithThemeSound();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification with critical urgency',
-//                   onPressed: () async {
-//                     await _showLinuxNotificationWithCriticalUrgency();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification with timeout',
-//                   onPressed: () async {
-//                     await _showLinuxNotificationWithTimeout();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Suppress notification sound',
-//                   onPressed: () async {
-//                     await _showLinuxNotificationSuppressSound();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Transient notification',
-//                   onPressed: () async {
-//                     await _showLinuxNotificationTransient();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Resident notification',
-//                   onPressed: () async {
-//                     await _showLinuxNotificationResident();
-//                   },
-//                 ),
-//                 PaddedElevatedButton(
-//                   buttonText: 'Show notification on '
-//                       'different screen location',
-//                   onPressed: () async {
-//                     await _showLinuxNotificationDifferentLocation();
-//                   },
-//                 ),
-//               ],
-//             ],
-//           ),
-//         ),
-//       ),
-//     ),
-//   );
-//
-//   Future<void> _showNotification() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails('your channel id', 'your channel name',
-//         channelDescription: 'your channel description',
-//         importance: Importance.max,
-//         priority: Priority.high,
-//         ticker: 'ticker');
-//     const NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'plain title', 'plain body', notificationDetails,
-//         payload: 'item x');
-//   }
-//
-//   Future<void> _showNotificationWithActions() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails(
-//       'your channel id',
-//       'your channel name',
-//       channelDescription: 'your channel description',
-//       importance: Importance.max,
-//       priority: Priority.high,
-//       ticker: 'ticker',
-//       actions: <AndroidNotificationAction>[
-//         AndroidNotificationAction(
-//           urlLaunchActionId,
-//           'Action 1',
-//           icon: DrawableResourceAndroidBitmap('food'),
-//           contextual: true,
-//         ),
-//         AndroidNotificationAction(
-//           'id_2',
-//           'Action 2',
-//           titleColor: Color.fromARGB(255, 255, 0, 0),
-//           icon: DrawableResourceAndroidBitmap('secondary_icon'),
-//         ),
-//         AndroidNotificationAction(
-//           navigationActionId,
-//           'Action 3',
-//           icon: DrawableResourceAndroidBitmap('secondary_icon'),
-//           showsUserInterface: true,
-//           // By default, Android plugin will dismiss the notification when the
-//           // user tapped on a action (this mimics the behavior on iOS).
-//           cancelNotification: false,
-//         ),
-//       ],
-//     );
-//
-//     const DarwinNotificationDetails iosNotificationDetails =
-//     DarwinNotificationDetails(
-//       categoryIdentifier: darwinNotificationCategoryPlain,
-//     );
-//
-//     const DarwinNotificationDetails macOSNotificationDetails =
-//     DarwinNotificationDetails(
-//       categoryIdentifier: darwinNotificationCategoryPlain,
-//     );
-//
-//     const LinuxNotificationDetails linuxNotificationDetails =
-//     LinuxNotificationDetails(
-//       actions: <LinuxNotificationAction>[
-//         LinuxNotificationAction(
-//           key: urlLaunchActionId,
-//           label: 'Action 1',
-//         ),
-//         LinuxNotificationAction(
-//           key: navigationActionId,
-//           label: 'Action 2',
-//         ),
-//       ],
-//     );
-//
-//     const NotificationDetails notificationDetails = NotificationDetails(
-//       android: androidNotificationDetails,
-//       iOS: iosNotificationDetails,
-//       macOS: macOSNotificationDetails,
-//       linux: linuxNotificationDetails,
-//     );
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'plain title', 'plain body', notificationDetails,
-//         payload: 'item z');
-//   }
-//
-//   Future<void> _showNotificationWithTextAction() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails(
-//       'your channel id',
-//       'your channel name',
-//       channelDescription: 'your channel description',
-//       importance: Importance.max,
-//       priority: Priority.high,
-//       ticker: 'ticker',
-//       actions: <AndroidNotificationAction>[
-//         AndroidNotificationAction(
-//           'text_id_1',
-//           'Enter Text',
-//           icon: DrawableResourceAndroidBitmap('food'),
-//           inputs: <AndroidNotificationActionInput>[
-//             AndroidNotificationActionInput(
-//               label: 'Enter a message',
-//             ),
-//           ],
-//         ),
-//       ],
-//     );
-//
-//     const DarwinNotificationDetails darwinNotificationDetails =
-//     DarwinNotificationDetails(
-//       categoryIdentifier: darwinNotificationCategoryText,
-//     );
-//
-//     const NotificationDetails notificationDetails = NotificationDetails(
-//       android: androidNotificationDetails,
-//       iOS: darwinNotificationDetails,
-//       macOS: darwinNotificationDetails,
-//     );
-//
-//     await flutterLocalNotificationsPlugin.show(id++, 'Text Input Notification',
-//         'Expand to see input action', notificationDetails,
-//         payload: 'item x');
-//   }
-//
-//   Future<void> _showNotificationWithIconAction() async {
-//     const LinuxNotificationDetails linuxNotificationDetails =
-//     LinuxNotificationDetails(
-//       actions: <LinuxNotificationAction>[
-//         LinuxNotificationAction(
-//           key: 'media-eject',
-//           label: 'Eject',
-//         ),
-//       ],
-//     );
-//
-//     const NotificationDetails notificationDetails = NotificationDetails(
-//       linux: linuxNotificationDetails,
-//     );
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'plain title', 'plain body', notificationDetails,
-//         payload: 'item z');
-//   }
-//
-//   Future<void> _showNotificationWithTextChoice() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails(
-//       'your channel id',
-//       'your channel name',
-//       channelDescription: 'your channel description',
-//       importance: Importance.max,
-//       priority: Priority.high,
-//       ticker: 'ticker',
-//       actions: <AndroidNotificationAction>[
-//         AndroidNotificationAction(
-//           'text_id_2',
-//           'Action 2',
-//           icon: DrawableResourceAndroidBitmap('food'),
-//           inputs: <AndroidNotificationActionInput>[
-//             AndroidNotificationActionInput(
-//               choices: <String>['ABC', 'DEF'],
-//               allowFreeFormInput: false,
-//             ),
-//           ],
-//           contextual: true,
-//         ),
-//       ],
-//     );
-//
-//     const DarwinNotificationDetails darwinNotificationDetails =
-//     DarwinNotificationDetails(
-//       categoryIdentifier: darwinNotificationCategoryText,
-//     );
-//
-//     const NotificationDetails notificationDetails = NotificationDetails(
-//       android: androidNotificationDetails,
-//       iOS: darwinNotificationDetails,
-//       macOS: darwinNotificationDetails,
-//     );
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'plain title', 'plain body', notificationDetails,
-//         payload: 'item x');
-//   }
-//
-//   Future<void> _showFullScreenNotification() async {
-//     await showDialog(
-//       context: context,
-//       builder: (_) => AlertDialog(
-//         title: const Text('Turn off your screen'),
-//         content: const Text(
-//             'to see the full-screen intent in 5 seconds, press OK and TURN '
-//                 'OFF your screen'),
-//         actions: <Widget>[
-//           TextButton(
-//             onPressed: () {
-//               Navigator.pop(context);
-//             },
-//             child: const Text('Cancel'),
-//           ),
-//           TextButton(
-//             onPressed: () async {
-//               await flutterLocalNotificationsPlugin.zonedSchedule(
-//                   0,
-//                   'scheduled title',
-//                   'scheduled body',
-//                   tz.TZDateTime.now(tz.local).add(const Duration(seconds: 5)),
-//                   const NotificationDetails(
-//                       android: AndroidNotificationDetails(
-//                           'full screen channel id', 'full screen channel name',
-//                           channelDescription: 'full screen channel description',
-//                           priority: Priority.high,
-//                           importance: Importance.high,
-//                           fullScreenIntent: true)),
-//                   androidAllowWhileIdle: true,
-//                   uiLocalNotificationDateInterpretation:
-//                   UILocalNotificationDateInterpretation.absoluteTime);
-//
-//               Navigator.pop(context);
-//             },
-//             child: const Text('OK'),
-//           )
-//         ],
-//       ),
-//     );
-//   }
-//
-//   Future<void> _showNotificationWithNoBody() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails('your channel id', 'your channel name',
-//         channelDescription: 'your channel description',
-//         importance: Importance.max,
-//         priority: Priority.high,
-//         ticker: 'ticker');
-//     const NotificationDetails notificationDetails = NotificationDetails(
-//       android: androidNotificationDetails,
-//     );
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'plain title', null, notificationDetails,
-//         payload: 'item x');
-//   }
-//
-//   Future<void> _showNotificationWithNoTitle() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails('your channel id', 'your channel name',
-//         channelDescription: 'your channel description',
-//         importance: Importance.max,
-//         priority: Priority.high,
-//         ticker: 'ticker');
-//     const NotificationDetails notificationDetails = NotificationDetails(
-//       android: androidNotificationDetails,
-//     );
-//     await flutterLocalNotificationsPlugin
-//         .show(id++, null, 'plain body', notificationDetails, payload: 'item x');
-//   }
-//
-//   Future<void> _cancelNotification() async {
-//     await flutterLocalNotificationsPlugin.cancel(--id);
-//   }
-//
-//   Future<void> _cancelNotificationWithTag() async {
-//     await flutterLocalNotificationsPlugin.cancel(--id, tag: 'tag');
-//   }
-//
-//   Future<void> _showNotificationCustomSound() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails(
-//       'your other channel id',
-//       'your other channel name',
-//       channelDescription: 'your other channel description',
-//       sound: RawResourceAndroidNotificationSound('slow_spring_board'),
-//     );
-//     const DarwinNotificationDetails darwinNotificationDetails =
-//     DarwinNotificationDetails(sound: 'slow_spring_board.aiff');
-//     final LinuxNotificationDetails linuxPlatformChannelSpecifics =
-//     LinuxNotificationDetails(
-//       sound: AssetsLinuxSound('sound/slow_spring_board.mp3'),
-//     );
-//     final NotificationDetails notificationDetails = NotificationDetails(
-//       android: androidNotificationDetails,
-//       iOS: darwinNotificationDetails,
-//       macOS: darwinNotificationDetails,
-//       linux: linuxPlatformChannelSpecifics,
-//     );
-//     await flutterLocalNotificationsPlugin.show(
-//       id++,
-//       'custom sound notification title',
-//       'custom sound notification body',
-//       notificationDetails,
-//     );
-//   }
-//
-//   Future<void> _showNotificationCustomVibrationIconLed() async {
-//     final Int64List vibrationPattern = Int64List(4);
-//     vibrationPattern[0] = 0;
-//     vibrationPattern[1] = 1000;
-//     vibrationPattern[2] = 5000;
-//     vibrationPattern[3] = 2000;
-//
-//     final AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails(
-//         'other custom channel id', 'other custom channel name',
-//         channelDescription: 'other custom channel description',
-//         icon: 'secondary_icon',
-//         largeIcon: const DrawableResourceAndroidBitmap('sample_large_icon'),
-//         vibrationPattern: vibrationPattern,
-//         enableLights: true,
-//         color: const Color.fromARGB(255, 255, 0, 0),
-//         ledColor: const Color.fromARGB(255, 255, 0, 0),
-//         ledOnMs: 1000,
-//         ledOffMs: 500);
-//
-//     final NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++,
-//         'title of notification with custom vibration pattern, LED and icon',
-//         'body of notification with custom vibration pattern, LED and icon',
-//         notificationDetails);
-//   }
-//
-//   Future<void> _zonedScheduleNotification() async {
-//     await flutterLocalNotificationsPlugin.zonedSchedule(
-//         0,
-//         'scheduled title',
-//         'scheduled body',
-//         tz.TZDateTime.now(tz.local).add(const Duration(seconds: 5)),
-//         const NotificationDetails(
-//             android: AndroidNotificationDetails(
-//                 'your channel id', 'your channel name',
-//                 channelDescription: 'your channel description')),
-//         androidAllowWhileIdle: true,
-//         uiLocalNotificationDateInterpretation:
-//         UILocalNotificationDateInterpretation.absoluteTime);
-//   }
-//
-//   Future<void> _showNotificationWithNoSound() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails('silent channel id', 'silent channel name',
-//         channelDescription: 'silent channel description',
-//         playSound: false,
-//         styleInformation: DefaultStyleInformation(true, true));
-//     const DarwinNotificationDetails darwinNotificationDetails =
-//     DarwinNotificationDetails(presentSound: false);
-//     const NotificationDetails notificationDetails = NotificationDetails(
-//         android: androidNotificationDetails,
-//         iOS: darwinNotificationDetails,
-//         macOS: darwinNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, '<b>silent</b> title', '<b>silent</b> body', notificationDetails);
-//   }
-//
-//   Future<void> _showSoundUriNotification() async {
-//     /// this calls a method over a platform channel implemented within the
-//     /// example app to return the Uri for the default alarm sound and uses
-//     /// as the notification sound
-//     final String? alarmUri = await platform.invokeMethod<String>('getAlarmUri');
-//     final UriAndroidNotificationSound uriSound =
-//     UriAndroidNotificationSound(alarmUri!);
-//     final AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails('uri channel id', 'uri channel name',
-//         channelDescription: 'uri channel description',
-//         sound: uriSound,
-//         styleInformation: const DefaultStyleInformation(true, true));
-//     final NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'uri sound title', 'uri sound body', notificationDetails);
-//   }
-//
-//   Future<void> _showTimeoutNotification() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails('silent channel id', 'silent channel name',
-//         channelDescription: 'silent channel description',
-//         timeoutAfter: 3000,
-//         styleInformation: DefaultStyleInformation(true, true));
-//     const NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(id++, 'timeout notification',
-//         'Times out after 3 seconds', notificationDetails);
-//   }
-//
-//   Future<void> _showInsistentNotification() async {
-//     // This value is from: https://developer.android.com/reference/android/app/Notification.html#FLAG_INSISTENT
-//     const int insistentFlag = 4;
-//     final AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails('your channel id', 'your channel name',
-//         channelDescription: 'your channel description',
-//         importance: Importance.max,
-//         priority: Priority.high,
-//         ticker: 'ticker',
-//         additionalFlags: Int32List.fromList(<int>[insistentFlag]));
-//     final NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'insistent title', 'insistent body', notificationDetails,
-//         payload: 'item x');
-//   }
-//
-//   Future<String> _downloadAndSaveFile(String url, String fileName) async {
-//     final Directory directory = await getApplicationDocumentsDirectory();
-//     final String filePath = '${directory.path}/$fileName';
-//     final http.Response response = await http.get(Uri.parse(url));
-//     final File file = File(filePath);
-//     await file.writeAsBytes(response.bodyBytes);
-//     return filePath;
-//   }
-//
-//   Future<void> _showBigPictureNotification() async {
-//     final String largeIconPath = await _downloadAndSaveFile(
-//         'https://via.placeholder.com/48x48', 'largeIcon');
-//     final String bigPicturePath = await _downloadAndSaveFile(
-//         'https://via.placeholder.com/400x800', 'bigPicture');
-//     final BigPictureStyleInformation bigPictureStyleInformation =
-//     BigPictureStyleInformation(FilePathAndroidBitmap(bigPicturePath),
-//         largeIcon: FilePathAndroidBitmap(largeIconPath),
-//         contentTitle: 'overridden <b>big</b> content title',
-//         htmlFormatContentTitle: true,
-//         summaryText: 'summary <i>text</i>',
-//         htmlFormatSummaryText: true);
-//     final AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails(
-//         'big text channel id', 'big text channel name',
-//         channelDescription: 'big text channel description',
-//         styleInformation: bigPictureStyleInformation);
-//     final NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'big text title', 'silent body', notificationDetails);
-//   }
-//
-//   Future<String> _base64encodedImage(String url) async {
-//     final http.Response response = await http.get(Uri.parse(url));
-//     final String base64Data = base64Encode(response.bodyBytes);
-//     return base64Data;
-//   }
-//
-//   Future<void> _showBigPictureNotificationBase64() async {
-//     final String largeIcon =
-//     await _base64encodedImage('https://via.placeholder.com/48x48');
-//     final String bigPicture =
-//     await _base64encodedImage('https://via.placeholder.com/400x800');
-//
-//     final BigPictureStyleInformation bigPictureStyleInformation =
-//     BigPictureStyleInformation(
-//         ByteArrayAndroidBitmap.fromBase64String(
-//             bigPicture), //Base64AndroidBitmap(bigPicture),
-//         largeIcon: ByteArrayAndroidBitmap.fromBase64String(largeIcon),
-//         contentTitle: 'overridden <b>big</b> content title',
-//         htmlFormatContentTitle: true,
-//         summaryText: 'summary <i>text</i>',
-//         htmlFormatSummaryText: true);
-//     final AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails(
-//         'big text channel id', 'big text channel name',
-//         channelDescription: 'big text channel description',
-//         styleInformation: bigPictureStyleInformation);
-//     final NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'big text title', 'silent body', notificationDetails);
-//   }
-//
-//   Future<Uint8List> _getByteArrayFromUrl(String url) async {
-//     final http.Response response = await http.get(Uri.parse(url));
-//     return response.bodyBytes;
-//   }
-//
-//   Future<void> _showBigPictureNotificationURL() async {
-//     final ByteArrayAndroidBitmap largeIcon = ByteArrayAndroidBitmap(
-//         await _getByteArrayFromUrl('https://via.placeholder.com/48x48'));
-//     final ByteArrayAndroidBitmap bigPicture = ByteArrayAndroidBitmap(
-//         await _getByteArrayFromUrl('https://via.placeholder.com/400x800'));
-//
-//     final BigPictureStyleInformation bigPictureStyleInformation =
-//     BigPictureStyleInformation(bigPicture,
-//         largeIcon: largeIcon,
-//         contentTitle: 'overridden <b>big</b> content title',
-//         htmlFormatContentTitle: true,
-//         summaryText: 'summary <i>text</i>',
-//         htmlFormatSummaryText: true);
-//     final AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails(
-//         'big text channel id', 'big text channel name',
-//         channelDescription: 'big text channel description',
-//         styleInformation: bigPictureStyleInformation);
-//     final NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'big text title', 'silent body', notificationDetails);
-//   }
-//
-//   Future<void> _showBigPictureNotificationHiddenLargeIcon() async {
-//     final String largeIconPath = await _downloadAndSaveFile(
-//         'https://via.placeholder.com/48x48', 'largeIcon');
-//     final String bigPicturePath = await _downloadAndSaveFile(
-//         'https://via.placeholder.com/400x800', 'bigPicture');
-//     final BigPictureStyleInformation bigPictureStyleInformation =
-//     BigPictureStyleInformation(FilePathAndroidBitmap(bigPicturePath),
-//         hideExpandedLargeIcon: true,
-//         contentTitle: 'overridden <b>big</b> content title',
-//         htmlFormatContentTitle: true,
-//         summaryText: 'summary <i>text</i>',
-//         htmlFormatSummaryText: true);
-//     final AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails(
-//         'big text channel id', 'big text channel name',
-//         channelDescription: 'big text channel description',
-//         largeIcon: FilePathAndroidBitmap(largeIconPath),
-//         styleInformation: bigPictureStyleInformation);
-//     final NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'big text title', 'silent body', notificationDetails);
-//   }
-//
-//   Future<void> _showNotificationMediaStyle() async {
-//     final String largeIconPath = await _downloadAndSaveFile(
-//         'https://via.placeholder.com/128x128/00FF00/000000', 'largeIcon');
-//     final AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails(
-//       'media channel id',
-//       'media channel name',
-//       channelDescription: 'media channel description',
-//       largeIcon: FilePathAndroidBitmap(largeIconPath),
-//       styleInformation: const MediaStyleInformation(),
-//     );
-//     final NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'notification title', 'notification body', notificationDetails);
-//   }
-//
-//   Future<void> _showBigTextNotification() async {
-//     const BigTextStyleInformation bigTextStyleInformation =
-//     BigTextStyleInformation(
-//       'Lorem <i>ipsum dolor sit</i> amet, consectetur <b>adipiscing elit</b>, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',
-//       htmlFormatBigText: true,
-//       contentTitle: 'overridden <b>big</b> content title',
-//       htmlFormatContentTitle: true,
-//       summaryText: 'summary <i>text</i>',
-//       htmlFormatSummaryText: true,
-//     );
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails(
-//         'big text channel id', 'big text channel name',
-//         channelDescription: 'big text channel description',
-//         styleInformation: bigTextStyleInformation);
-//     const NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'big text title', 'silent body', notificationDetails);
-//   }
-//
-//   Future<void> _showInboxNotification() async {
-//     final List<String> lines = <String>['line <b>1</b>', 'line <i>2</i>'];
-//     final InboxStyleInformation inboxStyleInformation = InboxStyleInformation(
-//         lines,
-//         htmlFormatLines: true,
-//         contentTitle: 'overridden <b>inbox</b> context title',
-//         htmlFormatContentTitle: true,
-//         summaryText: 'summary <i>text</i>',
-//         htmlFormatSummaryText: true);
-//     final AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails('inbox channel id', 'inboxchannel name',
-//         channelDescription: 'inbox channel description',
-//         styleInformation: inboxStyleInformation);
-//     final NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'inbox title', 'inbox body', notificationDetails);
-//   }
-//
-//   Future<void> _showMessagingNotification() async {
-//     // use a platform channel to resolve an Android drawable resource to a URI.
-//     // This is NOT part of the notifications plugin. Calls made over this
-//     /// channel is handled by the app
-//     final String? imageUri =
-//     await platform.invokeMethod('drawableToUri', 'food');
-//
-//     /// First two person objects will use icons that part of the Android app's
-//     /// drawable resources
-//     const Person me = Person(
-//       name: 'Me',
-//       key: '1',
-//       uri: 'tel:1234567890',
-//       icon: DrawableResourceAndroidIcon('me'),
-//     );
-//     const Person coworker = Person(
-//       name: 'Coworker',
-//       key: '2',
-//       uri: 'tel:9876543210',
-//       icon: FlutterBitmapAssetAndroidIcon('icons/coworker.png'),
-//     );
-//     // download the icon that would be use for the lunch bot person
-//     final String largeIconPath = await _downloadAndSaveFile(
-//         'https://via.placeholder.com/48x48', 'largeIcon');
-//     // this person object will use an icon that was downloaded
-//     final Person lunchBot = Person(
-//       name: 'Lunch bot',
-//       key: 'bot',
-//       bot: true,
-//       icon: BitmapFilePathAndroidIcon(largeIconPath),
-//     );
-//     final Person chef = Person(
-//         name: 'Master Chef',
-//         key: '3',
-//         uri: 'tel:111222333444',
-//         icon: ByteArrayAndroidIcon.fromBase64String(
-//             await _base64encodedImage('https://placekitten.com/48/48')));
-//
-//     final List<Message> messages = <Message>[
-//       Message('Hi', DateTime.now(), null),
-//       Message("What's up?", DateTime.now().add(const Duration(minutes: 5)),
-//           coworker),
-//       Message('Lunch?', DateTime.now().add(const Duration(minutes: 10)), null,
-//           dataMimeType: 'image/png', dataUri: imageUri),
-//       Message('What kind of food would you prefer?',
-//           DateTime.now().add(const Duration(minutes: 10)), lunchBot),
-//       Message('You do not have time eat! Keep working!',
-//           DateTime.now().add(const Duration(minutes: 11)), chef),
-//     ];
-//     final MessagingStyleInformation messagingStyle = MessagingStyleInformation(
-//         me,
-//         groupConversation: true,
-//         conversationTitle: 'Team lunch',
-//         htmlFormatContent: true,
-//         htmlFormatTitle: true,
-//         messages: messages);
-//     final AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails('message channel id', 'message channel name',
-//         channelDescription: 'message channel description',
-//         category: AndroidNotificationCategory.message,
-//         styleInformation: messagingStyle);
-//     final NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'message title', 'message body', notificationDetails);
-//
-//     // wait 10 seconds and add another message to simulate another response
-//     await Future<void>.delayed(const Duration(seconds: 10), () async {
-//       messages.add(Message("I'm so sorry!!! But I really like thai food ...",
-//           DateTime.now().add(const Duration(minutes: 11)), null));
-//       await flutterLocalNotificationsPlugin.show(
-//           id++, 'message title', 'message body', notificationDetails);
-//     });
-//   }
-//
-//   Future<void> _showGroupedNotifications() async {
-//     const String groupKey = 'com.android.example.WORK_EMAIL';
-//     const String groupChannelId = 'grouped channel id';
-//     const String groupChannelName = 'grouped channel name';
-//     const String groupChannelDescription = 'grouped channel description';
-//     // example based on https://developer.android.com/training/notify-user/group.html
-//     const AndroidNotificationDetails firstNotificationAndroidSpecifics =
-//     AndroidNotificationDetails(groupChannelId, groupChannelName,
-//         channelDescription: groupChannelDescription,
-//         importance: Importance.max,
-//         priority: Priority.high,
-//         groupKey: groupKey);
-//     const NotificationDetails firstNotificationPlatformSpecifics =
-//     NotificationDetails(android: firstNotificationAndroidSpecifics);
-//     await flutterLocalNotificationsPlugin.show(id++, 'Alex Faarborg',
-//         'You will not believe...', firstNotificationPlatformSpecifics);
-//     const AndroidNotificationDetails secondNotificationAndroidSpecifics =
-//     AndroidNotificationDetails(groupChannelId, groupChannelName,
-//         channelDescription: groupChannelDescription,
-//         importance: Importance.max,
-//         priority: Priority.high,
-//         groupKey: groupKey);
-//     const NotificationDetails secondNotificationPlatformSpecifics =
-//     NotificationDetails(android: secondNotificationAndroidSpecifics);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++,
-//         'Jeff Chang',
-//         'Please join us to celebrate the...',
-//         secondNotificationPlatformSpecifics);
-//
-//     // Create the summary notification to support older devices that pre-date
-//     /// Android 7.0 (API level 24).
-//     ///
-//     /// Recommended to create this regardless as the behaviour may vary as
-//     /// mentioned in https://developer.android.com/training/notify-user/group
-//     const List<String> lines = <String>[
-//       'Alex Faarborg  Check this out',
-//       'Jeff Chang    Launch Party'
-//     ];
-//     const InboxStyleInformation inboxStyleInformation = InboxStyleInformation(
-//         lines,
-//         contentTitle: '2 messages',
-//         summaryText: 'janedoe@example.com');
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails(groupChannelId, groupChannelName,
-//         channelDescription: groupChannelDescription,
-//         styleInformation: inboxStyleInformation,
-//         groupKey: groupKey,
-//         setAsGroupSummary: true);
-//     const NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'Attention', 'Two messages', notificationDetails);
-//   }
-//
-//   Future<void> _showNotificationWithTag() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails('your channel id', 'your channel name',
-//         channelDescription: 'your channel description',
-//         importance: Importance.max,
-//         priority: Priority.high,
-//         tag: 'tag');
-//     const NotificationDetails notificationDetails = NotificationDetails(
-//       android: androidNotificationDetails,
-//     );
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'first notification', null, notificationDetails);
-//   }
-//
-//   Future<void> _checkPendingNotificationRequests() async {
-//     final List<PendingNotificationRequest> pendingNotificationRequests =
-//     await flutterLocalNotificationsPlugin.pendingNotificationRequests();
-//     return showDialog<void>(
-//       context: context,
-//       builder: (BuildContext context) => AlertDialog(
-//         content:
-//         Text('${pendingNotificationRequests.length} pending notification '
-//             'requests'),
-//         actions: <Widget>[
-//           TextButton(
-//             onPressed: () {
-//               Navigator.of(context).pop();
-//             },
-//             child: const Text('OK'),
-//           ),
-//         ],
-//       ),
-//     );
-//   }
-//
-//   Future<void> _cancelAllNotifications() async {
-//     await flutterLocalNotificationsPlugin.cancelAll();
-//   }
-//
-//   Future<void> _showOngoingNotification() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails('your channel id', 'your channel name',
-//         channelDescription: 'your channel description',
-//         importance: Importance.max,
-//         priority: Priority.high,
-//         ongoing: true,
-//         autoCancel: false);
-//     const NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++,
-//         'ongoing notification title',
-//         'ongoing notification body',
-//         notificationDetails);
-//   }
-//
-//   Future<void> _repeatNotification() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails(
-//         'repeating channel id', 'repeating channel name',
-//         channelDescription: 'repeating description');
-//     const NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.periodicallyShow(
-//         id++,
-//         'repeating title',
-//         'repeating body',
-//         RepeatInterval.everyMinute,
-//         notificationDetails,
-//         androidAllowWhileIdle: true);
-//   }
-//
-//   Future<void> _scheduleDailyTenAMNotification() async {
-//     await flutterLocalNotificationsPlugin.zonedSchedule(
-//         0,
-//         'daily scheduled notification title',
-//         'daily scheduled notification body',
-//         _nextInstanceOfTenAM(),
-//         const NotificationDetails(
-//           android: AndroidNotificationDetails('daily notification channel id',
-//               'daily notification channel name',
-//               channelDescription: 'daily notification description'),
-//         ),
-//         androidAllowWhileIdle: true,
-//         uiLocalNotificationDateInterpretation:
-//         UILocalNotificationDateInterpretation.absoluteTime,
-//         matchDateTimeComponents: DateTimeComponents.time);
-//   }
-//
-//   /// To test we don't validate past dates when using `matchDateTimeComponents`
-//   Future<void> _scheduleDailyTenAMLastYearNotification() async {
-//     await flutterLocalNotificationsPlugin.zonedSchedule(
-//         0,
-//         'daily scheduled notification title',
-//         'daily scheduled notification body',
-//         _nextInstanceOfTenAMLastYear(),
-//         const NotificationDetails(
-//           android: AndroidNotificationDetails('daily notification channel id',
-//               'daily notification channel name',
-//               channelDescription: 'daily notification description'),
-//         ),
-//         androidAllowWhileIdle: true,
-//         uiLocalNotificationDateInterpretation:
-//         UILocalNotificationDateInterpretation.absoluteTime,
-//         matchDateTimeComponents: DateTimeComponents.time);
-//   }
-//
-//   Future<void> _scheduleWeeklyTenAMNotification() async {
-//     await flutterLocalNotificationsPlugin.zonedSchedule(
-//         0,
-//         'weekly scheduled notification title',
-//         'weekly scheduled notification body',
-//         _nextInstanceOfTenAM(),
-//         const NotificationDetails(
-//           android: AndroidNotificationDetails('weekly notification channel id',
-//               'weekly notification channel name',
-//               channelDescription: 'weekly notificationdescription'),
-//         ),
-//         androidAllowWhileIdle: true,
-//         uiLocalNotificationDateInterpretation:
-//         UILocalNotificationDateInterpretation.absoluteTime,
-//         matchDateTimeComponents: DateTimeComponents.dayOfWeekAndTime);
-//   }
-//
-//   Future<void> _scheduleWeeklyMondayTenAMNotification() async {
-//     await flutterLocalNotificationsPlugin.zonedSchedule(
-//         0,
-//         'weekly scheduled notification title',
-//         'weekly scheduled notification body',
-//         _nextInstanceOfMondayTenAM(),
-//         const NotificationDetails(
-//           android: AndroidNotificationDetails('weekly notification channel id',
-//               'weekly notification channel name',
-//               channelDescription: 'weekly notificationdescription'),
-//         ),
-//         androidAllowWhileIdle: true,
-//         uiLocalNotificationDateInterpretation:
-//         UILocalNotificationDateInterpretation.absoluteTime,
-//         matchDateTimeComponents: DateTimeComponents.dayOfWeekAndTime);
-//   }
-//
-//   Future<void> _scheduleMonthlyMondayTenAMNotification() async {
-//     await flutterLocalNotificationsPlugin.zonedSchedule(
-//         0,
-//         'monthly scheduled notification title',
-//         'monthly scheduled notification body',
-//         _nextInstanceOfMondayTenAM(),
-//         const NotificationDetails(
-//           android: AndroidNotificationDetails('monthly notification channel id',
-//               'monthly notification channel name',
-//               channelDescription: 'monthly notificationdescription'),
-//         ),
-//         androidAllowWhileIdle: true,
-//         uiLocalNotificationDateInterpretation:
-//         UILocalNotificationDateInterpretation.absoluteTime,
-//         matchDateTimeComponents: DateTimeComponents.dayOfMonthAndTime);
-//   }
-//
-//   Future<void> _scheduleYearlyMondayTenAMNotification() async {
-//     await flutterLocalNotificationsPlugin.zonedSchedule(
-//         0,
-//         'yearly scheduled notification title',
-//         'yearly scheduled notification body',
-//         _nextInstanceOfMondayTenAM(),
-//         const NotificationDetails(
-//           android: AndroidNotificationDetails('yearly notification channel id',
-//               'yearly notification channel name',
-//               channelDescription: 'yearly notification description'),
-//         ),
-//         androidAllowWhileIdle: true,
-//         uiLocalNotificationDateInterpretation:
-//         UILocalNotificationDateInterpretation.absoluteTime,
-//         matchDateTimeComponents: DateTimeComponents.dateAndTime);
-//   }
-//
-//   tz.TZDateTime _nextInstanceOfTenAM() {
-//     final tz.TZDateTime now = tz.TZDateTime.now(tz.local);
-//     tz.TZDateTime scheduledDate =
-//     tz.TZDateTime(tz.local, now.year, now.month, now.day, 10);
-//     if (scheduledDate.isBefore(now)) {
-//       scheduledDate = scheduledDate.add(const Duration(days: 1));
-//     }
-//     return scheduledDate;
-//   }
-//
-//   tz.TZDateTime _nextInstanceOfTenAMLastYear() {
-//     final tz.TZDateTime now = tz.TZDateTime.now(tz.local);
-//     return tz.TZDateTime(tz.local, now.year - 1, now.month, now.day, 10);
-//   }
-//
-//   tz.TZDateTime _nextInstanceOfMondayTenAM() {
-//     tz.TZDateTime scheduledDate = _nextInstanceOfTenAM();
-//     while (scheduledDate.weekday != DateTime.monday) {
-//       scheduledDate = scheduledDate.add(const Duration(days: 1));
-//     }
-//     return scheduledDate;
-//   }
-//
-//   Future<void> _showNotificationWithNoBadge() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails('no badge channel', 'no badge name',
-//         channelDescription: 'no badge description',
-//         channelShowBadge: false,
-//         importance: Importance.max,
-//         priority: Priority.high,
-//         onlyAlertOnce: true);
-//     const NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'no badge title', 'no badge body', notificationDetails,
-//         payload: 'item x');
-//   }
-//
-//   Future<void> _showProgressNotification() async {
-//     id++;
-//     final int progressId = id;
-//     const int maxProgress = 5;
-//     for (int i = 0; i <= maxProgress; i++) {
-//       await Future<void>.delayed(const Duration(seconds: 1), () async {
-//         final AndroidNotificationDetails androidNotificationDetails =
-//         AndroidNotificationDetails('progress channel', 'progress channel',
-//             channelDescription: 'progress channel description',
-//             channelShowBadge: false,
-//             importance: Importance.max,
-//             priority: Priority.high,
-//             onlyAlertOnce: true,
-//             showProgress: true,
-//             maxProgress: maxProgress,
-//             progress: i);
-//         final NotificationDetails notificationDetails =
-//         NotificationDetails(android: androidNotificationDetails);
-//         await flutterLocalNotificationsPlugin.show(
-//             progressId,
-//             'progress notification title',
-//             'progress notification body',
-//             notificationDetails,
-//             payload: 'item x');
-//       });
-//     }
-//   }
-//
-//   Future<void> _showIndeterminateProgressNotification() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails(
-//         'indeterminate progress channel', 'indeterminate progress channel',
-//         channelDescription: 'indeterminate progress channel description',
-//         channelShowBadge: false,
-//         importance: Importance.max,
-//         priority: Priority.high,
-//         onlyAlertOnce: true,
-//         showProgress: true,
-//         indeterminate: true);
-//     const NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++,
-//         'indeterminate progress notification title',
-//         'indeterminate progress notification body',
-//         notificationDetails,
-//         payload: 'item x');
-//   }
-//
-//   Future<void> _showNotificationUpdateChannelDescription() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails('your channel id', 'your channel name',
-//         channelDescription: 'your updated channel description',
-//         importance: Importance.max,
-//         priority: Priority.high,
-//         channelAction: AndroidNotificationChannelAction.update);
-//     const NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++,
-//         'updated notification channel',
-//         'check settings to see updated channel description',
-//         notificationDetails,
-//         payload: 'item x');
-//   }
-//
-//   Future<void> _showPublicNotification() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails('your channel id', 'your channel name',
-//         channelDescription: 'your channel description',
-//         importance: Importance.max,
-//         priority: Priority.high,
-//         ticker: 'ticker',
-//         visibility: NotificationVisibility.public);
-//     const NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++,
-//         'public notification title',
-//         'public notification body',
-//         notificationDetails,
-//         payload: 'item x');
-//   }
-//
-//   Future<void> _showNotificationWithSubtitle() async {
-//     const DarwinNotificationDetails darwinNotificationDetails =
-//     DarwinNotificationDetails(subtitle: 'the subtitle');
-//     const NotificationDetails notificationDetails = NotificationDetails(
-//         iOS: darwinNotificationDetails, macOS: darwinNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++,
-//         'title of notification with a subtitle',
-//         'body of notification with a subtitle',
-//         notificationDetails,
-//         payload: 'item x');
-//   }
-//
-//   Future<void> _showNotificationWithIconBadge() async {
-//     const DarwinNotificationDetails darwinNotificationDetails =
-//     DarwinNotificationDetails(badgeNumber: 1);
-//     const NotificationDetails notificationDetails = NotificationDetails(
-//         iOS: darwinNotificationDetails, macOS: darwinNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'icon badge title', 'icon badge body', notificationDetails,
-//         payload: 'item x');
-//   }
-//
-//   Future<void> _showNotificationsWithThreadIdentifier() async {
-//     NotificationDetails buildNotificationDetailsForThread(
-//         String threadIdentifier,
-//         ) {
-//       final DarwinNotificationDetails darwinNotificationDetails =
-//       DarwinNotificationDetails(threadIdentifier: threadIdentifier);
-//       return NotificationDetails(
-//           iOS: darwinNotificationDetails, macOS: darwinNotificationDetails);
-//     }
-//
-//     final NotificationDetails thread1PlatformChannelSpecifics =
-//     buildNotificationDetailsForThread('thread1');
-//     final NotificationDetails thread2PlatformChannelSpecifics =
-//     buildNotificationDetailsForThread('thread2');
-//
-//     await flutterLocalNotificationsPlugin.show(id++, 'thread 1',
-//         'first notification', thread1PlatformChannelSpecifics);
-//     await flutterLocalNotificationsPlugin.show(id++, 'thread 1',
-//         'second notification', thread1PlatformChannelSpecifics);
-//     await flutterLocalNotificationsPlugin.show(id++, 'thread 1',
-//         'third notification', thread1PlatformChannelSpecifics);
-//
-//     await flutterLocalNotificationsPlugin.show(id++, 'thread 2',
-//         'first notification', thread2PlatformChannelSpecifics);
-//     await flutterLocalNotificationsPlugin.show(id++, 'thread 2',
-//         'second notification', thread2PlatformChannelSpecifics);
-//     await flutterLocalNotificationsPlugin.show(id++, 'thread 2',
-//         'third notification', thread2PlatformChannelSpecifics);
-//   }
-//
-//   Future<void> _showNotificationWithTimeSensitiveInterruptionLevel() async {
-//     const DarwinNotificationDetails darwinNotificationDetails =
-//     DarwinNotificationDetails(
-//         interruptionLevel: InterruptionLevel.timeSensitive);
-//     const NotificationDetails notificationDetails = NotificationDetails(
-//         iOS: darwinNotificationDetails, macOS: darwinNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++,
-//         'title of time sensitive notification',
-//         'body of time sensitive notification',
-//         notificationDetails,
-//         payload: 'item x');
-//   }
-//
-//   Future<void> _showNotificationWithoutTimestamp() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails('your channel id', 'your channel name',
-//         channelDescription: 'your channel description',
-//         importance: Importance.max,
-//         priority: Priority.high,
-//         showWhen: false);
-//     const NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'plain title', 'plain body', notificationDetails,
-//         payload: 'item x');
-//   }
-//
-//   Future<void> _showNotificationWithCustomTimestamp() async {
-//     final AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails(
-//       'your channel id',
-//       'your channel name',
-//       channelDescription: 'your channel description',
-//       importance: Importance.max,
-//       priority: Priority.high,
-//       when: DateTime.now().millisecondsSinceEpoch - 120 * 1000,
-//     );
-//     final NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'plain title', 'plain body', notificationDetails,
-//         payload: 'item x');
-//   }
-//
-//   Future<void> _showNotificationWithCustomSubText() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails(
-//       'your channel id',
-//       'your channel name',
-//       channelDescription: 'your channel description',
-//       importance: Importance.max,
-//       priority: Priority.high,
-//       showWhen: false,
-//       subText: 'custom subtext',
-//     );
-//     const NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'plain title', 'plain body', notificationDetails,
-//         payload: 'item x');
-//   }
-//
-//   Future<void> _showNotificationWithChronometer() async {
-//     final AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails(
-//       'your channel id',
-//       'your channel name',
-//       channelDescription: 'your channel description',
-//       importance: Importance.max,
-//       priority: Priority.high,
-//       when: DateTime.now().millisecondsSinceEpoch - 120 * 1000,
-//       usesChronometer: true,
-//     );
-//     final NotificationDetails notificationDetails =
-//     NotificationDetails(android: androidNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++, 'plain title', 'plain body', notificationDetails,
-//         payload: 'item x');
-//   }
-//
-//   Future<void> _showNotificationWithAttachment() async {
-//     final String bigPicturePath = await _downloadAndSaveFile(
-//         'https://via.placeholder.com/600x200', 'bigPicture.jpg');
-//     final DarwinNotificationDetails darwinNotificationDetails =
-//     DarwinNotificationDetails(attachments: <DarwinNotificationAttachment>[
-//       DarwinNotificationAttachment(bigPicturePath)
-//     ]);
-//     final NotificationDetails notificationDetails = NotificationDetails(
-//         iOS: darwinNotificationDetails, macOS: darwinNotificationDetails);
-//     await flutterLocalNotificationsPlugin.show(
-//         id++,
-//         'notification with attachment title',
-//         'notification with attachment body',
-//         notificationDetails);
-//   }
-//
-//   Future<void> _createNotificationChannelGroup() async {
-//     const String channelGroupId = 'your channel group id';
-//     // create the group first
-//     const AndroidNotificationChannelGroup androidNotificationChannelGroup =
-//     AndroidNotificationChannelGroup(
-//         channelGroupId, 'your channel group name',
-//         description: 'your channel group description');
-//     await flutterLocalNotificationsPlugin
-//         .resolvePlatformSpecificImplementation<
-//         AndroidFlutterLocalNotificationsPlugin>()!
-//         .createNotificationChannelGroup(androidNotificationChannelGroup);
-//
-//     // create channels associated with the group
-//     await flutterLocalNotificationsPlugin
-//         .resolvePlatformSpecificImplementation<
-//         AndroidFlutterLocalNotificationsPlugin>()!
-//         .createNotificationChannel(const AndroidNotificationChannel(
-//         'grouped channel id 1', 'grouped channel name 1',
-//         description: 'grouped channel description 1',
-//         groupId: channelGroupId));
-//
-//     await flutterLocalNotificationsPlugin
-//         .resolvePlatformSpecificImplementation<
-//         AndroidFlutterLocalNotificationsPlugin>()!
-//         .createNotificationChannel(const AndroidNotificationChannel(
-//         'grouped channel id 2', 'grouped channel name 2',
-//         description: 'grouped channel description 2',
-//         groupId: channelGroupId));
-//
-//     await showDialog<void>(
-//         context: context,
-//         builder: (BuildContext context) => AlertDialog(
-//           content: Text('Channel group with name '
-//               '${androidNotificationChannelGroup.name} created'),
-//           actions: <Widget>[
-//             TextButton(
-//               onPressed: () {
-//                 Navigator.of(context).pop();
-//               },
-//               child: const Text('OK'),
-//             ),
-//           ],
-//         ));
-//   }
-//
-//   Future<void> _deleteNotificationChannelGroup() async {
-//     const String channelGroupId = 'your channel group id';
-//     await flutterLocalNotificationsPlugin
-//         .resolvePlatformSpecificImplementation<
-//         AndroidFlutterLocalNotificationsPlugin>()
-//         ?.deleteNotificationChannelGroup(channelGroupId);
-//
-//     await showDialog<void>(
-//       context: context,
-//       builder: (BuildContext context) => AlertDialog(
-//         content: const Text('Channel group with id $channelGroupId deleted'),
-//         actions: <Widget>[
-//           TextButton(
-//             onPressed: () {
-//               Navigator.of(context).pop();
-//             },
-//             child: const Text('OK'),
-//           ),
-//         ],
-//       ),
-//     );
-//   }
-//
-//   Future<void> _startForegroundService() async {
-//     const AndroidNotificationDetails androidNotificationDetails =
-//     AndroidNotificationDetails('your channel id', 'your channel name',
-//         channelDescription: 'your channel description',
-//         importance: Importance.max,
-//         priority: Priority.high,
-//         ticker: 'ticker');
-//     await flutterLocalNotificationsPlugin
-//         .resolvePlatformSpecificImplementation<
-//         AndroidFlutterLocalNotificationsPlugin>()
-//         ?.startForegroundService(1, 'plain title', 'plain body',
-//         notificationDetails: androidNotificationDetails, payload: 'item x');
-//   }
-//
-//   Future<void> _startForegroundServiceWithBlueBackgroundNotification() async {
-//     const AndroidNotificationDetails androidPlatformChannelSpecifics =
-//     AndroidNotificationDetails(
-//       'your channel id',
-//       'your channel name',
-//       channelDescription: 'color background channel description',
-//       importance: Importance.max,
-//       priority: Priority.high,
-//       ticker: 'ticker',
-//       color: Colors.blue,
-//       colorized: true,
-//     );
-//
-//     /// only using foreground service can color the background
-//     await flutterLocalNotificationsPlugin
-//         .resolvePlatformSpecificImplementation<
-//         AndroidFlutterLocalNotificationsPlugin>()
-//         ?.startForegroundService(
-//         1, 'colored background text title', 'colored background text body',
-//         notificationDetails: androidPlatformChannelSpecifics,
-//         payload: 'item x');
-//   }
-//
-//   Future<void> _stopForegroundService() async {
-//     await flutterLocalNotificationsPlugin
-//         .resolvePlatformSpecificImplementation<
-//         AndroidFlutterLocalNotificationsPlugin>()
-//         ?.stopForegroundService();
-//   }
-//
-//   Future<void> _createNotificationChannel() async {
-//     const AndroidNotificationChannel androidNotificationChannel =
-//     AndroidNotificationChannel(
-//       'your channel id 2',
-//       'your channel name 2',
-//       description: 'your channel description 2',
-//     );
-//     await flutterLocalNotificationsPlugin
-//         .resolvePlatformSpecificImplementation<
-//         AndroidFlutterLocalNotificationsPlugin>()
-//         ?.createNotificationChannel(androidNotificationChannel);
-//
-//     await showDialog<void>(
-//         context: context,
-//         builder: (BuildContext context) => AlertDialog(
-//           content:
-//           Text('Channel with name ${androidNotificationChannel.name} '
-//               'created'),
-//           actions: <Widget>[
-//             TextButton(
-//               onPressed: () {
-//                 Navigator.of(context).pop();
-//               },
-//               child: const Text('OK'),
-//             ),
-//           ],
-//         ));
-//   }
-//
-//   Future<void> _areNotifcationsEnabledOnAndroid() async {
-//     final bool? areEnabled = await flutterLocalNotificationsPlugin
-//         .resolvePlatformSpecificImplementation<
-//         AndroidFlutterLocalNotificationsPlugin>()
-//         ?.areNotificationsEnabled();
-//     await showDialog<void>(
-//         context: context,
-//         builder: (BuildContext context) => AlertDialog(
-//           content: Text(areEnabled == null
-//               ? 'ERROR: received null'
-//               : (areEnabled
-//               ? 'Notifications are enabled'
-//               : 'Notifications are NOT enabled')),
-//           actions: <Widget>[
-//             TextButton(
-//               onPressed: () {
-//                 Navigator.of(context).pop();
-//               },
-//               child: const Text('OK'),
-//             ),
-//           ],
-//         ));
-//   }
-//
-//   Future<void> _deleteNotificationChannel() async {
-//     const String channelId = 'your channel id 2';
-//     await flutterLocalNotificationsPlugin
-//         .resolvePlatformSpecificImplementation<
-//         AndroidFlutterLocalNotificationsPlugin>()
-//         ?.deleteNotificationChannel(channelId);
-//
-//     await showDialog<void>(
-//       context: context,
-//       builder: (BuildContext context) => AlertDialog(
-//         content: const Text('Channel with id $channelId deleted'),
-//         actions: <Widget>[
-//           TextButton(
-//             onPressed: () {
-//               Navigator.of(context).pop();
-//             },
-//             child: const Text('OK'),
-//           ),
-//         ],
-//       ),
-//     );
-//   }
-//
-//
-//
-//
-//   String _formatPerson(Person? person) {
-//     if (person == null) {
-//       return 'null';
-//     }
-//
-//     final List<String> attrs = <String>[];
-//     if (person.name != null) {
-//       attrs.add('name: "${person.name}"');
-//     }
-//     if (person.uri != null) {
-//       attrs.add('uri: "${person.uri}"');
-//     }
-//     if (person.key != null) {
-//       attrs.add('key: "${person.key}"');
-//     }
-//     if (person.important) {
-//       attrs.add('important: true');
-//     }
-//     if (person.bot) {
-//       attrs.add('bot: true');
-//     }
-//     if (person.icon != null) {
-//       attrs.add('icon: ${_formatAndroidIcon(person.icon)}');
-//     }
-//     return 'Person(${attrs.join(', ')})';
-//   }
-//
-//   String _formatAndroidIcon(Object? icon) {
-//     if (icon == null) {
-//       return 'null';
-//     }
-//     if (icon is DrawableResourceAndroidIcon) {
-//       return 'DrawableResourceAndroidIcon("${icon.data}")';
-//     } else if (icon is ContentUriAndroidIcon) {
-//       return 'ContentUriAndroidIcon("${icon.data}")';
-//     } else {
-//       return 'AndroidIcon()';
-//     }
-//   }
-//
-//   Future<void> _getNotificationChannels() async {
-//     final Widget notificationChannelsDialogContent =
-//     await _getNotificationChannelsDialogContent();
-//     await showDialog<void>(
-//       context: context,
-//       builder: (BuildContext context) => AlertDialog(
-//         content: notificationChannelsDialogContent,
-//         actions: <Widget>[
-//           TextButton(
-//             onPressed: () {
-//               Navigator.of(context).pop();
-//             },
-//             child: const Text('OK'),
-//           ),
-//         ],
-//       ),
-//     );
-//   }
-//
-//   Future<Widget> _getNotificationChannelsDialogContent() async {
-//     try {
-//       final List<AndroidNotificationChannel>? channels =
-//       await flutterLocalNotificationsPlugin
-//           .resolvePlatformSpecificImplementation<
-//           AndroidFlutterLocalNotificationsPlugin>()!
-//           .getNotificationChannels();
-//
-//       return Container(
-//         width: double.maxFinite,
-//         child: ListView(
-//           children: <Widget>[
-//             const Text(
-//               'Notifications Channels',
-//               style: TextStyle(fontWeight: FontWeight.bold),
-//             ),
-//             const Divider(color: Colors.black),
-//             if (channels?.isEmpty ?? true)
-//               const Text('No notification channels')
-//             else
-//               for (AndroidNotificationChannel channel in channels!)
-//                 Column(
-//                   crossAxisAlignment: CrossAxisAlignment.start,
-//                   children: <Widget>[
-//                     Text('id: ${channel.id}\n'
-//                         'name: ${channel.name}\n'
-//                         'description: ${channel.description}\n'
-//                         'groupId: ${channel.groupId}\n'
-//                         'importance: ${channel.importance.value}\n'
-//                         'playSound: ${channel.playSound}\n'
-//                         'sound: ${channel.sound?.sound}\n'
-//                         'enableVibration: ${channel.enableVibration}\n'
-//                         'vibrationPattern: ${channel.vibrationPattern}\n'
-//                         'showBadge: ${channel.showBadge}\n'
-//                         'enableLights: ${channel.enableLights}\n'
-//                         'ledColor: ${channel.ledColor}\n'),
-//                     const Divider(color: Colors.black),
-//                   ],
-//                 ),
-//           ],
-//         ),
-//       );
-//     } on PlatformException catch (error) {
-//       return Text(
-//         'Error calling "getNotificationChannels"\n'
-//             'code: ${error.code}\n'
-//             'message: ${error.message}',
-//       );
-//     }
-//   }
-//
-//   Future<void> _showNotificationWithNumber() async {
-//     const AndroidNotificationDetails androidPlatformChannelSpecifics =
-//     AndroidNotificationDetails('your channel id', 'your channel name',
-//         channelDescription: 'your channel description',
-//         importance: Importance.max,
-//         priority: Priority.high,
-//         number: 1);
-//     const NotificationDetails platformChannelSpecifics =
-//     NotificationDetails(android: androidPlatformChannelSpecifics);
-//     await flutterLocalNotificationsPlugin.show(
-//         0, 'icon badge title', 'icon badge body', platformChannelSpecifics,
-//         payload: 'item x');
-//   }
-//
-//   Future<void> _showNotificationWithAudioAttributeAlarm() async {
-//     const AndroidNotificationDetails androidPlatformChannelSpecifics =
-//     AndroidNotificationDetails(
-//       'your alarm channel id',
-//       'your alarm channel name',
-//       channelDescription: 'your alarm channel description',
-//       importance: Importance.max,
-//       priority: Priority.high,
-//       audioAttributesUsage: AudioAttributesUsage.alarm,
-//     );
-//     const NotificationDetails platformChannelSpecifics =
-//     NotificationDetails(android: androidPlatformChannelSpecifics);
-//     await flutterLocalNotificationsPlugin.show(
-//       0,
-//       'notification sound controlled by alarm volume',
-//       'alarm notification sound body',
-//       platformChannelSpecifics,
-//     );
-//   }
-// }
-//
-// Future<void> _showLinuxNotificationWithBodyMarkup() async {
-//   await flutterLocalNotificationsPlugin.show(
-//     id++,
-//     'notification with body markup',
-//     '<b>bold text</b>\n'
-//         '<i>italic text</i>\n'
-//         '<u>underline text</u>\n'
-//         'https://example.com\n'
-//         '<a href="https://example.com">example.com</a>',
-//     null,
-//   );
-// }
-//
-// Future<void> _showLinuxNotificationWithCategory() async {
-//   const LinuxNotificationDetails linuxPlatformChannelSpecifics =
-//   LinuxNotificationDetails(
-//     category: LinuxNotificationCategory.emailArrived,
-//   );
-//   const NotificationDetails notificationDetails = NotificationDetails(
-//     linux: linuxPlatformChannelSpecifics,
-//   );
-//   await flutterLocalNotificationsPlugin.show(
-//     id++,
-//     'notification with category',
-//     null,
-//     notificationDetails,
-//   );
-// }
-//
-// Future<void> _showLinuxNotificationWithByteDataIcon() async {
-//   final ByteData assetIcon = await rootBundle.load(
-//     'icons/app_icon_density.png',
-//   );
-//   final image.Image? iconData = image.decodePng(
-//     assetIcon.buffer.asUint8List().toList(),
-//   );
-//   final Uint8List iconBytes = iconData!.getBytes();
-//   final LinuxNotificationDetails linuxPlatformChannelSpecifics =
-//   LinuxNotificationDetails(
-//     icon: ByteDataLinuxIcon(
-//       LinuxRawIconData(
-//         data: iconBytes,
-//         width: iconData.width,
-//         height: iconData.height,
-//         channels: 4, // The icon has an alpha channel
-//         hasAlpha: true,
-//       ),
-//     ),
-//   );
-//   final NotificationDetails notificationDetails = NotificationDetails(
-//     linux: linuxPlatformChannelSpecifics,
-//   );
-//   await flutterLocalNotificationsPlugin.show(
-//     id++,
-//     'notification with byte data icon',
-//     null,
-//     notificationDetails,
-//   );
-// }
-//
-// Future<void> _showLinuxNotificationWithPathIcon(String path) async {
-//   final LinuxNotificationDetails linuxPlatformChannelSpecifics =
-//   LinuxNotificationDetails(icon: FilePathLinuxIcon(path));
-//   final NotificationDetails platformChannelSpecifics = NotificationDetails(
-//     linux: linuxPlatformChannelSpecifics,
-//   );
-//   await flutterLocalNotificationsPlugin.show(
-//     0,
-//     'notification with file path icon',
-//     null,
-//     platformChannelSpecifics,
-//   );
-// }
-//
-// Future<void> _showLinuxNotificationWithThemeIcon() async {
-//   final LinuxNotificationDetails linuxPlatformChannelSpecifics =
-//   LinuxNotificationDetails(
-//     icon: ThemeLinuxIcon('media-eject'),
-//   );
-//   final NotificationDetails notificationDetails = NotificationDetails(
-//     linux: linuxPlatformChannelSpecifics,
-//   );
-//   await flutterLocalNotificationsPlugin.show(
-//     id++,
-//     'notification with theme icon',
-//     null,
-//     notificationDetails,
-//   );
-// }
-//
-// Future<void> _showLinuxNotificationWithThemeSound() async {
-//   final LinuxNotificationDetails linuxPlatformChannelSpecifics =
-//   LinuxNotificationDetails(
-//     sound: ThemeLinuxSound('message-new-email'),
-//   );
-//   final NotificationDetails notificationDetails = NotificationDetails(
-//     linux: linuxPlatformChannelSpecifics,
-//   );
-//   await flutterLocalNotificationsPlugin.show(
-//     id++,
-//     'notification with theme sound',
-//     null,
-//     notificationDetails,
-//   );
-// }
-//
-// Future<void> _showLinuxNotificationWithCriticalUrgency() async {
-//   const LinuxNotificationDetails linuxPlatformChannelSpecifics =
-//   LinuxNotificationDetails(
-//     urgency: LinuxNotificationUrgency.critical,
-//   );
-//   const NotificationDetails notificationDetails = NotificationDetails(
-//     linux: linuxPlatformChannelSpecifics,
-//   );
-//   await flutterLocalNotificationsPlugin.show(
-//     id++,
-//     'notification with critical urgency',
-//     null,
-//     notificationDetails,
-//   );
-// }
-//
-// Future<void> _showLinuxNotificationWithTimeout() async {
-//   final LinuxNotificationDetails linuxPlatformChannelSpecifics =
-//   LinuxNotificationDetails(
-//     timeout: LinuxNotificationTimeout.fromDuration(
-//       const Duration(seconds: 1),
-//     ),
-//   );
-//   final NotificationDetails notificationDetails = NotificationDetails(
-//     linux: linuxPlatformChannelSpecifics,
-//   );
-//   await flutterLocalNotificationsPlugin.show(
-//     id++,
-//     'notification with timeout',
-//     null,
-//     notificationDetails,
-//   );
-// }
-//
-// Future<void> _showLinuxNotificationSuppressSound() async {
-//   const LinuxNotificationDetails linuxPlatformChannelSpecifics =
-//   LinuxNotificationDetails(
-//     suppressSound: true,
-//   );
-//   const NotificationDetails notificationDetails = NotificationDetails(
-//     linux: linuxPlatformChannelSpecifics,
-//   );
-//   await flutterLocalNotificationsPlugin.show(
-//     id++,
-//     'suppress notification sound',
-//     null,
-//     notificationDetails,
-//   );
-// }
-//
-// Future<void> _showLinuxNotificationTransient() async {
-//   const LinuxNotificationDetails linuxPlatformChannelSpecifics =
-//   LinuxNotificationDetails(
-//     transient: true,
-//   );
-//   const NotificationDetails notificationDetails = NotificationDetails(
-//     linux: linuxPlatformChannelSpecifics,
-//   );
-//   await flutterLocalNotificationsPlugin.show(
-//     id++,
-//     'transient notification',
-//     null,
-//     notificationDetails,
-//   );
-// }
-//
-// Future<void> _showLinuxNotificationResident() async {
-//   const LinuxNotificationDetails linuxPlatformChannelSpecifics =
-//   LinuxNotificationDetails(
-//     resident: true,
-//   );
-//   const NotificationDetails notificationDetails = NotificationDetails(
-//     linux: linuxPlatformChannelSpecifics,
-//   );
-//   await flutterLocalNotificationsPlugin.show(
-//     id++,
-//     'resident notification',
-//     null,
-//     notificationDetails,
-//   );
-// }
-//
-// Future<void> _showLinuxNotificationDifferentLocation() async {
-//   const LinuxNotificationDetails linuxPlatformChannelSpecifics =
-//   LinuxNotificationDetails(location: LinuxNotificationLocation(10, 10));
-//   const NotificationDetails notificationDetails = NotificationDetails(
-//     linux: linuxPlatformChannelSpecifics,
-//   );
-//   await flutterLocalNotificationsPlugin.show(
-//     id++,
-//     'notification on different screen location',
-//     null,
-//     notificationDetails,
-//   );
-// }
-//
-// Future<LinuxServerCapabilities> getLinuxCapabilities() =>
-//     flutterLocalNotificationsPlugin
-//         .resolvePlatformSpecificImplementation<
-//         LinuxFlutterLocalNotificationsPlugin>()!
-//         .getCapabilities();
-//
-// class SecondPage extends StatefulWidget {
-//   const SecondPage(
-//       this.payload, {
-//         Key? key,
-//       }) : super(key: key);
-//
-//   static const String routeName = '/secondPage';
-//
-//   final String? payload;
-//
-//   @override
-//   State<StatefulWidget> createState() => SecondPageState();
-// }
-//
-// class SecondPageState extends State<SecondPage> {
-//   String? _payload;
-//
-//   @override
-//   void initState() {
-//     super.initState();
-//     _payload = widget.payload;
-//   }
-//
-//   @override
-//   Widget build(BuildContext context) => Scaffold(
-//     appBar: AppBar(
-//       title: const Text('Second Screen'),
-//     ),
-//     body: Center(
-//       child: Column(
-//         mainAxisSize: MainAxisSize.min,
-//         children: <Widget>[
-//           Text('payload ${_payload ?? ''}'),
-//           ElevatedButton(
-//             onPressed: () {
-//               Navigator.pop(context);
-//             },
-//             child: const Text('Go back!'),
-//           ),
-//         ],
-//       ),
-//     ),
-//   );
-// }
-//
-// class _InfoValueString extends StatelessWidget {
-//   const _InfoValueString({
-//     required this.title,
-//     required this.value,
-//     Key? key,
-//   }) : super(key: key);
-//
-//   final String title;
-//   final Object? value;
-//
-//   @override
-//   Widget build(BuildContext context) => Padding(
-//     padding: const EdgeInsets.fromLTRB(0, 0, 0, 8),
-//     child: Text.rich(
-//       TextSpan(
-//         children: <InlineSpan>[
-//           TextSpan(
-//             text: '$title ',
-//             style: const TextStyle(
-//               fontWeight: FontWeight.bold,
-//             ),
-//           ),
-//           TextSpan(
-//             text: '$value',
-//           )
-//         ],
-//       ),
-//     ),
-//   );
-// }
Index: android/app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.sultan_cab\">\r\n\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" />\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_BACKGROUND_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.READ_SMS\" />\r\n\r\n    <queries>\r\n        <!-- If your app checks for SMS support -->\r\n        <intent>\r\n            <action android:name=\"android.intent.action.VIEW\" />\r\n            <data android:scheme=\"sms\" />\r\n        </intent>\r\n        <!-- If your app checks for call support -->\r\n        <intent>\r\n            <action android:name=\"android.intent.action.VIEW\" />\r\n            <data android:scheme=\"tel\" />\r\n        </intent>\r\n    </queries>\r\n\r\n\r\n    <application\r\n        android:label=\"Truc-King\"\r\n        android:name=\"${applicationName}\"\r\n        android:icon=\"@mipmap/launcher_icon\">\r\n\r\n        <meta-data android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"AIzaSyCqcZ7xj1BPJeC3Uyo2coGi9qaGNpyU_EA\"/>\r\n\r\n\r\n\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\"\r\n            android:launchMode=\"singleTop\"\r\n            android:theme=\"@style/LaunchTheme\"\r\n            android:configChanges=\"orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode\"\r\n            android:hardwareAccelerated=\"true\"\r\n            android:windowSoftInputMode=\"adjustResize\">\r\n\r\n            <meta-data\r\n              android:name=\"io.flutter.embedding.android.NormalTheme\"\r\n              android:resource=\"@style/NormalTheme\"\r\n              />\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\"/>\r\n                <category android:name=\"android.intent.category.LAUNCHER\"/>\r\n            </intent-filter>\r\n        </activity>\r\n        <!-- Don't delete the meta-data below.\r\n             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->\r\n        <meta-data\r\n            android:name=\"flutterEmbedding\"\r\n            android:value=\"2\" />\r\n    </application>\r\n</manifest>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/app/src/main/AndroidManifest.xml b/android/app/src/main/AndroidManifest.xml
--- a/android/app/src/main/AndroidManifest.xml	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ b/android/app/src/main/AndroidManifest.xml	(date 1679551617836)
@@ -1,5 +1,6 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.sultan_cab">
+    xmlns:tools="http://schemas.android.com/tools"
+    package="com.futurevision.trucking">
 
 
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
@@ -26,11 +27,14 @@
 
     <application
         android:label="Truc-King"
+        android:usesCleartextTraffic="true"
         android:name="${applicationName}"
-        android:icon="@mipmap/launcher_icon">
+        android:icon="@mipmap/launcher_icon"
+        tools:targetApi="m">
 
         <meta-data android:name="com.google.android.geo.API_KEY"
-            android:value="AIzaSyCqcZ7xj1BPJeC3Uyo2coGi9qaGNpyU_EA"/>
+            android:value="AIzaSyAzMjxu3qpafMCKKI6TRd7GAB65KyTdM84"/>
+<!--            android:value="AIzaSyCqcZ7xj1BPJeC3Uyo2coGi9qaGNpyU_EA"/>-->
 
 
 
@@ -41,7 +45,8 @@
             android:theme="@style/LaunchTheme"
             android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
             android:hardwareAccelerated="true"
-            android:windowSoftInputMode="adjustResize">
+            android:windowSoftInputMode="adjustResize"
+            tools:ignore="UnusedAttribute">
 
             <meta-data
               android:name="io.flutter.embedding.android.NormalTheme"
Index: .flutter-plugins-dependencies
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"info\":\"This is a generated file; do not edit or check into version control.\",\"plugins\":{\"ios\":[{\"name\":\"assets_audio_player\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\assets_audio_player-3.0.6\\\\\\\\\",\"native_build\":true,\"dependencies\":[\"assets_audio_player_web\"]},{\"name\":\"assets_audio_player_web\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\assets_audio_player_web-3.0.6\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"firebase_auth\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\firebase_auth-4.2.9\\\\\\\\\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"firebase_core\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\firebase_core-2.7.0\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"firebase_messaging\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\firebase_messaging-14.2.5\\\\\\\\\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"flutter_local_notifications\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\flutter_local_notifications-13.0.0\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"fluttertoast\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\fluttertoast-8.2.1\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"geocoding\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\geocoding-2.0.5\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"geolocator_apple\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\geolocator_apple-2.2.5\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"google_maps_flutter_ios\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\google_maps_flutter_ios-2.2.0\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"google_sign_in_ios\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\google_sign_in_ios-5.6.0\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"image_cropper\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\image_cropper-3.0.1\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"image_picker_ios\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\image_picker_ios-0.8.7\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"location\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\location-4.4.0\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"package_info_plus\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\package_info_plus-1.4.3+1\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"path_provider_foundation\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\path_provider_foundation-2.1.2\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"permission_handler_apple\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\permission_handler_apple-9.0.7\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"razorpay_flutter\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\razorpay_flutter-1.3.4\\\\\\\\\",\"native_build\":true,\"dependencies\":[\"fluttertoast\",\"package_info_plus\"]},{\"name\":\"shared_preferences_foundation\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\shared_preferences_foundation-2.1.4\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"smart_auth\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\smart_auth-1.0.8\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"sms_autofill\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\sms_autofill-2.3.0\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"sqflite\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\sqflite-2.2.5\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"url_launcher_ios\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\url_launcher_ios-6.1.1\\\\\\\\\",\"native_build\":true,\"dependencies\":[]}],\"android\":[{\"name\":\"assets_audio_player\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\assets_audio_player-3.0.6\\\\\\\\\",\"native_build\":true,\"dependencies\":[\"assets_audio_player_web\"]},{\"name\":\"assets_audio_player_web\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\assets_audio_player_web-3.0.6\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"firebase_auth\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\firebase_auth-4.2.9\\\\\\\\\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"firebase_core\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\firebase_core-2.7.0\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"firebase_messaging\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\firebase_messaging-14.2.5\\\\\\\\\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"flutter_local_notifications\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\flutter_local_notifications-13.0.0\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"flutter_plugin_android_lifecycle\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\flutter_plugin_android_lifecycle-2.0.9\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"fluttertoast\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\fluttertoast-8.2.1\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"geocoding\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\geocoding-2.0.5\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"geolocator_android\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\geolocator_android-4.1.7\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"google_maps_flutter_android\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\google_maps_flutter_android-2.4.8\\\\\\\\\",\"native_build\":true,\"dependencies\":[\"flutter_plugin_android_lifecycle\"]},{\"name\":\"google_sign_in_android\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\google_sign_in_android-6.1.7\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"image_cropper\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\image_cropper-3.0.1\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"image_picker_android\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\image_picker_android-0.8.5+9\\\\\\\\\",\"native_build\":true,\"dependencies\":[\"flutter_plugin_android_lifecycle\"]},{\"name\":\"location\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\location-4.4.0\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"package_info_plus\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\package_info_plus-1.4.3+1\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"path_provider_android\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\path_provider_android-2.0.23\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"permission_handler_android\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\permission_handler_android-10.2.0\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"razorpay_flutter\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\razorpay_flutter-1.3.4\\\\\\\\\",\"native_build\":true,\"dependencies\":[\"fluttertoast\",\"package_info_plus\"]},{\"name\":\"shared_preferences_android\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\shared_preferences_android-2.0.16\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"smart_auth\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\smart_auth-1.0.8\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"sms_autofill\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\sms_autofill-2.3.0\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"sqflite\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\sqflite-2.2.5\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"url_launcher_android\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\url_launcher_android-6.0.24\\\\\\\\\",\"native_build\":true,\"dependencies\":[]}],\"macos\":[{\"name\":\"assets_audio_player\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\assets_audio_player-3.0.6\\\\\\\\\",\"native_build\":true,\"dependencies\":[\"assets_audio_player_web\"]},{\"name\":\"assets_audio_player_web\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\assets_audio_player_web-3.0.6\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"firebase_auth\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\firebase_auth-4.2.9\\\\\\\\\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"firebase_core\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\firebase_core-2.7.0\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"firebase_messaging\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\firebase_messaging-14.2.5\\\\\\\\\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"flutter_local_notifications\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\flutter_local_notifications-13.0.0\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"geolocator_apple\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\geolocator_apple-2.2.5\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"location\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\location-4.4.0\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"package_info_plus_macos\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\package_info_plus_macos-1.3.0\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"path_provider_foundation\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\path_provider_foundation-2.1.2\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"shared_preferences_foundation\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\shared_preferences_foundation-2.1.4\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"smart_auth\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\smart_auth-1.0.8\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"sqflite\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\sqflite-2.2.5\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"url_launcher_macos\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\url_launcher_macos-3.0.3\\\\\\\\\",\"native_build\":true,\"dependencies\":[]}],\"linux\":[{\"name\":\"package_info_plus_linux\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\package_info_plus_linux-1.0.5\\\\\\\\\",\"native_build\":false,\"dependencies\":[]},{\"name\":\"path_provider_linux\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\path_provider_linux-2.1.9\\\\\\\\\",\"native_build\":false,\"dependencies\":[]},{\"name\":\"shared_preferences_linux\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\shared_preferences_linux-2.1.4\\\\\\\\\",\"native_build\":false,\"dependencies\":[\"path_provider_linux\"]},{\"name\":\"smart_auth\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\smart_auth-1.0.8\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"url_launcher_linux\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\url_launcher_linux-3.0.3\\\\\\\\\",\"native_build\":true,\"dependencies\":[]}],\"windows\":[{\"name\":\"geolocator_windows\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\geolocator_windows-0.1.1\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"package_info_plus_windows\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\package_info_plus_windows-2.1.0\\\\\\\\\",\"native_build\":false,\"dependencies\":[]},{\"name\":\"path_provider_windows\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\path_provider_windows-2.1.4\\\\\\\\\",\"native_build\":false,\"dependencies\":[]},{\"name\":\"permission_handler_windows\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\permission_handler_windows-0.1.2\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"shared_preferences_windows\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\shared_preferences_windows-2.1.4\\\\\\\\\",\"native_build\":false,\"dependencies\":[\"path_provider_windows\"]},{\"name\":\"smart_auth\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\smart_auth-1.0.8\\\\\\\\\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"url_launcher_windows\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\url_launcher_windows-3.0.4\\\\\\\\\",\"native_build\":true,\"dependencies\":[]}],\"web\":[{\"name\":\"assets_audio_player_web\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\assets_audio_player_web-3.0.6\\\\\\\\\",\"dependencies\":[]},{\"name\":\"firebase_auth_web\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\firebase_auth_web-5.2.8\\\\\\\\\",\"dependencies\":[\"firebase_core_web\"]},{\"name\":\"firebase_core_web\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\firebase_core_web-2.2.1\\\\\\\\\",\"dependencies\":[]},{\"name\":\"firebase_messaging_web\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\firebase_messaging_web-3.2.15\\\\\\\\\",\"dependencies\":[\"firebase_core_web\"]},{\"name\":\"fluttertoast\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\fluttertoast-8.2.1\\\\\\\\\",\"dependencies\":[]},{\"name\":\"geolocator_web\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\geolocator_web-2.1.6\\\\\\\\\",\"dependencies\":[]},{\"name\":\"google_sign_in_web\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\google_sign_in_web-0.11.0+1\\\\\\\\\",\"dependencies\":[]},{\"name\":\"image_cropper_for_web\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\image_cropper_for_web-1.0.3\\\\\\\\\",\"dependencies\":[]},{\"name\":\"image_picker_for_web\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\image_picker_for_web-2.1.11\\\\\\\\\",\"dependencies\":[]},{\"name\":\"location_web\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\location_web-3.1.1\\\\\\\\\",\"dependencies\":[]},{\"name\":\"package_info_plus_web\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\package_info_plus_web-1.0.6\\\\\\\\\",\"dependencies\":[]},{\"name\":\"shared_preferences_web\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\shared_preferences_web-2.0.5\\\\\\\\\",\"dependencies\":[]},{\"name\":\"smart_auth\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\smart_auth-1.0.8\\\\\\\\\",\"dependencies\":[]},{\"name\":\"url_launcher_web\",\"path\":\"C:\\\\\\\\Users\\\\\\\\Programmer Force\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Pub\\\\\\\\Cache\\\\\\\\hosted\\\\\\\\pub.dev\\\\\\\\url_launcher_web-2.0.15\\\\\\\\\",\"dependencies\":[]}]},\"dependencyGraph\":[{\"name\":\"assets_audio_player\",\"dependencies\":[\"path_provider\",\"assets_audio_player_web\"]},{\"name\":\"assets_audio_player_web\",\"dependencies\":[]},{\"name\":\"firebase_auth\",\"dependencies\":[\"firebase_auth_web\",\"firebase_core\"]},{\"name\":\"firebase_auth_web\",\"dependencies\":[\"firebase_core\",\"firebase_core_web\"]},{\"name\":\"firebase_core\",\"dependencies\":[\"firebase_core_web\"]},{\"name\":\"firebase_core_web\",\"dependencies\":[]},{\"name\":\"firebase_messaging\",\"dependencies\":[\"firebase_core\",\"firebase_messaging_web\"]},{\"name\":\"firebase_messaging_web\",\"dependencies\":[\"firebase_core\",\"firebase_core_web\"]},{\"name\":\"flutter_local_notifications\",\"dependencies\":[]},{\"name\":\"flutter_plugin_android_lifecycle\",\"dependencies\":[]},{\"name\":\"fluttertoast\",\"dependencies\":[]},{\"name\":\"geocoding\",\"dependencies\":[]},{\"name\":\"geolocator\",\"dependencies\":[\"geolocator_android\",\"geolocator_apple\",\"geolocator_web\",\"geolocator_windows\"]},{\"name\":\"geolocator_android\",\"dependencies\":[]},{\"name\":\"geolocator_apple\",\"dependencies\":[]},{\"name\":\"geolocator_web\",\"dependencies\":[]},{\"name\":\"geolocator_windows\",\"dependencies\":[]},{\"name\":\"google_maps_flutter\",\"dependencies\":[\"google_maps_flutter_android\",\"google_maps_flutter_ios\"]},{\"name\":\"google_maps_flutter_android\",\"dependencies\":[\"flutter_plugin_android_lifecycle\"]},{\"name\":\"google_maps_flutter_ios\",\"dependencies\":[]},{\"name\":\"google_sign_in\",\"dependencies\":[\"google_sign_in_android\",\"google_sign_in_ios\",\"google_sign_in_web\"]},{\"name\":\"google_sign_in_android\",\"dependencies\":[]},{\"name\":\"google_sign_in_ios\",\"dependencies\":[]},{\"name\":\"google_sign_in_web\",\"dependencies\":[]},{\"name\":\"image_cropper\",\"dependencies\":[\"image_cropper_for_web\"]},{\"name\":\"image_cropper_for_web\",\"dependencies\":[]},{\"name\":\"image_picker\",\"dependencies\":[\"image_picker_android\",\"image_picker_for_web\",\"image_picker_ios\"]},{\"name\":\"image_picker_android\",\"dependencies\":[\"flutter_plugin_android_lifecycle\"]},{\"name\":\"image_picker_for_web\",\"dependencies\":[]},{\"name\":\"image_picker_ios\",\"dependencies\":[]},{\"name\":\"location\",\"dependencies\":[\"location_web\"]},{\"name\":\"location_web\",\"dependencies\":[]},{\"name\":\"package_info_plus\",\"dependencies\":[\"package_info_plus_linux\",\"package_info_plus_macos\",\"package_info_plus_windows\",\"package_info_plus_web\"]},{\"name\":\"package_info_plus_linux\",\"dependencies\":[]},{\"name\":\"package_info_plus_macos\",\"dependencies\":[]},{\"name\":\"package_info_plus_web\",\"dependencies\":[]},{\"name\":\"package_info_plus_windows\",\"dependencies\":[]},{\"name\":\"path_provider\",\"dependencies\":[\"path_provider_android\",\"path_provider_foundation\",\"path_provider_linux\",\"path_provider_windows\"]},{\"name\":\"path_provider_android\",\"dependencies\":[]},{\"name\":\"path_provider_foundation\",\"dependencies\":[]},{\"name\":\"path_provider_linux\",\"dependencies\":[]},{\"name\":\"path_provider_windows\",\"dependencies\":[]},{\"name\":\"permission_handler\",\"dependencies\":[\"permission_handler_android\",\"permission_handler_apple\",\"permission_handler_windows\"]},{\"name\":\"permission_handler_android\",\"dependencies\":[]},{\"name\":\"permission_handler_apple\",\"dependencies\":[]},{\"name\":\"permission_handler_windows\",\"dependencies\":[]},{\"name\":\"razorpay_flutter\",\"dependencies\":[\"fluttertoast\",\"package_info_plus\"]},{\"name\":\"shared_preferences\",\"dependencies\":[\"shared_preferences_android\",\"shared_preferences_foundation\",\"shared_preferences_linux\",\"shared_preferences_web\",\"shared_preferences_windows\"]},{\"name\":\"shared_preferences_android\",\"dependencies\":[]},{\"name\":\"shared_preferences_foundation\",\"dependencies\":[]},{\"name\":\"shared_preferences_linux\",\"dependencies\":[\"path_provider_linux\"]},{\"name\":\"shared_preferences_web\",\"dependencies\":[]},{\"name\":\"shared_preferences_windows\",\"dependencies\":[\"path_provider_windows\"]},{\"name\":\"smart_auth\",\"dependencies\":[]},{\"name\":\"sms_autofill\",\"dependencies\":[]},{\"name\":\"sqflite\",\"dependencies\":[]},{\"name\":\"url_launcher\",\"dependencies\":[\"url_launcher_android\",\"url_launcher_ios\",\"url_launcher_linux\",\"url_launcher_macos\",\"url_launcher_web\",\"url_launcher_windows\"]},{\"name\":\"url_launcher_android\",\"dependencies\":[]},{\"name\":\"url_launcher_ios\",\"dependencies\":[]},{\"name\":\"url_launcher_linux\",\"dependencies\":[]},{\"name\":\"url_launcher_macos\",\"dependencies\":[]},{\"name\":\"url_launcher_web\",\"dependencies\":[]},{\"name\":\"url_launcher_windows\",\"dependencies\":[]}],\"date_created\":\"2023-03-21 20:47:09.528868\",\"version\":\"3.7.3\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.flutter-plugins-dependencies b/.flutter-plugins-dependencies
--- a/.flutter-plugins-dependencies	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ b/.flutter-plugins-dependencies	(date 1679551723983)
@@ -1,1 +1,1 @@
-{"info":"This is a generated file; do not edit or check into version control.","plugins":{"ios":[{"name":"assets_audio_player","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\assets_audio_player-3.0.6\\\\","native_build":true,"dependencies":["assets_audio_player_web"]},{"name":"assets_audio_player_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\assets_audio_player_web-3.0.6\\\\","native_build":true,"dependencies":[]},{"name":"firebase_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_auth-4.2.9\\\\","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_core","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_core-2.7.0\\\\","native_build":true,"dependencies":[]},{"name":"firebase_messaging","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_messaging-14.2.5\\\\","native_build":true,"dependencies":["firebase_core"]},{"name":"flutter_local_notifications","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\flutter_local_notifications-13.0.0\\\\","native_build":true,"dependencies":[]},{"name":"fluttertoast","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\fluttertoast-8.2.1\\\\","native_build":true,"dependencies":[]},{"name":"geocoding","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geocoding-2.0.5\\\\","native_build":true,"dependencies":[]},{"name":"geolocator_apple","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geolocator_apple-2.2.5\\\\","native_build":true,"dependencies":[]},{"name":"google_maps_flutter_ios","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\google_maps_flutter_ios-2.2.0\\\\","native_build":true,"dependencies":[]},{"name":"google_sign_in_ios","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\google_sign_in_ios-5.6.0\\\\","native_build":true,"dependencies":[]},{"name":"image_cropper","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_cropper-3.0.1\\\\","native_build":true,"dependencies":[]},{"name":"image_picker_ios","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_picker_ios-0.8.7\\\\","native_build":true,"dependencies":[]},{"name":"location","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\location-4.4.0\\\\","native_build":true,"dependencies":[]},{"name":"package_info_plus","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\package_info_plus-1.4.3+1\\\\","native_build":true,"dependencies":[]},{"name":"path_provider_foundation","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_foundation-2.1.2\\\\","native_build":true,"dependencies":[]},{"name":"permission_handler_apple","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\permission_handler_apple-9.0.7\\\\","native_build":true,"dependencies":[]},{"name":"razorpay_flutter","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\razorpay_flutter-1.3.4\\\\","native_build":true,"dependencies":["fluttertoast","package_info_plus"]},{"name":"shared_preferences_foundation","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_foundation-2.1.4\\\\","native_build":true,"dependencies":[]},{"name":"smart_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\smart_auth-1.0.8\\\\","native_build":true,"dependencies":[]},{"name":"sms_autofill","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\sms_autofill-2.3.0\\\\","native_build":true,"dependencies":[]},{"name":"sqflite","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\sqflite-2.2.5\\\\","native_build":true,"dependencies":[]},{"name":"url_launcher_ios","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_ios-6.1.1\\\\","native_build":true,"dependencies":[]}],"android":[{"name":"assets_audio_player","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\assets_audio_player-3.0.6\\\\","native_build":true,"dependencies":["assets_audio_player_web"]},{"name":"assets_audio_player_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\assets_audio_player_web-3.0.6\\\\","native_build":true,"dependencies":[]},{"name":"firebase_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_auth-4.2.9\\\\","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_core","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_core-2.7.0\\\\","native_build":true,"dependencies":[]},{"name":"firebase_messaging","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_messaging-14.2.5\\\\","native_build":true,"dependencies":["firebase_core"]},{"name":"flutter_local_notifications","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\flutter_local_notifications-13.0.0\\\\","native_build":true,"dependencies":[]},{"name":"flutter_plugin_android_lifecycle","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\flutter_plugin_android_lifecycle-2.0.9\\\\","native_build":true,"dependencies":[]},{"name":"fluttertoast","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\fluttertoast-8.2.1\\\\","native_build":true,"dependencies":[]},{"name":"geocoding","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geocoding-2.0.5\\\\","native_build":true,"dependencies":[]},{"name":"geolocator_android","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geolocator_android-4.1.7\\\\","native_build":true,"dependencies":[]},{"name":"google_maps_flutter_android","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\google_maps_flutter_android-2.4.8\\\\","native_build":true,"dependencies":["flutter_plugin_android_lifecycle"]},{"name":"google_sign_in_android","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\google_sign_in_android-6.1.7\\\\","native_build":true,"dependencies":[]},{"name":"image_cropper","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_cropper-3.0.1\\\\","native_build":true,"dependencies":[]},{"name":"image_picker_android","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_picker_android-0.8.5+9\\\\","native_build":true,"dependencies":["flutter_plugin_android_lifecycle"]},{"name":"location","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\location-4.4.0\\\\","native_build":true,"dependencies":[]},{"name":"package_info_plus","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\package_info_plus-1.4.3+1\\\\","native_build":true,"dependencies":[]},{"name":"path_provider_android","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_android-2.0.23\\\\","native_build":true,"dependencies":[]},{"name":"permission_handler_android","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\permission_handler_android-10.2.0\\\\","native_build":true,"dependencies":[]},{"name":"razorpay_flutter","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\razorpay_flutter-1.3.4\\\\","native_build":true,"dependencies":["fluttertoast","package_info_plus"]},{"name":"shared_preferences_android","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_android-2.0.16\\\\","native_build":true,"dependencies":[]},{"name":"smart_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\smart_auth-1.0.8\\\\","native_build":true,"dependencies":[]},{"name":"sms_autofill","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\sms_autofill-2.3.0\\\\","native_build":true,"dependencies":[]},{"name":"sqflite","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\sqflite-2.2.5\\\\","native_build":true,"dependencies":[]},{"name":"url_launcher_android","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_android-6.0.24\\\\","native_build":true,"dependencies":[]}],"macos":[{"name":"assets_audio_player","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\assets_audio_player-3.0.6\\\\","native_build":true,"dependencies":["assets_audio_player_web"]},{"name":"assets_audio_player_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\assets_audio_player_web-3.0.6\\\\","native_build":true,"dependencies":[]},{"name":"firebase_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_auth-4.2.9\\\\","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_core","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_core-2.7.0\\\\","native_build":true,"dependencies":[]},{"name":"firebase_messaging","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_messaging-14.2.5\\\\","native_build":true,"dependencies":["firebase_core"]},{"name":"flutter_local_notifications","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\flutter_local_notifications-13.0.0\\\\","native_build":true,"dependencies":[]},{"name":"geolocator_apple","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geolocator_apple-2.2.5\\\\","native_build":true,"dependencies":[]},{"name":"location","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\location-4.4.0\\\\","native_build":true,"dependencies":[]},{"name":"package_info_plus_macos","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\package_info_plus_macos-1.3.0\\\\","native_build":true,"dependencies":[]},{"name":"path_provider_foundation","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_foundation-2.1.2\\\\","native_build":true,"dependencies":[]},{"name":"shared_preferences_foundation","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_foundation-2.1.4\\\\","native_build":true,"dependencies":[]},{"name":"smart_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\smart_auth-1.0.8\\\\","native_build":true,"dependencies":[]},{"name":"sqflite","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\sqflite-2.2.5\\\\","native_build":true,"dependencies":[]},{"name":"url_launcher_macos","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_macos-3.0.3\\\\","native_build":true,"dependencies":[]}],"linux":[{"name":"package_info_plus_linux","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\package_info_plus_linux-1.0.5\\\\","native_build":false,"dependencies":[]},{"name":"path_provider_linux","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_linux-2.1.9\\\\","native_build":false,"dependencies":[]},{"name":"shared_preferences_linux","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_linux-2.1.4\\\\","native_build":false,"dependencies":["path_provider_linux"]},{"name":"smart_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\smart_auth-1.0.8\\\\","native_build":true,"dependencies":[]},{"name":"url_launcher_linux","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_linux-3.0.3\\\\","native_build":true,"dependencies":[]}],"windows":[{"name":"geolocator_windows","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geolocator_windows-0.1.1\\\\","native_build":true,"dependencies":[]},{"name":"package_info_plus_windows","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\package_info_plus_windows-2.1.0\\\\","native_build":false,"dependencies":[]},{"name":"path_provider_windows","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_windows-2.1.4\\\\","native_build":false,"dependencies":[]},{"name":"permission_handler_windows","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\permission_handler_windows-0.1.2\\\\","native_build":true,"dependencies":[]},{"name":"shared_preferences_windows","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_windows-2.1.4\\\\","native_build":false,"dependencies":["path_provider_windows"]},{"name":"smart_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\smart_auth-1.0.8\\\\","native_build":true,"dependencies":[]},{"name":"url_launcher_windows","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_windows-3.0.4\\\\","native_build":true,"dependencies":[]}],"web":[{"name":"assets_audio_player_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\assets_audio_player_web-3.0.6\\\\","dependencies":[]},{"name":"firebase_auth_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_auth_web-5.2.8\\\\","dependencies":["firebase_core_web"]},{"name":"firebase_core_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_core_web-2.2.1\\\\","dependencies":[]},{"name":"firebase_messaging_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_messaging_web-3.2.15\\\\","dependencies":["firebase_core_web"]},{"name":"fluttertoast","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\fluttertoast-8.2.1\\\\","dependencies":[]},{"name":"geolocator_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geolocator_web-2.1.6\\\\","dependencies":[]},{"name":"google_sign_in_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\google_sign_in_web-0.11.0+1\\\\","dependencies":[]},{"name":"image_cropper_for_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_cropper_for_web-1.0.3\\\\","dependencies":[]},{"name":"image_picker_for_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_picker_for_web-2.1.11\\\\","dependencies":[]},{"name":"location_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\location_web-3.1.1\\\\","dependencies":[]},{"name":"package_info_plus_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\package_info_plus_web-1.0.6\\\\","dependencies":[]},{"name":"shared_preferences_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_web-2.0.5\\\\","dependencies":[]},{"name":"smart_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\smart_auth-1.0.8\\\\","dependencies":[]},{"name":"url_launcher_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_web-2.0.15\\\\","dependencies":[]}]},"dependencyGraph":[{"name":"assets_audio_player","dependencies":["path_provider","assets_audio_player_web"]},{"name":"assets_audio_player_web","dependencies":[]},{"name":"firebase_auth","dependencies":["firebase_auth_web","firebase_core"]},{"name":"firebase_auth_web","dependencies":["firebase_core","firebase_core_web"]},{"name":"firebase_core","dependencies":["firebase_core_web"]},{"name":"firebase_core_web","dependencies":[]},{"name":"firebase_messaging","dependencies":["firebase_core","firebase_messaging_web"]},{"name":"firebase_messaging_web","dependencies":["firebase_core","firebase_core_web"]},{"name":"flutter_local_notifications","dependencies":[]},{"name":"flutter_plugin_android_lifecycle","dependencies":[]},{"name":"fluttertoast","dependencies":[]},{"name":"geocoding","dependencies":[]},{"name":"geolocator","dependencies":["geolocator_android","geolocator_apple","geolocator_web","geolocator_windows"]},{"name":"geolocator_android","dependencies":[]},{"name":"geolocator_apple","dependencies":[]},{"name":"geolocator_web","dependencies":[]},{"name":"geolocator_windows","dependencies":[]},{"name":"google_maps_flutter","dependencies":["google_maps_flutter_android","google_maps_flutter_ios"]},{"name":"google_maps_flutter_android","dependencies":["flutter_plugin_android_lifecycle"]},{"name":"google_maps_flutter_ios","dependencies":[]},{"name":"google_sign_in","dependencies":["google_sign_in_android","google_sign_in_ios","google_sign_in_web"]},{"name":"google_sign_in_android","dependencies":[]},{"name":"google_sign_in_ios","dependencies":[]},{"name":"google_sign_in_web","dependencies":[]},{"name":"image_cropper","dependencies":["image_cropper_for_web"]},{"name":"image_cropper_for_web","dependencies":[]},{"name":"image_picker","dependencies":["image_picker_android","image_picker_for_web","image_picker_ios"]},{"name":"image_picker_android","dependencies":["flutter_plugin_android_lifecycle"]},{"name":"image_picker_for_web","dependencies":[]},{"name":"image_picker_ios","dependencies":[]},{"name":"location","dependencies":["location_web"]},{"name":"location_web","dependencies":[]},{"name":"package_info_plus","dependencies":["package_info_plus_linux","package_info_plus_macos","package_info_plus_windows","package_info_plus_web"]},{"name":"package_info_plus_linux","dependencies":[]},{"name":"package_info_plus_macos","dependencies":[]},{"name":"package_info_plus_web","dependencies":[]},{"name":"package_info_plus_windows","dependencies":[]},{"name":"path_provider","dependencies":["path_provider_android","path_provider_foundation","path_provider_linux","path_provider_windows"]},{"name":"path_provider_android","dependencies":[]},{"name":"path_provider_foundation","dependencies":[]},{"name":"path_provider_linux","dependencies":[]},{"name":"path_provider_windows","dependencies":[]},{"name":"permission_handler","dependencies":["permission_handler_android","permission_handler_apple","permission_handler_windows"]},{"name":"permission_handler_android","dependencies":[]},{"name":"permission_handler_apple","dependencies":[]},{"name":"permission_handler_windows","dependencies":[]},{"name":"razorpay_flutter","dependencies":["fluttertoast","package_info_plus"]},{"name":"shared_preferences","dependencies":["shared_preferences_android","shared_preferences_foundation","shared_preferences_linux","shared_preferences_web","shared_preferences_windows"]},{"name":"shared_preferences_android","dependencies":[]},{"name":"shared_preferences_foundation","dependencies":[]},{"name":"shared_preferences_linux","dependencies":["path_provider_linux"]},{"name":"shared_preferences_web","dependencies":[]},{"name":"shared_preferences_windows","dependencies":["path_provider_windows"]},{"name":"smart_auth","dependencies":[]},{"name":"sms_autofill","dependencies":[]},{"name":"sqflite","dependencies":[]},{"name":"url_launcher","dependencies":["url_launcher_android","url_launcher_ios","url_launcher_linux","url_launcher_macos","url_launcher_web","url_launcher_windows"]},{"name":"url_launcher_android","dependencies":[]},{"name":"url_launcher_ios","dependencies":[]},{"name":"url_launcher_linux","dependencies":[]},{"name":"url_launcher_macos","dependencies":[]},{"name":"url_launcher_web","dependencies":[]},{"name":"url_launcher_windows","dependencies":[]}],"date_created":"2023-03-21 20:47:09.528868","version":"3.7.3"}
\ No newline at end of file
+{"info":"This is a generated file; do not edit or check into version control.","plugins":{"ios":[{"name":"assets_audio_player","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\assets_audio_player-3.0.6\\\\","native_build":true,"dependencies":["assets_audio_player_web"]},{"name":"assets_audio_player_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\assets_audio_player_web-3.0.6\\\\","native_build":true,"dependencies":[]},{"name":"firebase_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_auth-4.2.9\\\\","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_core","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_core-2.8.0\\\\","native_build":true,"dependencies":[]},{"name":"firebase_messaging","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_messaging-14.3.0\\\\","native_build":true,"dependencies":["firebase_core"]},{"name":"flutter_local_notifications","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\flutter_local_notifications-13.0.0\\\\","native_build":true,"dependencies":[]},{"name":"fluttertoast","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\fluttertoast-8.2.1\\\\","native_build":true,"dependencies":[]},{"name":"geocoding","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geocoding-2.0.5\\\\","native_build":true,"dependencies":[]},{"name":"geolocator_apple","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geolocator_apple-2.2.5\\\\","native_build":true,"dependencies":[]},{"name":"google_maps_flutter_ios","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\google_maps_flutter_ios-2.2.0\\\\","native_build":true,"dependencies":[]},{"name":"google_sign_in_ios","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\google_sign_in_ios-5.6.0\\\\","native_build":true,"dependencies":[]},{"name":"image_cropper","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_cropper-3.0.1\\\\","native_build":true,"dependencies":[]},{"name":"image_picker_ios","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_picker_ios-0.8.7\\\\","native_build":true,"dependencies":[]},{"name":"location","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\location-4.4.0\\\\","native_build":true,"dependencies":[]},{"name":"package_info_plus","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\package_info_plus-1.4.3+1\\\\","native_build":true,"dependencies":[]},{"name":"path_provider_foundation","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_foundation-2.1.2\\\\","native_build":true,"dependencies":[]},{"name":"permission_handler_apple","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\permission_handler_apple-9.0.7\\\\","native_build":true,"dependencies":[]},{"name":"razorpay_flutter","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\razorpay_flutter-1.3.4\\\\","native_build":true,"dependencies":["fluttertoast","package_info_plus"]},{"name":"shared_preferences_foundation","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_foundation-2.1.4\\\\","native_build":true,"dependencies":[]},{"name":"smart_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\smart_auth-1.0.8\\\\","native_build":true,"dependencies":[]},{"name":"sms_autofill","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\sms_autofill-2.3.0\\\\","native_build":true,"dependencies":[]},{"name":"sqflite","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\sqflite-2.2.5\\\\","native_build":true,"dependencies":[]},{"name":"url_launcher_ios","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_ios-6.1.1\\\\","native_build":true,"dependencies":[]}],"android":[{"name":"assets_audio_player","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\assets_audio_player-3.0.6\\\\","native_build":true,"dependencies":["assets_audio_player_web"]},{"name":"assets_audio_player_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\assets_audio_player_web-3.0.6\\\\","native_build":true,"dependencies":[]},{"name":"firebase_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_auth-4.2.9\\\\","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_core","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_core-2.8.0\\\\","native_build":true,"dependencies":[]},{"name":"firebase_messaging","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_messaging-14.3.0\\\\","native_build":true,"dependencies":["firebase_core"]},{"name":"flutter_local_notifications","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\flutter_local_notifications-13.0.0\\\\","native_build":true,"dependencies":[]},{"name":"flutter_plugin_android_lifecycle","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\flutter_plugin_android_lifecycle-2.0.9\\\\","native_build":true,"dependencies":[]},{"name":"fluttertoast","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\fluttertoast-8.2.1\\\\","native_build":true,"dependencies":[]},{"name":"geocoding","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geocoding-2.0.5\\\\","native_build":true,"dependencies":[]},{"name":"geolocator_android","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geolocator_android-4.1.7\\\\","native_build":true,"dependencies":[]},{"name":"google_maps_flutter_android","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\google_maps_flutter_android-2.4.8\\\\","native_build":true,"dependencies":["flutter_plugin_android_lifecycle"]},{"name":"google_sign_in_android","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\google_sign_in_android-6.1.7\\\\","native_build":true,"dependencies":[]},{"name":"image_cropper","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_cropper-3.0.1\\\\","native_build":true,"dependencies":[]},{"name":"image_picker_android","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_picker_android-0.8.5+9\\\\","native_build":true,"dependencies":["flutter_plugin_android_lifecycle"]},{"name":"location","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\location-4.4.0\\\\","native_build":true,"dependencies":[]},{"name":"package_info_plus","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\package_info_plus-1.4.3+1\\\\","native_build":true,"dependencies":[]},{"name":"path_provider_android","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_android-2.0.23\\\\","native_build":true,"dependencies":[]},{"name":"permission_handler_android","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\permission_handler_android-10.2.0\\\\","native_build":true,"dependencies":[]},{"name":"razorpay_flutter","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\razorpay_flutter-1.3.4\\\\","native_build":true,"dependencies":["fluttertoast","package_info_plus"]},{"name":"shared_preferences_android","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_android-2.0.16\\\\","native_build":true,"dependencies":[]},{"name":"smart_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\smart_auth-1.0.8\\\\","native_build":true,"dependencies":[]},{"name":"sms_autofill","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\sms_autofill-2.3.0\\\\","native_build":true,"dependencies":[]},{"name":"sqflite","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\sqflite-2.2.5\\\\","native_build":true,"dependencies":[]},{"name":"url_launcher_android","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_android-6.0.24\\\\","native_build":true,"dependencies":[]}],"macos":[{"name":"assets_audio_player","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\assets_audio_player-3.0.6\\\\","native_build":true,"dependencies":["assets_audio_player_web"]},{"name":"assets_audio_player_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\assets_audio_player_web-3.0.6\\\\","native_build":true,"dependencies":[]},{"name":"firebase_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_auth-4.2.9\\\\","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_core","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_core-2.8.0\\\\","native_build":true,"dependencies":[]},{"name":"firebase_messaging","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_messaging-14.3.0\\\\","native_build":true,"dependencies":["firebase_core"]},{"name":"flutter_local_notifications","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\flutter_local_notifications-13.0.0\\\\","native_build":true,"dependencies":[]},{"name":"geolocator_apple","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geolocator_apple-2.2.5\\\\","native_build":true,"dependencies":[]},{"name":"location","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\location-4.4.0\\\\","native_build":true,"dependencies":[]},{"name":"package_info_plus_macos","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\package_info_plus_macos-1.3.0\\\\","native_build":true,"dependencies":[]},{"name":"path_provider_foundation","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_foundation-2.1.2\\\\","native_build":true,"dependencies":[]},{"name":"shared_preferences_foundation","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_foundation-2.1.4\\\\","native_build":true,"dependencies":[]},{"name":"smart_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\smart_auth-1.0.8\\\\","native_build":true,"dependencies":[]},{"name":"sqflite","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\sqflite-2.2.5\\\\","native_build":true,"dependencies":[]},{"name":"url_launcher_macos","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_macos-3.0.3\\\\","native_build":true,"dependencies":[]}],"linux":[{"name":"package_info_plus_linux","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\package_info_plus_linux-1.0.5\\\\","native_build":false,"dependencies":[]},{"name":"path_provider_linux","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_linux-2.1.9\\\\","native_build":false,"dependencies":[]},{"name":"shared_preferences_linux","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_linux-2.1.4\\\\","native_build":false,"dependencies":["path_provider_linux"]},{"name":"smart_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\smart_auth-1.0.8\\\\","native_build":true,"dependencies":[]},{"name":"url_launcher_linux","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_linux-3.0.3\\\\","native_build":true,"dependencies":[]}],"windows":[{"name":"geolocator_windows","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geolocator_windows-0.1.1\\\\","native_build":true,"dependencies":[]},{"name":"package_info_plus_windows","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\package_info_plus_windows-2.1.0\\\\","native_build":false,"dependencies":[]},{"name":"path_provider_windows","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_windows-2.1.4\\\\","native_build":false,"dependencies":[]},{"name":"permission_handler_windows","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\permission_handler_windows-0.1.2\\\\","native_build":true,"dependencies":[]},{"name":"shared_preferences_windows","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_windows-2.1.4\\\\","native_build":false,"dependencies":["path_provider_windows"]},{"name":"smart_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\smart_auth-1.0.8\\\\","native_build":true,"dependencies":[]},{"name":"url_launcher_windows","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_windows-3.0.4\\\\","native_build":true,"dependencies":[]}],"web":[{"name":"assets_audio_player_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\assets_audio_player_web-3.0.6\\\\","dependencies":[]},{"name":"firebase_auth_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_auth_web-5.2.8\\\\","dependencies":["firebase_core_web"]},{"name":"firebase_core_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_core_web-2.2.2\\\\","dependencies":[]},{"name":"firebase_messaging_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_messaging_web-3.2.17\\\\","dependencies":["firebase_core_web"]},{"name":"fluttertoast","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\fluttertoast-8.2.1\\\\","dependencies":[]},{"name":"geolocator_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geolocator_web-2.1.6\\\\","dependencies":[]},{"name":"google_sign_in_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\google_sign_in_web-0.11.0+1\\\\","dependencies":[]},{"name":"image_cropper_for_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_cropper_for_web-1.0.3\\\\","dependencies":[]},{"name":"image_picker_for_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_picker_for_web-2.1.11\\\\","dependencies":[]},{"name":"location_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\location_web-3.1.1\\\\","dependencies":[]},{"name":"package_info_plus_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\package_info_plus_web-1.0.6\\\\","dependencies":[]},{"name":"shared_preferences_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_web-2.0.5\\\\","dependencies":[]},{"name":"smart_auth","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\smart_auth-1.0.8\\\\","dependencies":[]},{"name":"url_launcher_web","path":"C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_web-2.0.15\\\\","dependencies":[]}]},"dependencyGraph":[{"name":"assets_audio_player","dependencies":["path_provider","assets_audio_player_web"]},{"name":"assets_audio_player_web","dependencies":[]},{"name":"firebase_auth","dependencies":["firebase_auth_web","firebase_core"]},{"name":"firebase_auth_web","dependencies":["firebase_core","firebase_core_web"]},{"name":"firebase_core","dependencies":["firebase_core_web"]},{"name":"firebase_core_web","dependencies":[]},{"name":"firebase_messaging","dependencies":["firebase_core","firebase_messaging_web"]},{"name":"firebase_messaging_web","dependencies":["firebase_core","firebase_core_web"]},{"name":"flutter_local_notifications","dependencies":[]},{"name":"flutter_plugin_android_lifecycle","dependencies":[]},{"name":"fluttertoast","dependencies":[]},{"name":"geocoding","dependencies":[]},{"name":"geolocator","dependencies":["geolocator_android","geolocator_apple","geolocator_web","geolocator_windows"]},{"name":"geolocator_android","dependencies":[]},{"name":"geolocator_apple","dependencies":[]},{"name":"geolocator_web","dependencies":[]},{"name":"geolocator_windows","dependencies":[]},{"name":"google_maps_flutter","dependencies":["google_maps_flutter_android","google_maps_flutter_ios"]},{"name":"google_maps_flutter_android","dependencies":["flutter_plugin_android_lifecycle"]},{"name":"google_maps_flutter_ios","dependencies":[]},{"name":"google_sign_in","dependencies":["google_sign_in_android","google_sign_in_ios","google_sign_in_web"]},{"name":"google_sign_in_android","dependencies":[]},{"name":"google_sign_in_ios","dependencies":[]},{"name":"google_sign_in_web","dependencies":[]},{"name":"image_cropper","dependencies":["image_cropper_for_web"]},{"name":"image_cropper_for_web","dependencies":[]},{"name":"image_picker","dependencies":["image_picker_android","image_picker_for_web","image_picker_ios"]},{"name":"image_picker_android","dependencies":["flutter_plugin_android_lifecycle"]},{"name":"image_picker_for_web","dependencies":[]},{"name":"image_picker_ios","dependencies":[]},{"name":"location","dependencies":["location_web"]},{"name":"location_web","dependencies":[]},{"name":"package_info_plus","dependencies":["package_info_plus_linux","package_info_plus_macos","package_info_plus_windows","package_info_plus_web"]},{"name":"package_info_plus_linux","dependencies":[]},{"name":"package_info_plus_macos","dependencies":[]},{"name":"package_info_plus_web","dependencies":[]},{"name":"package_info_plus_windows","dependencies":[]},{"name":"path_provider","dependencies":["path_provider_android","path_provider_foundation","path_provider_linux","path_provider_windows"]},{"name":"path_provider_android","dependencies":[]},{"name":"path_provider_foundation","dependencies":[]},{"name":"path_provider_linux","dependencies":[]},{"name":"path_provider_windows","dependencies":[]},{"name":"permission_handler","dependencies":["permission_handler_android","permission_handler_apple","permission_handler_windows"]},{"name":"permission_handler_android","dependencies":[]},{"name":"permission_handler_apple","dependencies":[]},{"name":"permission_handler_windows","dependencies":[]},{"name":"razorpay_flutter","dependencies":["fluttertoast","package_info_plus"]},{"name":"shared_preferences","dependencies":["shared_preferences_android","shared_preferences_foundation","shared_preferences_linux","shared_preferences_web","shared_preferences_windows"]},{"name":"shared_preferences_android","dependencies":[]},{"name":"shared_preferences_foundation","dependencies":[]},{"name":"shared_preferences_linux","dependencies":["path_provider_linux"]},{"name":"shared_preferences_web","dependencies":[]},{"name":"shared_preferences_windows","dependencies":["path_provider_windows"]},{"name":"smart_auth","dependencies":[]},{"name":"sms_autofill","dependencies":[]},{"name":"sqflite","dependencies":[]},{"name":"url_launcher","dependencies":["url_launcher_android","url_launcher_ios","url_launcher_linux","url_launcher_macos","url_launcher_web","url_launcher_windows"]},{"name":"url_launcher_android","dependencies":[]},{"name":"url_launcher_ios","dependencies":[]},{"name":"url_launcher_linux","dependencies":[]},{"name":"url_launcher_macos","dependencies":[]},{"name":"url_launcher_web","dependencies":[]},{"name":"url_launcher_windows","dependencies":[]}],"date_created":"2023-03-23 11:08:43.977594","version":"3.7.3"}
\ No newline at end of file
Index: lib/screens/TaxiBooking/navigation_screen.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\r\nimport 'package:flutter_svg/svg.dart';\r\nimport 'package:sultan_cab/providers/TaxiBookingProvider/in_progress_ride_provider.dart';\r\nimport 'package:sultan_cab/screens/TaxiBooking/get_all_orders.dart';\r\nimport 'package:sultan_cab/screens/TaxiBooking/home_page.dart';\r\nimport 'package:sultan_cab/screens/commonPages/settings.dart';\r\nimport 'package:sultan_cab/screens/TaxiBooking/ride_history.dart';\r\nimport 'package:sultan_cab/utils/colors.dart';\r\nimport 'package:sultan_cab/utils/sizeConfig.dart';\r\n\r\nclass NavigationScreen extends StatefulWidget {\r\n  final int index;\r\n\r\n  const NavigationScreen({Key? key, this.index = 0}) : super(key: key);\r\n  @override\r\n  _NavigationScreenState createState() => _NavigationScreenState();\r\n}\r\n\r\nclass _NavigationScreenState extends State<NavigationScreen> {\r\n  final PageStorageBucket bucket = PageStorageBucket();\r\n\r\n  int _index = 0;\r\n  late List<Widget> _screens;\r\n\r\n  @override\r\n  void didChangeDependencies() async {\r\n    super.didChangeDependencies();\r\n  }\r\n\r\n  @override\r\n  void initState() {\r\n    _index = widget.index;\r\n    _screens = [\r\n      HomePage(),\r\n      GetAllOrders(),\r\n      Settings(),\r\n    ];\r\n    // inProgressRideProvider.getRideInProgress();\r\n    super.initState();\r\n  }\r\n\r\n  List<NavigationModel> _menu = [\r\n    NavigationModel(icon: 'assets/icons/home.svg'),\r\n    NavigationModel(icon: 'assets/icons/history.svg'),\r\n    NavigationModel(icon: 'assets/icons/settings.svg'),\r\n  ];\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    SizeConfig().init(context);\r\n    var h = SizeConfig.screenHeight / 812;\r\n\r\n    return Scaffold(\r\n      bottomNavigationBar: Container(\r\n        height: h * 55,\r\n        child: BottomNavigationBar(\r\n          backgroundColor: greybackColor,\r\n          type: BottomNavigationBarType.fixed,\r\n          showSelectedLabels: false,\r\n          showUnselectedLabels: false,\r\n          selectedFontSize: 0,\r\n          unselectedFontSize: 0,\r\n          selectedIconTheme: IconThemeData(size: h * 20),\r\n          currentIndex: _index,\r\n          items: _menu.map((e) {\r\n            return BottomNavigationBarItem(\r\n              icon: SvgPicture.asset(\r\n                e.icon,\r\n                color: Color(0xffcccccc),\r\n              ),\r\n              activeIcon: SvgPicture.asset(\r\n                e.icon,\r\n                color: secondaryColor,\r\n              ),\r\n              label: '',\r\n            );\r\n          }).toList(),\r\n          onTap: (menuIndex) {\r\n            setState(() {\r\n              _index = menuIndex;\r\n            });\r\n          },\r\n        ),\r\n      ),\r\n      body: PageStorage(\r\n        child: _screens[_index],\r\n        bucket: bucket,\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass NavigationModel {\r\n  String icon;\r\n  NavigationModel({required this.icon});\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/screens/TaxiBooking/navigation_screen.dart b/lib/screens/TaxiBooking/navigation_screen.dart
--- a/lib/screens/TaxiBooking/navigation_screen.dart	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ b/lib/screens/TaxiBooking/navigation_screen.dart	(date 1679551619026)
@@ -8,6 +8,8 @@
 import 'package:sultan_cab/utils/colors.dart';
 import 'package:sultan_cab/utils/sizeConfig.dart';
 
+import '../../FCM.dart';
+
 class NavigationScreen extends StatefulWidget {
   final int index;
 
@@ -35,6 +37,9 @@
       GetAllOrders(),
       Settings(),
     ];
+
+
+    FCM();
     // inProgressRideProvider.getRideInProgress();
     super.initState();
   }
Index: pubspec.lock
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Generated by pub\r\n# See https://dart.dev/tools/pub/glossary#lockfile\r\npackages:\r\n  _flutterfire_internals:\r\n    dependency: transitive\r\n    description:\r\n      name: _flutterfire_internals\r\n      sha256: \"64fcb0dbca4386356386c085142fa6e79c00a3326ceaa778a2d25f5d9ba61441\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.16\"\r\n  archive:\r\n    dependency: transitive\r\n    description:\r\n      name: archive\r\n      sha256: d6347d54a2d8028e0437e3c099f66fdb8ae02c4720c1e7534c9f24c10351f85d\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.3.6\"\r\n  args:\r\n    dependency: transitive\r\n    description:\r\n      name: args\r\n      sha256: \"4cab82a83ffef80b262ddedf47a0a8e56ee6fbf7fe21e6e768b02792034dd440\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.4.0\"\r\n  assets_audio_player:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: assets_audio_player\r\n      sha256: dcea8cd9c11cd9c34586f2446bfcdf099362159c56f97517ba941ac151974ea9\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.0.6\"\r\n  assets_audio_player_web:\r\n    dependency: transitive\r\n    description:\r\n      name: assets_audio_player_web\r\n      sha256: \"4575ec40033d818ff022d48f7d46e24c01bc632bd1cd36a4f8b58b38e9aa4a81\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.0.6\"\r\n  async:\r\n    dependency: transitive\r\n    description:\r\n      name: async\r\n      sha256: bfe67ef28df125b7dddcea62755991f807aa39a2492a23e1550161692950bbe0\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.10.0\"\r\n  boolean_selector:\r\n    dependency: transitive\r\n    description:\r\n      name: boolean_selector\r\n      sha256: \"6cfb5af12253eaf2b368f07bacc5a80d1301a071c73360d746b7f2e32d762c66\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.1\"\r\n  cached_network_image:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: cached_network_image\r\n      sha256: fd3d0dc1d451f9a252b32d95d3f0c3c487bc41a75eba2e6097cb0b9c71491b15\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.2.3\"\r\n  cached_network_image_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: cached_network_image_platform_interface\r\n      sha256: bb2b8403b4ccdc60ef5f25c70dead1f3d32d24b9d6117cfc087f496b178594a7\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.0\"\r\n  cached_network_image_web:\r\n    dependency: transitive\r\n    description:\r\n      name: cached_network_image_web\r\n      sha256: b8eb814ebfcb4dea049680f8c1ffb2df399e4d03bf7a352c775e26fa06e02fa0\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.2\"\r\n  change_app_package_name:\r\n    dependency: \"direct dev\"\r\n    description:\r\n      name: change_app_package_name\r\n      sha256: f9ebaf68a4b5a68c581492579bb68273c523ef325fbf9ce2f1b57fb136ad023b\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.1.0\"\r\n  characters:\r\n    dependency: transitive\r\n    description:\r\n      name: characters\r\n      sha256: e6a326c8af69605aec75ed6c187d06b349707a27fbff8222ca9cc2cff167975c\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.2.1\"\r\n  checked_yaml:\r\n    dependency: transitive\r\n    description:\r\n      name: checked_yaml\r\n      sha256: \"3d1505d91afa809d177efd4eed5bb0eb65805097a1463abdd2add076effae311\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.2\"\r\n  cli_util:\r\n    dependency: transitive\r\n    description:\r\n      name: cli_util\r\n      sha256: \"66f86e916d285c1a93d3b79587d94bd71984a66aac4ff74e524cfa7877f1395c\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.3.5\"\r\n  clock:\r\n    dependency: transitive\r\n    description:\r\n      name: clock\r\n      sha256: cb6d7f03e1de671e34607e909a7213e31d7752be4fb66a86d29fe1eb14bfb5cf\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.1.1\"\r\n  collection:\r\n    dependency: transitive\r\n    description:\r\n      name: collection\r\n      sha256: cfc915e6923fe5ce6e153b0723c753045de46de1b4d63771530504004a45fae0\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.17.0\"\r\n  convert:\r\n    dependency: transitive\r\n    description:\r\n      name: convert\r\n      sha256: \"0f08b14755d163f6e2134cb58222dd25ea2a2ee8a195e53983d57c075324d592\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.1.1\"\r\n  country_code_picker:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: country_code_picker\r\n      sha256: \"6eed752b23cf2331435b08d246f7aee6eae0eda25ae357560b6794ef02e87ee6\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.2\"\r\n  cross_file:\r\n    dependency: transitive\r\n    description:\r\n      name: cross_file\r\n      sha256: \"0b0036e8cccbfbe0555fd83c1d31a6f30b77a96b598b35a5d36dd41f718695e9\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.3.3+4\"\r\n  crypto:\r\n    dependency: transitive\r\n    description:\r\n      name: crypto\r\n      sha256: aa274aa7774f8964e4f4f38cc994db7b6158dd36e9187aaceaddc994b35c6c67\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.0.2\"\r\n  csslib:\r\n    dependency: transitive\r\n    description:\r\n      name: csslib\r\n      sha256: b36c7f7e24c0bdf1bf9a3da461c837d1de64b9f8beb190c9011d8c72a3dfd745\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.17.2\"\r\n  dbus:\r\n    dependency: transitive\r\n    description:\r\n      name: dbus\r\n      sha256: \"6f07cba3f7b3448d42d015bfd3d53fe12e5b36da2423f23838efc1d5fb31a263\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.7.8\"\r\n  diffutil_dart:\r\n    dependency: transitive\r\n    description:\r\n      name: diffutil_dart\r\n      sha256: e0297e4600b9797edff228ed60f4169a778ea357691ec98408fa3b72994c7d06\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.0.0\"\r\n  dropdown_below:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: dropdown_below\r\n      sha256: \"4fa3bcc9f7ab48a54d970fd5683557676adac161f42f849e125ae8d42b28fa9a\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.3\"\r\n  easy_localization:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: easy_localization\r\n      sha256: \"6a2e99fa0bfe5765bf4c6ca9b137d5de2c75593007178c5e4cd2ae985f870080\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.0.1\"\r\n  easy_logger:\r\n    dependency: transitive\r\n    description:\r\n      name: easy_logger\r\n      sha256: c764a6e024846f33405a2342caf91c62e357c24b02c04dbc712ef232bf30ffb7\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.0.2\"\r\n  equatable:\r\n    dependency: transitive\r\n    description:\r\n      name: equatable\r\n      sha256: c2b87cb7756efdf69892005af546c56c0b5037f54d2a88269b4f347a505e3ca2\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.5\"\r\n  eventify:\r\n    dependency: transitive\r\n    description:\r\n      name: eventify\r\n      sha256: b829429f08586cc2001c628e7499e3e3c2493a1d895fd73b00ecb23351aa5a66\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.1\"\r\n  fake_async:\r\n    dependency: transitive\r\n    description:\r\n      name: fake_async\r\n      sha256: \"511392330127add0b769b75a987850d136345d9227c6b94c96a04cf4a391bf78\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.3.1\"\r\n  ffi:\r\n    dependency: transitive\r\n    description:\r\n      name: ffi\r\n      sha256: a38574032c5f1dd06c4aee541789906c12ccaab8ba01446e800d9c5b79c4a978\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.1\"\r\n  file:\r\n    dependency: transitive\r\n    description:\r\n      name: file\r\n      sha256: \"1b92bec4fc2a72f59a8e15af5f52cd441e4a7860b49499d69dfa817af20e925d\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"6.1.4\"\r\n  firebase_auth:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: firebase_auth\r\n      sha256: \"9907d80446466e638dad31c195150b305dffd145dc57610fcd12c72289432143\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"4.2.9\"\r\n  firebase_auth_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: firebase_auth_platform_interface\r\n      sha256: c645fec50b0391aa878288f58fa4fe9762c271380c457aedf5c7c9b718604f68\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"6.11.11\"\r\n  firebase_auth_web:\r\n    dependency: transitive\r\n    description:\r\n      name: firebase_auth_web\r\n      sha256: \"2dcf2a36852b9091741b4a4047a02e1f2c43a62c6cacec7df573a793a6543e6d\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"5.2.8\"\r\n  firebase_core:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: firebase_core\r\n      sha256: fe30ac230f12f8836bb97e6e09197340d3c584526825b1746ea362a82e1e43f7\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.7.0\"\r\n  firebase_core_platform_interface:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: firebase_core_platform_interface\r\n      sha256: \"5615b30c36f55b2777d0533771deda7e5730e769e5d3cb7fda79e9bed86cfa55\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"4.5.3\"\r\n  firebase_core_web:\r\n    dependency: transitive\r\n    description:\r\n      name: firebase_core_web\r\n      sha256: \"291fbcace608aca6c860652e1358ef89752be8cc3ef227f8bbcd1e62775b833a\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.2.1\"\r\n  firebase_messaging:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: firebase_messaging\r\n      sha256: \"95f7565b8e992d2188cdd8dc5612330f7c309485fe425d3f9844f18e90741e3e\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"14.2.5\"\r\n  firebase_messaging_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: firebase_messaging_platform_interface\r\n      sha256: c5e79e15d1018cafffea1a6e45249db0d6bc42dbe35178634c77488179880e79\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"4.2.14\"\r\n  firebase_messaging_web:\r\n    dependency: transitive\r\n    description:\r\n      name: firebase_messaging_web\r\n      sha256: cd0cfcab7a63282049dec95a9955e7a487b5e580162310d12a82a10c0c32c546\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.2.15\"\r\n  firebase_phone_auth_handler:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: firebase_phone_auth_handler\r\n      sha256: \"586e69d6a14eb1276634bbf73a1ede598e85e14e95ea887c67e6d9c62fb6e821\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.8\"\r\n  flutter:\r\n    dependency: \"direct main\"\r\n    description: flutter\r\n    source: sdk\r\n    version: \"0.0.0\"\r\n  flutter_animated_dialog:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: flutter_animated_dialog\r\n      sha256: \"16b88e56ea7014925a1ed4c3c3644f735edfe9194d5cc027a1a10a95d8f55fce\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.1\"\r\n  flutter_blurhash:\r\n    dependency: transitive\r\n    description:\r\n      name: flutter_blurhash\r\n      sha256: \"05001537bd3fac7644fa6558b09ec8c0a3f2eba78c0765f88912882b1331a5c6\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.7.0\"\r\n  flutter_cache_manager:\r\n    dependency: transitive\r\n    description:\r\n      name: flutter_cache_manager\r\n      sha256: \"32cd900555219333326a2d0653aaaf8671264c29befa65bbd9856d204a4c9fb3\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.3.0\"\r\n  flutter_chat_types:\r\n    dependency: transitive\r\n    description:\r\n      name: flutter_chat_types\r\n      sha256: \"34d1d61e46d5ca15f3b46e72d0a9ac98da72edc5eb5bf644a26e27351c9e15ba\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.6.0\"\r\n  flutter_chat_ui:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: flutter_chat_ui\r\n      sha256: f13c48d06dd8be0d2feb0356a22d1cb6a0f83873b923b8d32bb4b55efb07cd39\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.6.6\"\r\n  flutter_launcher_icons:\r\n    dependency: \"direct dev\"\r\n    description:\r\n      name: flutter_launcher_icons\r\n      sha256: \"02dcaf49d405f652b7160e882bacfc02cb497041bb2eab2a49b1c393cf9aac12\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.12.0\"\r\n  flutter_link_previewer:\r\n    dependency: transitive\r\n    description:\r\n      name: flutter_link_previewer\r\n      sha256: d495edef667d4b5db37fb6f31571406c137161a8399dd44a5de4ce2a7c7ba529\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.2.0\"\r\n  flutter_linkify:\r\n    dependency: transitive\r\n    description:\r\n      name: flutter_linkify\r\n      sha256: c89fe74de985ec22f23d3538d2249add085a4f37ac1c29fd79e1a207efb81d63\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"5.0.2\"\r\n  flutter_local_notifications:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: flutter_local_notifications\r\n      sha256: \"293995f94e120c8afce768981bd1fa9c5d6de67c547568e3b42ae2defdcbb4a0\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"13.0.0\"\r\n  flutter_local_notifications_linux:\r\n    dependency: transitive\r\n    description:\r\n      name: flutter_local_notifications_linux\r\n      sha256: ccb08b93703aeedb58856e5637450bf3ffec899adb66dc325630b68994734b89\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.0.0+1\"\r\n  flutter_local_notifications_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: flutter_local_notifications_platform_interface\r\n      sha256: \"5ec1feac5f7f7d9266759488bc5f76416152baba9aa1b26fe572246caa00d1ab\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"6.0.0\"\r\n  flutter_localizations:\r\n    dependency: transitive\r\n    description: flutter\r\n    source: sdk\r\n    version: \"0.0.0\"\r\n  flutter_parsed_text:\r\n    dependency: transitive\r\n    description:\r\n      name: flutter_parsed_text\r\n      sha256: \"529cf5793b7acdf16ee0f97b158d0d4ba0bf06e7121ef180abe1a5b59e32c1e2\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.2.1\"\r\n  flutter_plugin_android_lifecycle:\r\n    dependency: transitive\r\n    description:\r\n      name: flutter_plugin_android_lifecycle\r\n      sha256: c224ac897bed083dabf11f238dd11a239809b446740be0c2044608c50029ffdf\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.9\"\r\n  flutter_polyline_points:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: flutter_polyline_points\r\n      sha256: \"02699e69142f51a248d784b6e3eec524194467fca5f7c4da19699ce2368b6980\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.0\"\r\n  flutter_rating_bar:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: flutter_rating_bar\r\n      sha256: d2af03469eac832c591a1eba47c91ecc871fe5708e69967073c043b2d775ed93\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"4.0.1\"\r\n  flutter_spinkit:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: flutter_spinkit\r\n      sha256: \"77a2117c0517ff909221f3160b8eb20052ab5216107581168af574ac1f05dff8\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"5.1.0\"\r\n  flutter_svg:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: flutter_svg\r\n      sha256: \"97c5b291b4fd34ae4f55d6a4c05841d4d0ed94952e033c5a6529e1b47b4d2a29\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.2\"\r\n  flutter_test:\r\n    dependency: \"direct dev\"\r\n    description: flutter\r\n    source: sdk\r\n    version: \"0.0.0\"\r\n  flutter_web_plugins:\r\n    dependency: transitive\r\n    description: flutter\r\n    source: sdk\r\n    version: \"0.0.0\"\r\n  fluttertoast:\r\n    dependency: transitive\r\n    description:\r\n      name: fluttertoast\r\n      sha256: \"2f9c4d3f4836421f7067a28f8939814597b27614e021da9d63e5d3fb6e212d25\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"8.2.1\"\r\n  geocoding:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: geocoding\r\n      sha256: \"26218460a902d4249b81e6baf9d55ce400fd1ebe6fc0a7e92b2c12b0b8e1e14e\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.5\"\r\n  geocoding_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: geocoding_platform_interface\r\n      sha256: \"8848605d307d844d89937cdb4b8ad7dfa880552078f310fa24d8a460f6dddab4\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.1\"\r\n  geolocator:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: geolocator\r\n      sha256: \"5c23f3613f50586c0bbb2b8f970240ae66b3bd992088cf60dd5ee2e6f7dde3a8\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"9.0.2\"\r\n  geolocator_android:\r\n    dependency: transitive\r\n    description:\r\n      name: geolocator_android\r\n      sha256: \"2ba24690aee0a3e1b6b7bd47c2711a50c874e95e4c758346589d35194adf6d6a\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"4.1.7\"\r\n  geolocator_apple:\r\n    dependency: transitive\r\n    description:\r\n      name: geolocator_apple\r\n      sha256: \"22b60ca3b8c0f58e6a9688ff855ee39ab813ca3f0c0609a48d282f6631266f2e\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.2.5\"\r\n  geolocator_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: geolocator_platform_interface\r\n      sha256: af4d69231452f9620718588f41acc4cb58312368716bfff2e92e770b46ce6386\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"4.0.7\"\r\n  geolocator_web:\r\n    dependency: transitive\r\n    description:\r\n      name: geolocator_web\r\n      sha256: f68a122da48fcfff68bbc9846bb0b74ef651afe84a1b1f6ec20939de4d6860e1\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.6\"\r\n  geolocator_windows:\r\n    dependency: transitive\r\n    description:\r\n      name: geolocator_windows\r\n      sha256: f5911c88e23f48b598dd506c7c19eff0e001645bdc03bb6fecb9f4549208354d\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.1.1\"\r\n  get:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: get\r\n      sha256: \"2ba20a47c8f1f233bed775ba2dd0d3ac97b4cf32fc17731b3dfc672b06b0e92a\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"4.6.5\"\r\n  get_storage:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: get_storage\r\n      sha256: \"39db1fffe779d0c22b3a744376e86febe4ade43bf65e06eab5af707dc84185a2\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.1\"\r\n  google_identity_services_web:\r\n    dependency: transitive\r\n    description:\r\n      name: google_identity_services_web\r\n      sha256: \"5d9af2f1fa192f2629a266d038ee9307b0abe729a4f1b454dd21b414f5e7d381\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.2.0\"\r\n  google_maps_flutter:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: google_maps_flutter\r\n      sha256: \"24392ef192f3b00bcd93151375676805a9933574423a5bd5509a0ead2e8a4215\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.2.5\"\r\n  google_maps_flutter_android:\r\n    dependency: transitive\r\n    description:\r\n      name: google_maps_flutter_android\r\n      sha256: \"88d0ed9ef7be4ba4839b85e67bd305ba1c5141e23b6fd1e665ef257755d8fef6\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.4.8\"\r\n  google_maps_flutter_ios:\r\n    dependency: transitive\r\n    description:\r\n      name: google_maps_flutter_ios\r\n      sha256: \"3a69e04df77afb60587b5270baf43dc51f1c254c79f69ddf1d9546f758d9f709\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.2.0\"\r\n  google_maps_flutter_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: google_maps_flutter_platform_interface\r\n      sha256: a07811d2b82055815ede75e1fe4b7b76f71a0b4820b26f71bdaddd157d6a3e20\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.2.6\"\r\n  google_sign_in:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: google_sign_in\r\n      sha256: \"750d08ffb4cd469f13068d15844ffd1d60c7ac1ca3c815918ba4ce4af22a2ddb\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"6.0.2\"\r\n  google_sign_in_android:\r\n    dependency: transitive\r\n    description:\r\n      name: google_sign_in_android\r\n      sha256: f27bd56527c567594167bd0a46f7ceb93122ed064d2eee612413d6af0bb2e2e5\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"6.1.7\"\r\n  google_sign_in_ios:\r\n    dependency: transitive\r\n    description:\r\n      name: google_sign_in_ios\r\n      sha256: \"2575ef0d06dbe6923cedf39766da8305d407bb891d9f4a59502c642719776c5c\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"5.6.0\"\r\n  google_sign_in_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: google_sign_in_platform_interface\r\n      sha256: fece762f0d2dd762ebde43ad70662a209ff6ee034111976549c392f7763d9264\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.3.1\"\r\n  google_sign_in_web:\r\n    dependency: transitive\r\n    description:\r\n      name: google_sign_in_web\r\n      sha256: \"824b42c0a0b01c062bf3b1d555432d84c8b1dd0c5bbf0773514e574f02be9f95\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.11.0+1\"\r\n  html:\r\n    dependency: transitive\r\n    description:\r\n      name: html\r\n      sha256: \"79d498e6d6761925a34ee5ea8fa6dfef38607781d2fa91e37523474282af55cb\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.15.2\"\r\n  http:\r\n    dependency: transitive\r\n    description:\r\n      name: http\r\n      sha256: \"6aa2946395183537c8b880962d935877325d6a09a2867c3970c05c0fed6ac482\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.13.5\"\r\n  http_parser:\r\n    dependency: transitive\r\n    description:\r\n      name: http_parser\r\n      sha256: \"2aa08ce0341cc9b354a498388e30986515406668dbcc4f7c950c3e715496693b\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"4.0.2\"\r\n  image:\r\n    dependency: transitive\r\n    description:\r\n      name: image\r\n      sha256: \"483a389d6ccb292b570c31b3a193779b1b0178e7eb571986d9a49904b6861227\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"4.0.15\"\r\n  image_cropper:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: image_cropper\r\n      sha256: \"85324928ee8a8be35a529446435ca53067865b9353c8681983472eeec66d780f\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.0.1\"\r\n  image_cropper_for_web:\r\n    dependency: transitive\r\n    description:\r\n      name: image_cropper_for_web\r\n      sha256: \"09e93a8ec0435adcaa23622ac090442872f18145d70b9ff605ffedcf97d56255\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.3\"\r\n  image_cropper_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: image_cropper_platform_interface\r\n      sha256: \"62349e3aab63873ea9b9ab9f69d036ab8a0d74b3004beec4303981386cb9273f\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.0.3\"\r\n  image_picker:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: image_picker\r\n      sha256: \"715d68a53d6bcc2eae26005097dc74c375a04c0d7c0e657da84deebbbbbf51ed\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.8.6+4\"\r\n  image_picker_android:\r\n    dependency: transitive\r\n    description:\r\n      name: image_picker_android\r\n      sha256: ca14b663fecbe7f5ddda83782abfb2e1dd2a23d6da49b6ed344bf8cf3871225a\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.8.5+9\"\r\n  image_picker_for_web:\r\n    dependency: transitive\r\n    description:\r\n      name: image_picker_for_web\r\n      sha256: \"66fc6e3877bbde82c33d122f3588777c3784ac5bd7d1cdd79213ef7aecb85b34\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.11\"\r\n  image_picker_ios:\r\n    dependency: transitive\r\n    description:\r\n      name: image_picker_ios\r\n      sha256: \"93b4403350b54f45a5061632721ee29a563c8b45b1e22feda9049b8329bd1337\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.8.7\"\r\n  image_picker_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: image_picker_platform_interface\r\n      sha256: \"1991219d9dbc42a99aff77e663af8ca51ced592cd6685c9485e3458302d3d4f8\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.6.3\"\r\n  intl:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: intl\r\n      sha256: \"910f85bce16fb5c6f614e117efa303e85a1731bb0081edf3604a2ae6e9a3cc91\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.17.0\"\r\n  js:\r\n    dependency: transitive\r\n    description:\r\n      name: js\r\n      sha256: \"5528c2f391ededb7775ec1daa69e65a2d61276f7552de2b5f7b8d34ee9fd4ab7\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.6.5\"\r\n  json_annotation:\r\n    dependency: transitive\r\n    description:\r\n      name: json_annotation\r\n      sha256: c33da08e136c3df0190bd5bbe51ae1df4a7d96e7954d1d7249fea2968a72d317\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"4.8.0\"\r\n  linkify:\r\n    dependency: transitive\r\n    description:\r\n      name: linkify\r\n      sha256: bdfbdafec6cdc9cd0ebb333a868cafc046714ad508e48be8095208c54691d959\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"4.1.0\"\r\n  location:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: location\r\n      sha256: \"9051959f6f2ccadd887b28b66e9cbbcc25b6838e37cf9e894c421ccc0ebf80b5\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"4.4.0\"\r\n  location_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: location_platform_interface\r\n      sha256: \"62eeaf1658e92e4459b727f55a3c328eccbac8ba043fa6d262ac5286ad48384c\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.3.0\"\r\n  location_web:\r\n    dependency: transitive\r\n    description:\r\n      name: location_web\r\n      sha256: \"6c08c408a040534c0269c4ff9fe17eebb5a36dea16512fbaf116b9c8bc21545b\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.1.1\"\r\n  logger:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: logger\r\n      sha256: c40f9ef51e5bffb4ce69ad2d8c8aad7bd47ec109c090521109b63a4e2bc27191\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.2.2\"\r\n  logging:\r\n    dependency: transitive\r\n    description:\r\n      name: logging\r\n      sha256: \"04094f2eb032cbb06c6f6e8d3607edcfcb0455e2bb6cbc010cb01171dcb64e6d\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.1.1\"\r\n  matcher:\r\n    dependency: transitive\r\n    description:\r\n      name: matcher\r\n      sha256: \"16db949ceee371e9b99d22f88fa3a73c4e59fd0afed0bd25fc336eb76c198b72\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.12.13\"\r\n  material_color_utilities:\r\n    dependency: transitive\r\n    description:\r\n      name: material_color_utilities\r\n      sha256: d92141dc6fe1dad30722f9aa826c7fbc896d021d792f80678280601aff8cf724\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.2.0\"\r\n  meta:\r\n    dependency: transitive\r\n    description:\r\n      name: meta\r\n      sha256: \"6c268b42ed578a53088d834796959e4a1814b5e9e164f147f580a386e5decf42\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.8.0\"\r\n  modal_bottom_sheet:\r\n    dependency: transitive\r\n    description:\r\n      name: modal_bottom_sheet\r\n      sha256: ef533916a2c3089571c32bd34e410faca77a6849a3f28f748e0794525c5658a0\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.2\"\r\n  nested:\r\n    dependency: transitive\r\n    description:\r\n      name: nested\r\n      sha256: \"03bac4c528c64c95c722ec99280375a6f2fc708eec17c7b3f07253b626cd2a20\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.0\"\r\n  octo_image:\r\n    dependency: transitive\r\n    description:\r\n      name: octo_image\r\n      sha256: \"107f3ed1330006a3bea63615e81cf637433f5135a52466c7caa0e7152bca9143\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.2\"\r\n  otp_text_field:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: otp_text_field\r\n      sha256: \"340b1ed135e1abe9fac0aaebe1c4e48147d95a3e29ecb03ae45ad63a7c28d65d\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.1.3\"\r\n  package_info_plus:\r\n    dependency: transitive\r\n    description:\r\n      name: package_info_plus\r\n      sha256: f62d7253edc197fe3c88d7c2ddab82d68f555e778d55390ccc3537eca8e8d637\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.4.3+1\"\r\n  package_info_plus_linux:\r\n    dependency: transitive\r\n    description:\r\n      name: package_info_plus_linux\r\n      sha256: \"04b575f44233d30edbb80a94e57cad9107aada334fc02aabb42b6becd13c43fc\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.5\"\r\n  package_info_plus_macos:\r\n    dependency: transitive\r\n    description:\r\n      name: package_info_plus_macos\r\n      sha256: a2ad8b4acf4cd479d4a0afa5a74ea3f5b1c7563b77e52cc32b3ee6956d5482a6\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.3.0\"\r\n  package_info_plus_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: package_info_plus_platform_interface\r\n      sha256: f7a0c8f1e7e981bc65f8b64137a53fd3c195b18d429fba960babc59a5a1c7ae8\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.2\"\r\n  package_info_plus_web:\r\n    dependency: transitive\r\n    description:\r\n      name: package_info_plus_web\r\n      sha256: f0829327eb534789e0a16ccac8936a80beed4e2401c4d3a74f3f39094a822d3b\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.6\"\r\n  package_info_plus_windows:\r\n    dependency: transitive\r\n    description:\r\n      name: package_info_plus_windows\r\n      sha256: \"79524f11c42dd9078b96d797b3cf79c0a2883a50c4920dc43da8562c115089bc\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.0\"\r\n  path:\r\n    dependency: transitive\r\n    description:\r\n      name: path\r\n      sha256: db9d4f58c908a4ba5953fcee2ae317c94889433e5024c27ce74a37f94267945b\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.8.2\"\r\n  path_parsing:\r\n    dependency: transitive\r\n    description:\r\n      name: path_parsing\r\n      sha256: e3e67b1629e6f7e8100b367d3db6ba6af4b1f0bb80f64db18ef1fbabd2fa9ccf\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.1\"\r\n  path_provider:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: path_provider\r\n      sha256: \"04890b994ee89bfa80bf3080bfec40d5a92c5c7a785ebb02c13084a099d2b6f9\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.13\"\r\n  path_provider_android:\r\n    dependency: transitive\r\n    description:\r\n      name: path_provider_android\r\n      sha256: \"7623b7d4be0f0f7d9a8b5ee6879fc13e4522d4c875ab86801dee4af32b54b83e\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.23\"\r\n  path_provider_foundation:\r\n    dependency: transitive\r\n    description:\r\n      name: path_provider_foundation\r\n      sha256: eec003594f19fe2456ea965ae36b3fc967bc5005f508890aafe31fa75e41d972\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.2\"\r\n  path_provider_linux:\r\n    dependency: transitive\r\n    description:\r\n      name: path_provider_linux\r\n      sha256: \"525ad5e07622d19447ad740b1ed5070031f7a5437f44355ae915ff56e986429a\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.9\"\r\n  path_provider_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: path_provider_platform_interface\r\n      sha256: \"57585299a729335f1298b43245842678cb9f43a6310351b18fb577d6e33165ec\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.6\"\r\n  path_provider_windows:\r\n    dependency: transitive\r\n    description:\r\n      name: path_provider_windows\r\n      sha256: \"642ddf65fde5404f83267e8459ddb4556316d3ee6d511ed193357e25caa3632d\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.4\"\r\n  pedantic:\r\n    dependency: transitive\r\n    description:\r\n      name: pedantic\r\n      sha256: \"67fc27ed9639506c856c840ccce7594d0bdcd91bc8d53d6e52359449a1d50602\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.11.1\"\r\n  permission_handler:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: permission_handler\r\n      sha256: \"33c6a1253d1f95fd06fa74b65b7ba907ae9811f9d5c1d3150e51417d04b8d6a8\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"10.2.0\"\r\n  permission_handler_android:\r\n    dependency: transitive\r\n    description:\r\n      name: permission_handler_android\r\n      sha256: \"8028362b40c4a45298f1cbfccd227c8dd6caf0e27088a69f2ba2ab15464159e2\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"10.2.0\"\r\n  permission_handler_apple:\r\n    dependency: transitive\r\n    description:\r\n      name: permission_handler_apple\r\n      sha256: \"9c370ef6a18b1c4b2f7f35944d644a56aa23576f23abee654cf73968de93f163\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"9.0.7\"\r\n  permission_handler_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: permission_handler_platform_interface\r\n      sha256: \"68abbc472002b5e6dfce47fe9898c6b7d8328d58b5d2524f75e277c07a97eb84\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.9.0\"\r\n  permission_handler_windows:\r\n    dependency: transitive\r\n    description:\r\n      name: permission_handler_windows\r\n      sha256: f67cab14b4328574938ecea2db3475dad7af7ead6afab6338772c5f88963e38b\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.1.2\"\r\n  petitparser:\r\n    dependency: transitive\r\n    description:\r\n      name: petitparser\r\n      sha256: \"49392a45ced973e8d94a85fdb21293fbb40ba805fc49f2965101ae748a3683b4\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"5.1.0\"\r\n  photo_view:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: photo_view\r\n      sha256: \"8036802a00bae2a78fc197af8a158e3e2f7b500561ed23b4c458107685e645bb\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.14.0\"\r\n  pin_code_fields:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: pin_code_fields\r\n      sha256: c8652519d14688f3fe2a8288d86910a46aa0b9046d728f292d3bf6067c31b4c7\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"7.4.0\"\r\n  pin_input_text_field:\r\n    dependency: transitive\r\n    description:\r\n      name: pin_input_text_field\r\n      sha256: \"712ac2dbf5098443ce90a2e1e6850654037a471bdfc9333b4e0a15e678642e39\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"4.5.0\"\r\n  pinput:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: pinput\r\n      sha256: \"1773743c188cdd2f8d0398ea708ec72645bb41ac9311755c4f7bb03a4184bdcf\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.2.31\"\r\n  place_picker:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: place_picker\r\n      sha256: \"95a861eaffe015d5b3ae45c991e5d667009f7d1eb136b1438075e2470880509d\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.10.0\"\r\n  platform:\r\n    dependency: transitive\r\n    description:\r\n      name: platform\r\n      sha256: \"4a451831508d7d6ca779f7ac6e212b4023dd5a7d08a27a63da33756410e32b76\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.1.0\"\r\n  plugin_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: plugin_platform_interface\r\n      sha256: \"6a2128648c854906c53fa8e33986fc0247a1116122f9534dd20e3ab9e16a32bc\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.4\"\r\n  pointycastle:\r\n    dependency: transitive\r\n    description:\r\n      name: pointycastle\r\n      sha256: db7306cf0249f838d1a24af52b5a5887c5bf7f31d8bb4e827d071dc0939ad346\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.6.2\"\r\n  process:\r\n    dependency: transitive\r\n    description:\r\n      name: process\r\n      sha256: \"53fd8db9cec1d37b0574e12f07520d582019cb6c44abf5479a01505099a34a09\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"4.2.4\"\r\n  provider:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: provider\r\n      sha256: cdbe7530b12ecd9eb455bdaa2fcb8d4dad22e80b8afb4798b41479d5ce26847f\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"6.0.5\"\r\n  quiver:\r\n    dependency: transitive\r\n    description:\r\n      name: quiver\r\n      sha256: b1c1ac5ce6688d77f65f3375a9abb9319b3cb32486bdc7a1e0fdf004d7ba4e47\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.2.1\"\r\n  razorpay_flutter:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: razorpay_flutter\r\n      sha256: \"959dbedc3af25fd41b43944bc5db00d4be1ea1967fed5d69fba3fc6700b1f103\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.3.4\"\r\n  rxdart:\r\n    dependency: transitive\r\n    description:\r\n      name: rxdart\r\n      sha256: \"0c7c0cedd93788d996e33041ffecda924cc54389199cde4e6a34b440f50044cb\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.27.7\"\r\n  scroll_to_index:\r\n    dependency: transitive\r\n    description:\r\n      name: scroll_to_index\r\n      sha256: b707546e7500d9f070d63e5acf74fd437ec7eeeb68d3412ef7b0afada0b4f176\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.0.1\"\r\n  shared_preferences:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: shared_preferences\r\n      sha256: ee6257848f822b8481691f20c3e6d2bfee2e9eccb2a3d249907fcfb198c55b41\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.18\"\r\n  shared_preferences_android:\r\n    dependency: transitive\r\n    description:\r\n      name: shared_preferences_android\r\n      sha256: a51a4f9375097f94df1c6e0a49c0374440d31ab026b59d58a7e7660675879db4\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.16\"\r\n  shared_preferences_foundation:\r\n    dependency: transitive\r\n    description:\r\n      name: shared_preferences_foundation\r\n      sha256: \"6b84fdf06b32bb336f972d373cd38b63734f3461ba56ac2ba01b56d052796259\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.4\"\r\n  shared_preferences_linux:\r\n    dependency: transitive\r\n    description:\r\n      name: shared_preferences_linux\r\n      sha256: d7fb71e6e20cd3dfffcc823a28da3539b392e53ed5fc5c2b90b55fdaa8a7e8fa\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.4\"\r\n  shared_preferences_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: shared_preferences_platform_interface\r\n      sha256: \"824bfd02713e37603b2bdade0842e47d56e7db32b1dcdd1cae533fb88e2913fc\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.1\"\r\n  shared_preferences_web:\r\n    dependency: transitive\r\n    description:\r\n      name: shared_preferences_web\r\n      sha256: \"6737b757e49ba93de2a233df229d0b6a87728cea1684da828cbc718b65dcf9d7\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.5\"\r\n  shared_preferences_windows:\r\n    dependency: transitive\r\n    description:\r\n      name: shared_preferences_windows\r\n      sha256: bd014168e8484837c39ef21065b78f305810ceabc1d4f90be6e3b392ce81b46d\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.4\"\r\n  shimmer:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: shimmer\r\n      sha256: \"1f1009b5845a1f88f1c5630212279540486f97409e9fc3f63883e71070d107bf\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.0\"\r\n  sky_engine:\r\n    dependency: transitive\r\n    description: flutter\r\n    source: sdk\r\n    version: \"0.0.99\"\r\n  sliding_up_panel:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: sliding_up_panel\r\n      sha256: \"578e90956a6212d1e406373250b2436a0f3afece29aee3c24c8360094d6cf968\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.0+1\"\r\n  smart_auth:\r\n    dependency: transitive\r\n    description:\r\n      name: smart_auth\r\n      sha256: \"8cfaec55b77d5930ed1666bb7ae70db5bade099bb1422401386853b400962113\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.8\"\r\n  sms_autofill:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: sms_autofill\r\n      sha256: \"2eb159f53ed7d76002d6c15cad99e14dbd5f997f3bb7f9bcad9bd44ba5fcd6c3\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.3.0\"\r\n  socket_io_client:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: socket_io_client\r\n      sha256: a9c589d3fe2658506be38ddb36f23348daab73a00ff1645533669d07a5111cfc\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.1\"\r\n  socket_io_common:\r\n    dependency: transitive\r\n    description:\r\n      name: socket_io_common\r\n      sha256: \"5a218a784df4d1927ae713e17af619caa736cb2ebac287c59e4e24228b22da29\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.2\"\r\n  source_span:\r\n    dependency: transitive\r\n    description:\r\n      name: source_span\r\n      sha256: dd904f795d4b4f3b870833847c461801f6750a9fa8e61ea5ac53f9422b31f250\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.9.1\"\r\n  sqflite:\r\n    dependency: transitive\r\n    description:\r\n      name: sqflite\r\n      sha256: \"851d5040552cf911f4cabda08d003eca76b27da3ed0002978272e27c8fbf8ecc\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.2.5\"\r\n  sqflite_common:\r\n    dependency: transitive\r\n    description:\r\n      name: sqflite_common\r\n      sha256: bfd6973aaeeb93475bc0d875ac9aefddf7965ef22ce09790eb963992ffc5183f\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.4.2+2\"\r\n  stack_trace:\r\n    dependency: transitive\r\n    description:\r\n      name: stack_trace\r\n      sha256: c3c7d8edb15bee7f0f74debd4b9c5f3c2ea86766fe4178eb2a18eb30a0bdaed5\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.11.0\"\r\n  stream_channel:\r\n    dependency: transitive\r\n    description:\r\n      name: stream_channel\r\n      sha256: \"83615bee9045c1d322bbbd1ba209b7a749c2cbcdcb3fdd1df8eb488b3279c1c8\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.1\"\r\n  stream_transform:\r\n    dependency: transitive\r\n    description:\r\n      name: stream_transform\r\n      sha256: \"14a00e794c7c11aa145a170587321aedce29769c08d7f58b1d141da75e3b1c6f\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.0\"\r\n  string_scanner:\r\n    dependency: transitive\r\n    description:\r\n      name: string_scanner\r\n      sha256: \"556692adab6cfa87322a115640c11f13cb77b3f076ddcc5d6ae3c20242bedcde\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.2.0\"\r\n  synchronized:\r\n    dependency: transitive\r\n    description:\r\n      name: synchronized\r\n      sha256: \"33b31b6beb98100bf9add464a36a8dd03eb10c7a8cf15aeec535e9b054aaf04b\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.0.1\"\r\n  term_glyph:\r\n    dependency: transitive\r\n    description:\r\n      name: term_glyph\r\n      sha256: a29248a84fbb7c79282b40b8c72a1209db169a2e0542bce341da992fe1bc7e84\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.2.1\"\r\n  test_api:\r\n    dependency: transitive\r\n    description:\r\n      name: test_api\r\n      sha256: ad540f65f92caa91bf21dfc8ffb8c589d6e4dc0c2267818b4cc2792857706206\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.4.16\"\r\n  timezone:\r\n    dependency: transitive\r\n    description:\r\n      name: timezone\r\n      sha256: \"24c8fcdd49a805d95777a39064862133ff816ebfffe0ceff110fb5960e557964\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.9.1\"\r\n  typed_data:\r\n    dependency: transitive\r\n    description:\r\n      name: typed_data\r\n      sha256: \"26f87ade979c47a150c9eaab93ccd2bebe70a27dc0b4b29517f2904f04eb11a5\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.3.1\"\r\n  universal_platform:\r\n    dependency: transitive\r\n    description:\r\n      name: universal_platform\r\n      sha256: d315be0f6641898b280ffa34e2ddb14f3d12b1a37882557869646e0cc363d0cc\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.0.0+1\"\r\n  url_launcher:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: url_launcher\r\n      sha256: \"75f2846facd11168d007529d6cd8fcb2b750186bea046af9711f10b907e1587e\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"6.1.10\"\r\n  url_launcher_android:\r\n    dependency: transitive\r\n    description:\r\n      name: url_launcher_android\r\n      sha256: \"1f4d9ebe86f333c15d318f81dcdc08b01d45da44af74552608455ebdc08d9732\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"6.0.24\"\r\n  url_launcher_ios:\r\n    dependency: transitive\r\n    description:\r\n      name: url_launcher_ios\r\n      sha256: c9cd648d2f7ab56968e049d4e9116f96a85517f1dd806b96a86ea1018a3a82e5\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"6.1.1\"\r\n  url_launcher_linux:\r\n    dependency: transitive\r\n    description:\r\n      name: url_launcher_linux\r\n      sha256: e29039160ab3730e42f3d811dc2a6d5f2864b90a70fb765ea60144b03307f682\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.0.3\"\r\n  url_launcher_macos:\r\n    dependency: transitive\r\n    description:\r\n      name: url_launcher_macos\r\n      sha256: \"2dddb3291a57b074dade66b5e07e64401dd2487caefd4e9e2f467138d8c7eb06\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.0.3\"\r\n  url_launcher_platform_interface:\r\n    dependency: transitive\r\n    description:\r\n      name: url_launcher_platform_interface\r\n      sha256: \"6c9ca697a5ae218ce56cece69d46128169a58aa8653c1b01d26fcd4aad8c4370\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.2\"\r\n  url_launcher_web:\r\n    dependency: transitive\r\n    description:\r\n      name: url_launcher_web\r\n      sha256: \"574cfbe2390666003c3a1d129bdc4574aaa6728f0c00a4829a81c316de69dd9b\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.0.15\"\r\n  url_launcher_windows:\r\n    dependency: transitive\r\n    description:\r\n      name: url_launcher_windows\r\n      sha256: \"97c9067950a0d09cbd93e2e3f0383d1403989362b97102fbf446473a48079a4b\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.0.4\"\r\n  uuid:\r\n    dependency: transitive\r\n    description:\r\n      name: uuid\r\n      sha256: \"648e103079f7c64a36dc7d39369cabb358d377078a051d6ae2ad3aa539519313\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.0.7\"\r\n  vector_graphics:\r\n    dependency: transitive\r\n    description:\r\n      name: vector_graphics\r\n      sha256: e43c38822e7d2facd790fd617ce16b10cc359a4b094d5772e3198904270918ef\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.1.1\"\r\n  vector_graphics_codec:\r\n    dependency: transitive\r\n    description:\r\n      name: vector_graphics_codec\r\n      sha256: \"4a85a8563405bfe223052a85d6f8bc276ba3a22e12acfa3fd9a7108c67b32076\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.1.1\"\r\n  vector_graphics_compiler:\r\n    dependency: transitive\r\n    description:\r\n      name: vector_graphics_compiler\r\n      sha256: \"9e8066d2f18e88f2fb1cf6c8ca567417bdfb0145ac28519dcca3c15d42a10b3e\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"1.1.1\"\r\n  vector_math:\r\n    dependency: transitive\r\n    description:\r\n      name: vector_math\r\n      sha256: \"80b3257d1492ce4d091729e3a67a60407d227c27241d6927be0130c98e741803\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"2.1.4\"\r\n  visibility_detector:\r\n    dependency: transitive\r\n    description:\r\n      name: visibility_detector\r\n      sha256: \"15c54a459ec2c17b4705450483f3d5a2858e733aee893dcee9d75fd04814940d\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.3.3\"\r\n  win32:\r\n    dependency: transitive\r\n    description:\r\n      name: win32\r\n      sha256: c9ebe7ee4ab0c2194e65d3a07d8c54c5d00bb001b76081c4a04cdb8448b59e46\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.1.3\"\r\n  xdg_directories:\r\n    dependency: transitive\r\n    description:\r\n      name: xdg_directories\r\n      sha256: bd512f03919aac5f1313eb8249f223bacf4927031bf60b02601f81f687689e86\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"0.2.0+3\"\r\n  xml:\r\n    dependency: transitive\r\n    description:\r\n      name: xml\r\n      sha256: \"979ee37d622dec6365e2efa4d906c37470995871fe9ae080d967e192d88286b5\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"6.2.2\"\r\n  yaml:\r\n    dependency: transitive\r\n    description:\r\n      name: yaml\r\n      sha256: \"23812a9b125b48d4007117254bca50abb6c712352927eece9e155207b1db2370\"\r\n      url: \"https://pub.dev\"\r\n    source: hosted\r\n    version: \"3.1.1\"\r\nsdks:\r\n  dart: \">=2.19.0-0 <3.0.0\"\r\n  flutter: \">=3.7.0\"\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pubspec.lock b/pubspec.lock
--- a/pubspec.lock	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ b/pubspec.lock	(date 1679551723412)
@@ -5,10 +5,10 @@
     dependency: transitive
     description:
       name: _flutterfire_internals
-      sha256: "64fcb0dbca4386356386c085142fa6e79c00a3326ceaa778a2d25f5d9ba61441"
+      sha256: "330d7fcbb72624f5b6d374af8b059b0ef4ba96ba5b8987f874964a1287eb617d"
       url: "https://pub.dev"
     source: hosted
-    version: "1.0.16"
+    version: "1.0.18"
   archive:
     dependency: transitive
     description:
@@ -277,10 +277,10 @@
     dependency: "direct main"
     description:
       name: firebase_core
-      sha256: fe30ac230f12f8836bb97e6e09197340d3c584526825b1746ea362a82e1e43f7
+      sha256: "75f747cafd7cbd6c00b908e3a7aa59fc31593d46ba8165d9ee8a79e69464a394"
       url: "https://pub.dev"
     source: hosted
-    version: "2.7.0"
+    version: "2.8.0"
   firebase_core_platform_interface:
     dependency: "direct main"
     description:
@@ -293,34 +293,34 @@
     dependency: transitive
     description:
       name: firebase_core_web
-      sha256: "291fbcace608aca6c860652e1358ef89752be8cc3ef227f8bbcd1e62775b833a"
+      sha256: "0c1cf1f1022d2245ac117443bb95207952ca770281524d2908e323bc063fb8ff"
       url: "https://pub.dev"
     source: hosted
-    version: "2.2.1"
+    version: "2.2.2"
   firebase_messaging:
     dependency: "direct main"
     description:
       name: firebase_messaging
-      sha256: "95f7565b8e992d2188cdd8dc5612330f7c309485fe425d3f9844f18e90741e3e"
+      sha256: e82c99bcccf707db4d82ac3fb07be629a392c4cc2a6756aaf1a74c009114846f
       url: "https://pub.dev"
     source: hosted
-    version: "14.2.5"
+    version: "14.3.0"
   firebase_messaging_platform_interface:
     dependency: transitive
     description:
       name: firebase_messaging_platform_interface
-      sha256: c5e79e15d1018cafffea1a6e45249db0d6bc42dbe35178634c77488179880e79
+      sha256: "710bb139ff6e27fe47a0684ba88df4b7517a44d814dc6b7f54a2537568a82fcf"
       url: "https://pub.dev"
     source: hosted
-    version: "4.2.14"
+    version: "4.2.16"
   firebase_messaging_web:
     dependency: transitive
     description:
       name: firebase_messaging_web
-      sha256: cd0cfcab7a63282049dec95a9955e7a487b5e580162310d12a82a10c0c32c546
+      sha256: "66ece031cb17fb771cda4b3328858395fa48aa4c3b3e6a5d1bcaff928086cacd"
       url: "https://pub.dev"
     source: hosted
-    version: "3.2.15"
+    version: "3.2.17"
   firebase_phone_auth_handler:
     dependency: "direct main"
     description:
Index: lib/providers/auth_provider.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:convert';\r\n\r\nimport 'package:firebase_auth/firebase_auth.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:get/get.dart';\r\nimport 'package:google_sign_in/google_sign_in.dart';\r\nimport 'package:image_picker/image_picker.dart';\r\nimport 'package:provider/provider.dart';\r\nimport 'package:sultan_cab/models/UserModel/user_model.dart';\r\nimport 'package:sultan_cab/screens/TaxiBooking/navigation_screen.dart';\r\nimport 'package:sultan_cab/screens/commonPages/phone_verify.dart';\r\nimport 'package:sultan_cab/services/ApiServices/StorageServices/get_storage.dart';\r\nimport 'package:sultan_cab/services/ApiServices/api_services.dart';\r\nimport 'package:sultan_cab/services/ApiServices/api_urls.dart';\r\nimport 'package:sultan_cab/utils/commons.dart';\r\nimport 'package:sultan_cab/widgets/app_widgets.dart';\r\nimport 'package:sultan_cab/utils/const.dart';\r\nimport '../models/registration/userRegResponse.dart';\r\nimport '../screens/commonPages/otp_verifications.dart';\r\n\r\nAuthProvider authProvider = Provider.of(Get.context!, listen: false);\r\n\r\nclass AuthProvider extends ChangeNotifier {\r\n  TextEditingController nameController = TextEditingController();\r\n  TextEditingController companyCR = TextEditingController();\r\n  TextEditingController companyContact = TextEditingController();\r\n  TextEditingController phoneController = TextEditingController();\r\n  TextEditingController pinPutController = TextEditingController();\r\n\r\n  TextEditingController emailController = TextEditingController();\r\n  TextEditingController passwordController = TextEditingController();\r\n  TextEditingController password2Controller = TextEditingController();\r\n  UserCredential? userCredential;\r\n  UserAuthModel? userAuthModel;\r\n  FirebaseAuth fireAuth = FirebaseAuth.instance;\r\n  String? verificationId;\r\n  String? otpPin;\r\n  String? emailOtp;\r\n  XFile? xFile;\r\n  bool isSocialLogin = false;\r\n\r\n  void disposeController() {\r\n    nameController.clear();\r\n    phoneController.clear();\r\n    pinPutController.clear();\r\n    companyCR.clear();\r\n    companyContact.clear();\r\n    password2Controller.clear();\r\n    passwordController.clear();\r\n    emailController.clear();\r\n    verificationId = '';\r\n    userCredential = null;\r\n  }\r\n\r\n  bool checkUser() {\r\n    return StorageCRUD.box.hasData(StorageKeys.userData);\r\n  }\r\n\r\n  // void mobileSignIn() async {\r\n  //   if (phoneController.text.isNotEmpty) {\r\n  //     await otpSend(phoneNumber: phoneController.text);\r\n  //   } else {\r\n  //     AppConst.errorSnackBar('Empty fields');\r\n  //   }\r\n  // }\r\n\r\n  Future<bool> signInWithMobile() async {\r\n    Map<String, String> fields = {\r\n      'name': phoneController.text,\r\n      'loginId': phoneController.text,\r\n      'isSocialLogin': 'true',\r\n      'socialType': 'PHONE',\r\n      'isActive': 'true',\r\n      'userType': 'Rider'\r\n    };\r\n\r\n    return await signUp(fields: fields, files: null);\r\n  }\r\n\r\n  Future<bool> signUp(\r\n      {required Map<String, String> fields, String? files}) async {\r\n    String response = await ApiServices.postMethod(\r\n      fields: fields,\r\n      feedUrl: ApiUrls.CREATE_ACCOUNT,\r\n      files: files,\r\n      forSignInSignUp: true,\r\n    );\r\n    if (response.isEmpty) return false;\r\n    userAuthModel = userAuthModelFromJson(response);\r\n    await AppConst.successSnackBar(userAuthModel!.message.toString());\r\n    await StorageCRUD.saveUser(response);\r\n    disposeController();\r\n    gotoPage(NavigationScreen(), isClosePrevious: true);\r\n    return true;\r\n  }\r\n\r\n  gotoPage(Widget widget,\r\n      {Transition transition: Transition.native,\r\n      Duration duration: const Duration(seconds: 1),\r\n      bool isClosePrevious: false}) {\r\n    if (isClosePrevious) {\r\n      Get.offAll(() => widget, transition: transition, duration: duration);\r\n    } else {\r\n      Get.to(() => widget, transition: transition, duration: duration);\r\n    }\r\n  }\r\n\r\n  Future<void> otpSend({\r\n    required String phoneNumber,\r\n  }) async {\r\n    AppConst.startProgress();\r\n    try {\r\n      await fireAuth.verifyPhoneNumber(\r\n          timeout: const Duration(seconds: 60),\r\n          phoneNumber: phoneNumber,\r\n          verificationCompleted: (PhoneAuthCredential credential) async {\r\n            AppConst.stopProgress();\r\n            AppConst.errorSnackBar(\"Verification completed\");\r\n          },\r\n          verificationFailed: (FirebaseAuthException exception) async {\r\n            AppConst.stopProgress();\r\n            logger.e(exception.message);\r\n            AppConst.errorSnackBar(\"Verification Failed ${exception.message}\");\r\n            return;\r\n          },\r\n          codeSent: (String verificationId, int? resendToken) async {\r\n            AppConst.stopProgress();\r\n            AppConst.successSnackBar(\"Code Sent\");\r\n            this.verificationId = verificationId;\r\n            // dialogBoxOtp(Get.context!);\r\n            Get.to(() => VerifyPhoneNumberScreen(\r\n                phoneNumber: authProvider.phoneController.text));\r\n            notifyListeners();\r\n          },\r\n          codeAutoRetrievalTimeout: (String verificationId) async {});\r\n    } catch (e) {\r\n      logger.e(e.toString());\r\n      AppConst.errorSnackBar(e.toString());\r\n\r\n      AppConst.stopProgress();\r\n    }\r\n  }\r\n\r\n  Future<bool> verifyPhone() async {\r\n    AppConst.startProgress();\r\n    PhoneAuthCredential credential = PhoneAuthProvider.credential(\r\n        verificationId: this.verificationId!, smsCode: pinPutController.text);\r\n\r\n    await fireAuth.signInWithCredential(credential);\r\n\r\n    if (credential.verificationId!.isEmpty) {\r\n      AppConst.stopProgress();\r\n      return false;\r\n    } else {\r\n      await signInWithMobile();\r\n      AppConst.stopProgress();\r\n      AppConst.successSnackBar(\"Logged In\");\r\n      return true;\r\n    }\r\n  }\r\n\r\n  Future<bool> updateProfile() async {\r\n    AppConst.startProgress();\r\n    Map<String, String>? fields;\r\n    if (nameController.text.isNotEmpty)\r\n      fields = {\r\n        'userId': StorageCRUD.getUser()!.id.toString(),\r\n        'loginId': StorageCRUD.getUser()!.userLogins.toString(),\r\n        \"name\": nameController.text,\r\n      };\r\n\r\n    String response = await ApiServices.postMethod(\r\n        feedUrl: ApiUrls.UPDATE_PROFILE, files: xFile?.path, fields: fields);\r\n    AppConst.stopProgress();\r\n\r\n    if (response.isEmpty) return false;\r\n\r\n    logger.i(response);\r\n    await StorageCRUD.saveUser(response);\r\n\r\n    return true;\r\n  }\r\n\r\n  Future<bool> logout() async {\r\n    try {\r\n      await StorageCRUD.erase();\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  Future<void> getDpImage() async {\r\n    ImagePicker picker = ImagePicker();\r\n\r\n    xFile == null;\r\n    notifyListeners();\r\n    String choice = await AppWidgets.chooseImageSource();\r\n    if (choice == \"Camera\") {\r\n      xFile =\r\n          await picker.pickImage(source: ImageSource.camera, imageQuality: 50);\r\n      notifyListeners();\r\n    } else if (choice == \"Gallery\") {\r\n      xFile =\r\n          await picker.pickImage(source: ImageSource.gallery, imageQuality: 50);\r\n      notifyListeners();\r\n    }\r\n  }\r\n\r\n  void disposeControllers() {\r\n    nameController.clear();\r\n    phoneController.clear();\r\n  }\r\n\r\n  //TODO\r\n  Future<bool> signInWithGoogle() async {\r\n    AppConst.startProgress();\r\n    final GoogleSignInAccount? googleUser = await GoogleSignIn().signIn();\r\n    if (googleUser == null) {\r\n      AppConst.stopProgress();\r\n      return false;\r\n    }\r\n\r\n    final GoogleSignInAuthentication? googleAuth =\r\n        await googleUser.authentication;\r\n    if (googleAuth == null) {\r\n      AppConst.stopProgress();\r\n      return false;\r\n    }\r\n\r\n    final credential = GoogleAuthProvider.credential(\r\n      accessToken: googleAuth.accessToken,\r\n      idToken: googleAuth.idToken,\r\n    );\r\n    userCredential =\r\n        await FirebaseAuth.instance.signInWithCredential(credential);\r\n\r\n    if (userCredential != null) {\r\n      // Map<String, String> userCreate = {\r\n      //   'name': userCredential!.user!.displayName!,\r\n      //   'loginId': googleUser.email,\r\n      //   'isSocialLogin': 'true',\r\n      //   'socialType': 'GOOGLE',\r\n      //   'isActive': 'false',\r\n      //   'userType': 'Driver',\r\n      // };\r\n      // await createAccount(\r\n      //   userCreate,\r\n      // );\r\n\r\n      AppConst.stopProgress();\r\n      return true;\r\n    }\r\n    AppConst.errorSnackBar('userCredentials are null');\r\n    AppConst.stopProgress();\r\n    return false;\r\n  }\r\n\r\n  //TODO\r\n  UserRegResponse? userRegResponse;\r\n\r\n  Future<bool> userRegistration() async {\r\n    Map<String, String> body = {\r\n      'Name': \"${nameController.text}\",\r\n      'Email': \"${emailController.text}\",\r\n      'PhoneNumber': \"${phoneController.text}\",\r\n      'Password': \"${passwordController.text}\",\r\n      'CompanyContact': \"${companyContact.text}\",\r\n      'CompanyCR': \"${companyCR.text}\",\r\n    };\r\n    AppConst.startProgress();\r\n\r\n    String request = await ApiServices.multiPartPostMethodTruck(body, ApiUrls.REGISTRATION);\r\n\r\n    if (request.isEmpty) return false;\r\n    AppConst.stopProgress();\r\n    if (request.isEmpty) return false;\r\n\r\n    AppConst.successSnackBar('user registered');\r\n    await StorageCRUD.saveUser(request);\r\n    gotoPage(NavigationScreen(), isClosePrevious: true);\r\n    return true;\r\n  }\r\n\r\n  //TODO\r\n  Future<bool> registrationFormValidation() async {\r\n    if (nameController.text.isEmpty ||\r\n        passwordController.text.isEmpty ||\r\n        emailController.text.isEmpty ||\r\n        phoneController.text.isEmpty ||\r\n        companyCR.text.isEmpty ||\r\n        companyContact.text.isEmpty) {\r\n      AppConst.errorSnackBar('Something is missing..');\r\n      return false;\r\n    }\r\n\r\n    if (password2Controller.text != passwordController.text) {\r\n      AppConst.errorSnackBar(\"password doesn't match..\");\r\n      return false;\r\n    }\r\n    if (!password2Controller.text.isValidPassword()) {\r\n      AppConst.errorSnackBar(\r\n          \"Password must contain at least 1 special character, 1 numeric value, 1 upper case and 1 lower case.\");\r\n      return false;\r\n    }\r\n    if (password2Controller.text.length < 8) {\r\n      AppConst.errorSnackBar(\"Password should not be less than 8 digits.\");\r\n      return false;\r\n    }\r\n    await userRegistration();\r\n    return true;\r\n  }\r\n\r\n  Future<bool> userLogin() async {\r\n    AppConst.startProgress();\r\n    String body = json.encode(\r\n        {\"email\": emailController.text, \"password\": passwordController.text});\r\n\r\n    String request =\r\n        await ApiServices.postMethodTruck(feedUrl: ApiUrls.LOGIN, body: body);\r\n    if (request.isEmpty) {\r\n      AppConst.errorSnackBar('user name/password is invalid');\r\n      logger.i('user name/password is invalid');\r\n      return false;\r\n    }\r\n\r\n    AppConst.successSnackBar('Logged In');\r\n    await StorageCRUD.saveUser(request);\r\n    logger.i(StorageCRUD.getUser());\r\n    gotoPage(NavigationScreen(), isClosePrevious: true);\r\n    disposeController();\r\n    return true;\r\n  }\r\n\r\n  //TODO\r\n  Future<bool> loginFormValidation() async {\r\n    if (passwordController.text.isEmpty || emailController.text.isEmpty) {\r\n      AppConst.errorSnackBar('Something is missing..');\r\n      return false;\r\n    }\r\n\r\n    await userLogin();\r\n    return true;\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/providers/auth_provider.dart b/lib/providers/auth_provider.dart
--- a/lib/providers/auth_provider.dart	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ b/lib/providers/auth_provider.dart	(date 1679551618826)
@@ -270,7 +270,7 @@
     };
     AppConst.startProgress();
 
-    String request = await ApiServices.multiPartPostMethodTruck(body, ApiUrls.REGISTRATION);
+    String request = await ApiServices.postMethodTruck(feedUrl: ApiUrls.REGISTRATION,body:json.encode(body));
 
     if (request.isEmpty) return false;
     AppConst.stopProgress();
Index: lib/mode_selector.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:get/get.dart';\r\nimport 'package:provider/provider.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:sultan_cab/providers/GoogleMapProvider/location_and_map_provider.dart';\r\nimport 'package:sultan_cab/providers/TaxiBookingProvider/taxi_booking_provider.dart';\r\nimport 'package:sultan_cab/providers/taxi/app_flow_provider.dart';\r\nimport 'package:sultan_cab/utils/sizeConfig.dart';\r\nimport 'package:sultan_cab/utils/strings.dart';\r\nimport 'providers/NotificationProvider/notification_provider.dart';\r\nimport 'screens/TaxiBooking/start_booking.dart';\r\n\r\nclass ModeSelectorScreen extends StatefulWidget {\r\n  const ModeSelectorScreen({Key? key}) : super(key: key);\r\n\r\n  @override\r\n  State<ModeSelectorScreen> createState() => _ModeSelectorScreenState();\r\n}\r\n\r\nclass _ModeSelectorScreenState extends State<ModeSelectorScreen> {\r\n  late double h, b;\r\n  late NotificationsProvider notifyProvider;\r\n\r\n  @override\r\n  void initState() {\r\n    notifyProvider = Provider.of<NotificationsProvider>(context, listen: false);\r\n    notifyProvider.isAndroidPermissionGranted();\r\n    super.initState();\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    SizeConfig().init(context);\r\n\r\n    h = MediaQuery.of(context).size.height / 812;\r\n    b = MediaQuery.of(context).size.width / 375;\r\n\r\n    return Scaffold(\r\n      backgroundColor: Colors.white,\r\n      body: SafeArea(\r\n        child: Container(\r\n          alignment: Alignment.center,\r\n          child: SingleChildScrollView(\r\n            child: Column(\r\n              children: [\r\n                Column(\r\n                  children: [\r\n                    SizedBox(\r\n                      height: Get.width * .3,\r\n                      width: Get.width * .3,\r\n                      child: Image.asset(\r\n                        'assets/logo/sultan_logo.png',\r\n                        width: b * 215,\r\n                      ),\r\n                    ),\r\n                    SizedBox(height: 20),\r\n                    Text(\r\n                      \"Truck King\",\r\n                      style: TextStyle(fontSize: 30, fontWeight: FontWeight.bold),\r\n                    )\r\n                  ],\r\n                ),\r\n                sh(60),\r\n                Text(\r\n                  ChooseOptionLabel,\r\n                  style: TextStyle(\r\n                    fontWeight: FontWeight.w600,\r\n                    fontSize: b * 24,\r\n                  ),\r\n                ),\r\n                sh(16),\r\n                Text(\r\n                  WhatToRideLabel,\r\n                  style: TextStyle(\r\n                    fontSize: b * 12,\r\n                  ),\r\n                ),\r\n                sh(31),\r\n\r\n                /// Single destination\r\n\r\n                InkWell(\r\n                  highlightColor: Colors.transparent,\r\n                  splashColor: Colors.transparent,\r\n                  onTap: () async {\r\n                    appFlowProvider.changeBookingStage(BookingStage.PickUp);\r\n                    appFlowProvider.changeDestinationType(DestinationType.Single);\r\n\r\n                    Navigator.push(\r\n                      context,\r\n                      MaterialPageRoute(\r\n                        builder: (BuildContext context) {\r\n                          return StartBooking();\r\n                        },\r\n                      ),\r\n                    );\r\n                  },\r\n                  child: Container(\r\n                    decoration: BoxDecoration(\r\n                      color: Color(0xfff9f9f9),\r\n                      borderRadius: BorderRadius.circular(b * 4),\r\n                    ),\r\n                    height: h * 122,\r\n                    width: b * 140,\r\n                    child: Column(\r\n                      mainAxisAlignment: MainAxisAlignment.center,\r\n                      children: [\r\n                        Image.asset(\r\n                          'assets/icons/self_drive.png',\r\n                          width: b * 61,\r\n                          height: h * 61,\r\n                        ),\r\n                        sh(12),\r\n                        Text(\r\n                          \"Single Destination\",\r\n                          style: TextStyle(\r\n                            fontSize: b * 12,\r\n                            fontWeight: FontWeight.w500,\r\n                          ),\r\n                        )\r\n                      ],\r\n                    ),\r\n                  ),\r\n                ),\r\n                sh(20),\r\n\r\n                /// Multiple Destination\r\n                InkWell(\r\n                  highlightColor: Colors.transparent,\r\n                  splashColor: Colors.transparent,\r\n                  onTap: () async {\r\n                    TaxiBookingProvider taxiProvider = Provider.of(context, listen: false);\r\n                    bool result = await taxiProvider.getVehicleTypes();\r\n                    if (!result) return;\r\n\r\n                    appFlowProvider.changeMapStatus(true);\r\n                    appFlowProvider.changeDestinationType(DestinationType.Multiple);\r\n                    Navigator.push(\r\n                      context,\r\n                      MaterialPageRoute(\r\n                        builder: (BuildContext context) {\r\n                          return StartBooking();\r\n                        },\r\n                      ),\r\n                    );\r\n                  },\r\n                  child: Container(\r\n                    decoration: BoxDecoration(\r\n                      color: Color(0xfff9f9f9),\r\n                      borderRadius: BorderRadius.circular(b * 4),\r\n                    ),\r\n                    height: h * 122,\r\n                    width: b * 140,\r\n                    child: Column(\r\n                      mainAxisAlignment: MainAxisAlignment.center,\r\n                      children: [\r\n                        Image.asset('assets/icons/taxi.png', width: b * 61, height: h * 61),\r\n                        sh(12),\r\n                        Text(\r\n                          \"Multiple Destinations\",\r\n                          style: TextStyle(fontSize: b * 12, fontWeight: FontWeight.w500),\r\n                        )\r\n                      ],\r\n                    ),\r\n                  ),\r\n                ),\r\n              ],\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/mode_selector.dart b/lib/mode_selector.dart
--- a/lib/mode_selector.dart	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ b/lib/mode_selector.dart	(date 1679551618351)
@@ -18,12 +18,12 @@
 
 class _ModeSelectorScreenState extends State<ModeSelectorScreen> {
   late double h, b;
-  late NotificationsProvider notifyProvider;
+  // late NotificationsProvider notifyProvider;
 
   @override
   void initState() {
-    notifyProvider = Provider.of<NotificationsProvider>(context, listen: false);
-    notifyProvider.isAndroidPermissionGranted();
+    // notifyProvider = Provider.of<NotificationsProvider>(context, listen: false);
+    // notifyProvider.isAndroidPermissionGranted();
     super.initState();
   }
 
Index: android/app/google-services.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"project_info\": {\r\n    \"project_number\": \"409671244772\",\r\n    \"project_id\": \"sultantaxi-b0dc2\",\r\n    \"storage_bucket\": \"sultantaxi-b0dc2.appspot.com\"\r\n  },\r\n  \"client\": [\r\n    {\r\n      \"client_info\": {\r\n        \"mobilesdk_app_id\": \"1:409671244772:android:2df137ec94c464a01d05f1\",\r\n        \"android_client_info\": {\r\n          \"package_name\": \"com.sultan_cab\"\r\n        }\r\n      },\r\n      \"oauth_client\": [\r\n        {\r\n          \"client_id\": \"409671244772-ql9pjsn6ujt1qjsf8oem99k5vdkmhum6.apps.googleusercontent.com\",\r\n          \"client_type\": 1,\r\n          \"android_info\": {\r\n            \"package_name\": \"com.sultan_cab\",\r\n            \"certificate_hash\": \"be7a56241ca8d804400e714bb65443afa3cc57b0\"\r\n          }\r\n        },\r\n        {\r\n          \"client_id\": \"409671244772-jpevd47o3qdk96iqot4tu7h3ieim2m2q.apps.googleusercontent.com\",\r\n          \"client_type\": 3\r\n        }\r\n      ],\r\n      \"api_key\": [\r\n        {\r\n          \"current_key\": \"AIzaSyAjNy_BqEUEcV_wZIU_eqr9Vm0ljMPNtKg\"\r\n        }\r\n      ],\r\n      \"services\": {\r\n        \"appinvite_service\": {\r\n          \"other_platform_oauth_client\": [\r\n            {\r\n              \"client_id\": \"409671244772-d41ok3c53qfg9blcvsarmic5274v1g7j.apps.googleusercontent.com\",\r\n              \"client_type\": 3\r\n            },\r\n            {\r\n              \"client_id\": \"409671244772-22k14g95m1l1nbtneb6agftdn16pnubd.apps.googleusercontent.com\",\r\n              \"client_type\": 2,\r\n              \"ios_info\": {\r\n                \"bundle_id\": \"com.sultan.taxidriver\"\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  \"configuration_version\": \"1\"\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/app/google-services.json b/android/app/google-services.json
--- a/android/app/google-services.json	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ b/android/app/google-services.json	(date 1679551617834)
@@ -1,49 +1,34 @@
 {
   "project_info": {
-    "project_number": "409671244772",
-    "project_id": "sultantaxi-b0dc2",
-    "storage_bucket": "sultantaxi-b0dc2.appspot.com"
+    "project_number": "236880847063",
+    "project_id": "tucking-app-c9418",
+    "storage_bucket": "tucking-app-c9418.appspot.com"
   },
   "client": [
     {
       "client_info": {
-        "mobilesdk_app_id": "1:409671244772:android:2df137ec94c464a01d05f1",
+        "mobilesdk_app_id": "1:236880847063:android:95fe652d2293b1cef15092",
         "android_client_info": {
-          "package_name": "com.sultan_cab"
+          "package_name": "com.futurevision.trucking"
         }
       },
       "oauth_client": [
         {
-          "client_id": "409671244772-ql9pjsn6ujt1qjsf8oem99k5vdkmhum6.apps.googleusercontent.com",
-          "client_type": 1,
-          "android_info": {
-            "package_name": "com.sultan_cab",
-            "certificate_hash": "be7a56241ca8d804400e714bb65443afa3cc57b0"
-          }
-        },
-        {
-          "client_id": "409671244772-jpevd47o3qdk96iqot4tu7h3ieim2m2q.apps.googleusercontent.com",
+          "client_id": "236880847063-14tg7s2ib0o571evtfocnu1rc3rke5lj.apps.googleusercontent.com",
           "client_type": 3
         }
       ],
       "api_key": [
         {
-          "current_key": "AIzaSyAjNy_BqEUEcV_wZIU_eqr9Vm0ljMPNtKg"
+          "current_key": "AIzaSyCrE9nXUcr0QSd18fiv4-juxqXD9Ch6Ad0"
         }
       ],
       "services": {
         "appinvite_service": {
           "other_platform_oauth_client": [
             {
-              "client_id": "409671244772-d41ok3c53qfg9blcvsarmic5274v1g7j.apps.googleusercontent.com",
+              "client_id": "236880847063-14tg7s2ib0o571evtfocnu1rc3rke5lj.apps.googleusercontent.com",
               "client_type": 3
-            },
-            {
-              "client_id": "409671244772-22k14g95m1l1nbtneb6agftdn16pnubd.apps.googleusercontent.com",
-              "client_type": 2,
-              "ios_info": {
-                "bundle_id": "com.sultan.taxidriver"
-              }
             }
           ]
         }
Index: android/app/src/profile/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.sultan_cab\">\r\n    <!-- The INTERNET permission is required for development. Specifically,\r\n         the Flutter tool needs it to communicate with the running application\r\n         to allow setting breakpoints, to provide hot reload, etc.\r\n    -->\r\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\r\n</manifest>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/app/src/profile/AndroidManifest.xml b/android/app/src/profile/AndroidManifest.xml
--- a/android/app/src/profile/AndroidManifest.xml	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ b/android/app/src/profile/AndroidManifest.xml	(date 1679551617843)
@@ -1,5 +1,5 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.sultan_cab">
+    package="com.futurevision.trucking">
     <!-- The INTERNET permission is required for development. Specifically,
          the Flutter tool needs it to communicate with the running application
          to allow setting breakpoints, to provide hot reload, etc.
Index: .flutter-plugins
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># This is a generated file; do not edit or check into version control.\r\nassets_audio_player=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\assets_audio_player-3.0.6\\\\\r\nassets_audio_player_web=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\assets_audio_player_web-3.0.6\\\\\r\nfirebase_auth=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_auth-4.2.9\\\\\r\nfirebase_auth_web=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_auth_web-5.2.8\\\\\r\nfirebase_core=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_core-2.7.0\\\\\r\nfirebase_core_web=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_core_web-2.2.1\\\\\r\nfirebase_messaging=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_messaging-14.2.5\\\\\r\nfirebase_messaging_web=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\firebase_messaging_web-3.2.15\\\\\r\nflutter_local_notifications=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\flutter_local_notifications-13.0.0\\\\\r\nflutter_plugin_android_lifecycle=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\flutter_plugin_android_lifecycle-2.0.9\\\\\r\nfluttertoast=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\fluttertoast-8.2.1\\\\\r\ngeocoding=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geocoding-2.0.5\\\\\r\ngeolocator=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geolocator-9.0.2\\\\\r\ngeolocator_android=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geolocator_android-4.1.7\\\\\r\ngeolocator_apple=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geolocator_apple-2.2.5\\\\\r\ngeolocator_web=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geolocator_web-2.1.6\\\\\r\ngeolocator_windows=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\geolocator_windows-0.1.1\\\\\r\ngoogle_maps_flutter=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\google_maps_flutter-2.2.5\\\\\r\ngoogle_maps_flutter_android=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\google_maps_flutter_android-2.4.8\\\\\r\ngoogle_maps_flutter_ios=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\google_maps_flutter_ios-2.2.0\\\\\r\ngoogle_sign_in=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\google_sign_in-6.0.2\\\\\r\ngoogle_sign_in_android=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\google_sign_in_android-6.1.7\\\\\r\ngoogle_sign_in_ios=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\google_sign_in_ios-5.6.0\\\\\r\ngoogle_sign_in_web=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\google_sign_in_web-0.11.0+1\\\\\r\nimage_cropper=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_cropper-3.0.1\\\\\r\nimage_cropper_for_web=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_cropper_for_web-1.0.3\\\\\r\nimage_picker=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_picker-0.8.6+4\\\\\r\nimage_picker_android=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_picker_android-0.8.5+9\\\\\r\nimage_picker_for_web=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_picker_for_web-2.1.11\\\\\r\nimage_picker_ios=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\image_picker_ios-0.8.7\\\\\r\nlocation=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\location-4.4.0\\\\\r\nlocation_web=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\location_web-3.1.1\\\\\r\npackage_info_plus=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\package_info_plus-1.4.3+1\\\\\r\npackage_info_plus_linux=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\package_info_plus_linux-1.0.5\\\\\r\npackage_info_plus_macos=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\package_info_plus_macos-1.3.0\\\\\r\npackage_info_plus_web=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\package_info_plus_web-1.0.6\\\\\r\npackage_info_plus_windows=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\package_info_plus_windows-2.1.0\\\\\r\npath_provider=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider-2.0.13\\\\\r\npath_provider_android=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_android-2.0.23\\\\\r\npath_provider_foundation=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_foundation-2.1.2\\\\\r\npath_provider_linux=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_linux-2.1.9\\\\\r\npath_provider_windows=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\path_provider_windows-2.1.4\\\\\r\npermission_handler=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\permission_handler-10.2.0\\\\\r\npermission_handler_android=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\permission_handler_android-10.2.0\\\\\r\npermission_handler_apple=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\permission_handler_apple-9.0.7\\\\\r\npermission_handler_windows=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\permission_handler_windows-0.1.2\\\\\r\nrazorpay_flutter=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\razorpay_flutter-1.3.4\\\\\r\nshared_preferences=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences-2.0.18\\\\\r\nshared_preferences_android=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_android-2.0.16\\\\\r\nshared_preferences_foundation=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_foundation-2.1.4\\\\\r\nshared_preferences_linux=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_linux-2.1.4\\\\\r\nshared_preferences_web=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_web-2.0.5\\\\\r\nshared_preferences_windows=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\shared_preferences_windows-2.1.4\\\\\r\nsmart_auth=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\smart_auth-1.0.8\\\\\r\nsms_autofill=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\sms_autofill-2.3.0\\\\\r\nsqflite=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\sqflite-2.2.5\\\\\r\nurl_launcher=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher-6.1.10\\\\\r\nurl_launcher_android=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_android-6.0.24\\\\\r\nurl_launcher_ios=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_ios-6.1.1\\\\\r\nurl_launcher_linux=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_linux-3.0.3\\\\\r\nurl_launcher_macos=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_macos-3.0.3\\\\\r\nurl_launcher_web=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_web-2.0.15\\\\\r\nurl_launcher_windows=C:\\\\Users\\\\Programmer Force\\\\AppData\\\\Local\\\\Pub\\\\Cache\\\\hosted\\\\pub.dev\\\\url_launcher_windows-3.0.4\\\\\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.flutter-plugins b/.flutter-plugins
--- a/.flutter-plugins	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ b/.flutter-plugins	(date 1679551723959)
@@ -3,10 +3,10 @@
 assets_audio_player_web=C:\\Users\\Programmer Force\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\assets_audio_player_web-3.0.6\\
 firebase_auth=C:\\Users\\Programmer Force\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\firebase_auth-4.2.9\\
 firebase_auth_web=C:\\Users\\Programmer Force\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\firebase_auth_web-5.2.8\\
-firebase_core=C:\\Users\\Programmer Force\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\firebase_core-2.7.0\\
-firebase_core_web=C:\\Users\\Programmer Force\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\firebase_core_web-2.2.1\\
-firebase_messaging=C:\\Users\\Programmer Force\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\firebase_messaging-14.2.5\\
-firebase_messaging_web=C:\\Users\\Programmer Force\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\firebase_messaging_web-3.2.15\\
+firebase_core=C:\\Users\\Programmer Force\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\firebase_core-2.8.0\\
+firebase_core_web=C:\\Users\\Programmer Force\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\firebase_core_web-2.2.2\\
+firebase_messaging=C:\\Users\\Programmer Force\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\firebase_messaging-14.3.0\\
+firebase_messaging_web=C:\\Users\\Programmer Force\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\firebase_messaging_web-3.2.17\\
 flutter_local_notifications=C:\\Users\\Programmer Force\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\flutter_local_notifications-13.0.0\\
 flutter_plugin_android_lifecycle=C:\\Users\\Programmer Force\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\flutter_plugin_android_lifecycle-2.0.9\\
 fluttertoast=C:\\Users\\Programmer Force\\AppData\\Local\\Pub\\Cache\\hosted\\pub.dev\\fluttertoast-8.2.1\\
Index: lib/providers/NotificationProvider/notification_provider.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:async';\r\nimport 'dart:io';\r\nimport 'package:flutter/cupertino.dart';\r\nimport 'package:flutter/foundation.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter_local_notifications/flutter_local_notifications.dart';\r\nimport 'package:provider/provider.dart';\r\nimport 'package:get/get.dart';\r\n\r\nNotificationsProvider notifyProv = Provider.of(Get.context!, listen: false);\r\n\r\nclass NotificationsProvider extends ChangeNotifier {\r\n  int id = 0;\r\n\r\n  bool notificationsEnabled = false;\r\n  String darwinNotificationCategoryText = 'textCategory';\r\n  String darwinNotificationCategoryPlain = 'plainCategory';\r\n  String navigationActionId = 'id_3';\r\n  final StreamController<String?> selectNotificationStream = StreamController<String?>.broadcast();\r\n  @pragma('vm:entry-point')\r\n  void notificationTapBackground(NotificationResponse notificationResponse) {\r\n    print('notification(${notificationResponse.id}) action tapped: '\r\n        '${notificationResponse.actionId} with'\r\n        ' payload: ${notificationResponse.payload}');\r\n    if (notificationResponse.input?.isNotEmpty ?? false) {\r\n      print('notification action tapped with input: ${notificationResponse.input}');\r\n    }\r\n  }\r\n\r\n  final FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =\r\n      FlutterLocalNotificationsPlugin();\r\n\r\n  Future<void> InitializationNotifications() async {\r\n    const AndroidInitializationSettings initializationSettingsAndroid =\r\n        AndroidInitializationSettings('@mipmap/ic_launcher');\r\n\r\n    final InitializationSettings initializationSettings = InitializationSettings(\r\n      android: initializationSettingsAndroid,\r\n      // iOS: initializationSettingsDarwin,\r\n    );\r\n\r\n    await flutterLocalNotificationsPlugin.initialize(\r\n      initializationSettings,\r\n      onDidReceiveNotificationResponse: (NotificationResponse notificationResponse) {\r\n        switch (notificationResponse.notificationResponseType) {\r\n          case NotificationResponseType.selectedNotification:\r\n            selectNotificationStream.add(notificationResponse.payload);\r\n            break;\r\n          case NotificationResponseType.selectedNotificationAction:\r\n            if (notificationResponse.actionId == navigationActionId) {\r\n              selectNotificationStream.add(notificationResponse.payload);\r\n            }\r\n            break;\r\n        }\r\n      },\r\n      // onDidReceiveBackgroundNotificationResponse: null,\r\n    );\r\n  }\r\n\r\n  Future<void> isAndroidPermissionGranted() async {\r\n    if (Platform.isAndroid) {\r\n      final bool granted = await flutterLocalNotificationsPlugin\r\n              .resolvePlatformSpecificImplementation<AndroidFlutterLocalNotificationsPlugin>()\r\n              ?.areNotificationsEnabled() ??\r\n          false;\r\n\r\n      notificationsEnabled = granted;\r\n      notifyListeners();\r\n    }\r\n  }\r\n\r\n  Future<void> requestPermissions() async {\r\n    if (Platform.isIOS || Platform.isMacOS) {\r\n      await flutterLocalNotificationsPlugin\r\n          .resolvePlatformSpecificImplementation<IOSFlutterLocalNotificationsPlugin>()\r\n          ?.requestPermissions(\r\n            alert: true,\r\n            badge: true,\r\n            sound: true,\r\n            critical: true,\r\n          );\r\n      await flutterLocalNotificationsPlugin\r\n          .resolvePlatformSpecificImplementation<MacOSFlutterLocalNotificationsPlugin>()\r\n          ?.requestPermissions(\r\n            alert: true,\r\n            badge: true,\r\n            sound: true,\r\n            critical: true,\r\n          );\r\n    } else if (Platform.isAndroid) {\r\n      final AndroidFlutterLocalNotificationsPlugin? androidImplementation =\r\n          flutterLocalNotificationsPlugin\r\n              .resolvePlatformSpecificImplementation<AndroidFlutterLocalNotificationsPlugin>();\r\n\r\n      final bool? granted = await androidImplementation?.requestPermission();\r\n\r\n      notificationsEnabled = granted ?? false;\r\n      notifyListeners();\r\n    }\r\n  }\r\n\r\n  Future<void> showNotification({required String title, required String body}) async {\r\n    const AndroidNotificationDetails androidNotificationDetails = AndroidNotificationDetails(\r\n        '10', 'your channel name',\r\n        channelDescription: 'your channel description',\r\n        importance: Importance.max,\r\n        priority: Priority.high,\r\n        ticker: 'ticker');\r\n    const NotificationDetails notificationDetails =\r\n        NotificationDetails(android: androidNotificationDetails);\r\n    await flutterLocalNotificationsPlugin.show(\r\n      id++,\r\n      title,\r\n      body,\r\n      notificationDetails,\r\n      payload: 'item x',\r\n    );\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/providers/NotificationProvider/notification_provider.dart b/lib/providers/NotificationProvider/notification_provider.dart
--- a/lib/providers/NotificationProvider/notification_provider.dart	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ b/lib/providers/NotificationProvider/notification_provider.dart	(date 1679551618368)
@@ -1,119 +1,119 @@
-import 'dart:async';
-import 'dart:io';
-import 'package:flutter/cupertino.dart';
-import 'package:flutter/foundation.dart';
-import 'package:flutter/material.dart';
-import 'package:flutter_local_notifications/flutter_local_notifications.dart';
-import 'package:provider/provider.dart';
-import 'package:get/get.dart';
-
-NotificationsProvider notifyProv = Provider.of(Get.context!, listen: false);
-
-class NotificationsProvider extends ChangeNotifier {
-  int id = 0;
-
-  bool notificationsEnabled = false;
-  String darwinNotificationCategoryText = 'textCategory';
-  String darwinNotificationCategoryPlain = 'plainCategory';
-  String navigationActionId = 'id_3';
-  final StreamController<String?> selectNotificationStream = StreamController<String?>.broadcast();
-  @pragma('vm:entry-point')
-  void notificationTapBackground(NotificationResponse notificationResponse) {
-    print('notification(${notificationResponse.id}) action tapped: '
-        '${notificationResponse.actionId} with'
-        ' payload: ${notificationResponse.payload}');
-    if (notificationResponse.input?.isNotEmpty ?? false) {
-      print('notification action tapped with input: ${notificationResponse.input}');
-    }
-  }
-
-  final FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =
-      FlutterLocalNotificationsPlugin();
-
-  Future<void> InitializationNotifications() async {
-    const AndroidInitializationSettings initializationSettingsAndroid =
-        AndroidInitializationSettings('@mipmap/ic_launcher');
-
-    final InitializationSettings initializationSettings = InitializationSettings(
-      android: initializationSettingsAndroid,
-      // iOS: initializationSettingsDarwin,
-    );
-
-    await flutterLocalNotificationsPlugin.initialize(
-      initializationSettings,
-      onDidReceiveNotificationResponse: (NotificationResponse notificationResponse) {
-        switch (notificationResponse.notificationResponseType) {
-          case NotificationResponseType.selectedNotification:
-            selectNotificationStream.add(notificationResponse.payload);
-            break;
-          case NotificationResponseType.selectedNotificationAction:
-            if (notificationResponse.actionId == navigationActionId) {
-              selectNotificationStream.add(notificationResponse.payload);
-            }
-            break;
-        }
-      },
-      // onDidReceiveBackgroundNotificationResponse: null,
-    );
-  }
-
-  Future<void> isAndroidPermissionGranted() async {
-    if (Platform.isAndroid) {
-      final bool granted = await flutterLocalNotificationsPlugin
-              .resolvePlatformSpecificImplementation<AndroidFlutterLocalNotificationsPlugin>()
-              ?.areNotificationsEnabled() ??
-          false;
-
-      notificationsEnabled = granted;
-      notifyListeners();
-    }
-  }
-
-  Future<void> requestPermissions() async {
-    if (Platform.isIOS || Platform.isMacOS) {
-      await flutterLocalNotificationsPlugin
-          .resolvePlatformSpecificImplementation<IOSFlutterLocalNotificationsPlugin>()
-          ?.requestPermissions(
-            alert: true,
-            badge: true,
-            sound: true,
-            critical: true,
-          );
-      await flutterLocalNotificationsPlugin
-          .resolvePlatformSpecificImplementation<MacOSFlutterLocalNotificationsPlugin>()
-          ?.requestPermissions(
-            alert: true,
-            badge: true,
-            sound: true,
-            critical: true,
-          );
-    } else if (Platform.isAndroid) {
-      final AndroidFlutterLocalNotificationsPlugin? androidImplementation =
-          flutterLocalNotificationsPlugin
-              .resolvePlatformSpecificImplementation<AndroidFlutterLocalNotificationsPlugin>();
-
-      final bool? granted = await androidImplementation?.requestPermission();
-
-      notificationsEnabled = granted ?? false;
-      notifyListeners();
-    }
-  }
-
-  Future<void> showNotification({required String title, required String body}) async {
-    const AndroidNotificationDetails androidNotificationDetails = AndroidNotificationDetails(
-        '10', 'your channel name',
-        channelDescription: 'your channel description',
-        importance: Importance.max,
-        priority: Priority.high,
-        ticker: 'ticker');
-    const NotificationDetails notificationDetails =
-        NotificationDetails(android: androidNotificationDetails);
-    await flutterLocalNotificationsPlugin.show(
-      id++,
-      title,
-      body,
-      notificationDetails,
-      payload: 'item x',
-    );
-  }
-}
+// import 'dart:async';
+// import 'dart:io';
+// import 'package:flutter/cupertino.dart';
+// import 'package:flutter/foundation.dart';
+// import 'package:flutter/material.dart';
+// import 'package:flutter_local_notifications/flutter_local_notifications.dart';
+// import 'package:provider/provider.dart';
+// import 'package:get/get.dart';
+//
+// NotificationsProvider notifyProv = Provider.of(Get.context!, listen: false);
+//
+// class NotificationsProvider extends ChangeNotifier {
+//   int id = 0;
+//
+//   bool notificationsEnabled = false;
+//   String darwinNotificationCategoryText = 'textCategory';
+//   String darwinNotificationCategoryPlain = 'plainCategory';
+//   String navigationActionId = 'id_3';
+//   final StreamController<String?> selectNotificationStream = StreamController<String?>.broadcast();
+//   @pragma('vm:entry-point')
+//   void notificationTapBackground(NotificationResponse notificationResponse) {
+//     print('notification(${notificationResponse.id}) action tapped: '
+//         '${notificationResponse.actionId} with'
+//         ' payload: ${notificationResponse.payload}');
+//     if (notificationResponse.input?.isNotEmpty ?? false) {
+//       print('notification action tapped with input: ${notificationResponse.input}');
+//     }
+//   }
+//
+//   final FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =
+//       FlutterLocalNotificationsPlugin();
+//
+//   Future<void> InitializationNotifications() async {
+//     const AndroidInitializationSettings initializationSettingsAndroid =
+//         AndroidInitializationSettings('@mipmap/ic_launcher');
+//
+//     final InitializationSettings initializationSettings = InitializationSettings(
+//       android: initializationSettingsAndroid,
+//       // iOS: initializationSettingsDarwin,
+//     );
+//
+//     await flutterLocalNotificationsPlugin.initialize(
+//       initializationSettings,
+//       onDidReceiveNotificationResponse: (NotificationResponse notificationResponse) {
+//         switch (notificationResponse.notificationResponseType) {
+//           case NotificationResponseType.selectedNotification:
+//             selectNotificationStream.add(notificationResponse.payload);
+//             break;
+//           case NotificationResponseType.selectedNotificationAction:
+//             if (notificationResponse.actionId == navigationActionId) {
+//               selectNotificationStream.add(notificationResponse.payload);
+//             }
+//             break;
+//         }
+//       },
+//       // onDidReceiveBackgroundNotificationResponse: null,
+//     );
+//   }
+//
+//   Future<void> isAndroidPermissionGranted() async {
+//     if (Platform.isAndroid) {
+//       final bool granted = await flutterLocalNotificationsPlugin
+//               .resolvePlatformSpecificImplementation<AndroidFlutterLocalNotificationsPlugin>()
+//               ?.areNotificationsEnabled() ??
+//           false;
+//
+//       notificationsEnabled = granted;
+//       notifyListeners();
+//     }
+//   }
+//
+//   Future<void> requestPermissions() async {
+//     if (Platform.isIOS || Platform.isMacOS) {
+//       await flutterLocalNotificationsPlugin
+//           .resolvePlatformSpecificImplementation<IOSFlutterLocalNotificationsPlugin>()
+//           ?.requestPermissions(
+//             alert: true,
+//             badge: true,
+//             sound: true,
+//             critical: true,
+//           );
+//       await flutterLocalNotificationsPlugin
+//           .resolvePlatformSpecificImplementation<MacOSFlutterLocalNotificationsPlugin>()
+//           ?.requestPermissions(
+//             alert: true,
+//             badge: true,
+//             sound: true,
+//             critical: true,
+//           );
+//     } else if (Platform.isAndroid) {
+//       final AndroidFlutterLocalNotificationsPlugin? androidImplementation =
+//           flutterLocalNotificationsPlugin
+//               .resolvePlatformSpecificImplementation<AndroidFlutterLocalNotificationsPlugin>();
+//
+//       final bool? granted = await androidImplementation?.requestPermission();
+//
+//       notificationsEnabled = granted ?? false;
+//       notifyListeners();
+//     }
+//   }
+//
+//   Future<void> showNotification({required String title, required String body}) async {
+//     const AndroidNotificationDetails androidNotificationDetails = AndroidNotificationDetails(
+//         '10', 'your channel name',
+//         channelDescription: 'your channel description',
+//         importance: Importance.max,
+//         priority: Priority.high,
+//         ticker: 'ticker');
+//     const NotificationDetails notificationDetails =
+//         NotificationDetails(android: androidNotificationDetails);
+//     await flutterLocalNotificationsPlugin.show(
+//       id++,
+//       title,
+//       body,
+//       notificationDetails,
+//       payload: 'item x',
+//     );
+//   }
+// }
Index: lib/providers/TaxiBookingProvider/taxi_booking_provider.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:async';\r\nimport 'package:get/get.dart';\r\nimport 'package:assets_audio_player/assets_audio_player.dart';\r\nimport 'package:flutter/cupertino.dart';\r\nimport 'package:provider/provider.dart';\r\nimport 'package:sultan_cab/models/CancelReasons/get_cancel_reason.dart';\r\nimport 'package:sultan_cab/models/RideCancel/ride_cancel%20_model.dart';\r\nimport 'package:sultan_cab/models/fair_by_car_id/fair_by_car_id.dart';\r\nimport 'package:sultan_cab/models/get_location_change_model/get_location_change_model.dart';\r\nimport 'package:sultan_cab/models/get_reviews/get_reviews.dart';\r\nimport 'package:sultan_cab/models/get_vehicle_type_model/get_vehicle_type.dart';\r\nimport 'package:sultan_cab/models/taxiBookingModels/bid_accept_model.dart';\r\nimport 'package:sultan_cab/models/taxiBookingModels/bidding_model.dart';\r\nimport 'package:sultan_cab/models/taxiBookingModels/book_ride_response_model.dart';\r\nimport 'package:sultan_cab/models/taxiBookingModels/driver_arrival_model.dart';\r\nimport 'package:sultan_cab/models/taxiBookingModels/ride_end_model.dart';\r\nimport 'package:sultan_cab/models/taxiBookingModels/start_ride_model.dart';\r\nimport 'package:sultan_cab/providers/GoogleMapProvider/location_and_map_provider.dart';\r\nimport 'package:sultan_cab/providers/NotificationProvider/notification_provider.dart';\r\nimport 'package:sultan_cab/providers/Reoccurring/reoccurring.dart';\r\nimport 'package:sultan_cab/providers/taxi/app_flow_provider.dart';\r\nimport 'package:sultan_cab/screens/TaxiBooking/start_booking.dart';\r\nimport 'package:sultan_cab/services/ApiServices/api_services.dart';\r\nimport 'package:sultan_cab/services/ApiServices/api_urls.dart';\r\nimport 'package:sultan_cab/services/sockets/sockets.dart';\r\nimport 'package:sultan_cab/utils/commons.dart';\r\nimport 'package:sultan_cab/utils/const.dart';\r\nimport 'package:url_launcher/url_launcher.dart';\r\n\r\nenum RideStage {\r\n  Normal,\r\n  Bidding,\r\n  BidAccept,\r\n  DriverToRider,\r\n  Arrived,\r\n  Started,\r\n  RideStarted,\r\n  FinishRide,\r\n}\r\n\r\n\r\nReoccurringProvider recProv =\r\n    Provider.of<ReoccurringProvider>(Get.context!, listen: false);\r\nTaxiBookingProvider taxiBookingProvider =\r\n    Provider.of<TaxiBookingProvider>(Get.context!, listen: false);\r\n\r\nclass TaxiBookingProvider extends ChangeNotifier {\r\n  TextEditingController offerPriceCtrl = TextEditingController();\r\n  GetVehicleTypesModel? getVehicleTypesModel;\r\n  BookARideResponseModel? bookARideResponseModel;\r\n  DriverArrivalModel? driverArrivalModel;\r\n  FairByCarId? fairByCarId;\r\n  BiddingModel? biddingModel;\r\n  StartRideModel? startRideModel;\r\n  BidAcceptModel? bidAcceptModel;\r\n  OnLocationChange? onDriverLocationChange;\r\n  GetCancelReasonModel? getCancelReasonModel;\r\n  RideEndModel? rideEndModel;\r\n  List<BiddingModel> biddingList = <BiddingModel>[];\r\n  String carID = \"\";\r\n  Map<String, String> multipleRideFields = {};\r\n\r\n  RideStage stage = RideStage.Bidding;\r\n\r\n  void changeRideStage(RideStage currentStage) {\r\n    stage = currentStage;\r\n    notifyListeners();\r\n  }\r\n\r\n  Future<bool> getVehicleTypes() async {\r\n    AppConst.startProgress();\r\n    String response =\r\n        await ApiServices.getMethodWithBody(ApiUrls.GET_VEHICLE_TYPES, null);\r\n    AppConst.stopProgress();\r\n\r\n    if (response.isEmpty) {\r\n      AppConst.errorSnackBar(\"Unable to get vehicles types\");\r\n      return false;\r\n    }\r\n    getVehicleTypesModel = getVehicleTypesModelFromJson(response);\r\n\r\n    notifyListeners();\r\n    return true;\r\n  }\r\n\r\n  Future<void> getFairByID({\r\n    required String carId,\r\n    required String distance,\r\n    required String estimatedTime,\r\n  }) async {\r\n    AppConst.startProgress();\r\n    Map<String, String> fields = {\r\n      \"vehicleTypeId\": carId,\r\n      \"distance\": distance,\r\n      \"estimatedTime\": estimatedTime,\r\n    };\r\n\r\n    String response =\r\n        await ApiServices.getMethodWithBody(ApiUrls.GET_FAIR_BY_ID, fields);\r\n    await AppConst.stopProgress();\r\n    if (response.isEmpty) {\r\n      AppConst.errorSnackBar(\"Unable to get fair\");\r\n      return;\r\n    }\r\n    fairByCarId = fairByCarIdFromJson(response);\r\n\r\n    offerPriceCtrl.text = fairByCarId!.data!.estimatedPrice.round().toString();\r\n\r\n    notifyListeners();\r\n  }\r\n\r\n  Future<bool> bookARide(AppFlowProvider appFlowProvider) async {\r\n    Map<String, String> fields = {\r\n      \"vehicleTypeId\": \"${carID}\",\r\n    };\r\n\r\n    fields[\"estimatedTime\"] =\r\n        (appFlowProvider.directions!.durationSeconds! / 60).round().toString();\r\n    fields[\"distanceKM\"] = ((appFlowProvider.directions!.distanceKM!) / 1000)\r\n        .toString()\r\n        .replaceAll(\" km\", \"\");\r\n    fields[\"FairId\"] = fairByCarId!.data!.fair.id.toString();\r\n    fields[\"fairValue\"] = offerPriceCtrl.text;\r\n\r\n    if (appFlowProvider.destinationType == DestinationType.Single) {\r\n      fields[\"startLat\"] = appFlowProvider.currentLoc!.latitude.toString();\r\n      fields[\"startLng\"] = appFlowProvider.currentLoc!.longitude.toString();\r\n      fields[\"endLat\"] = appFlowProvider.destLoc!.latitude.toString();\r\n      fields[\"endLng\"] = appFlowProvider.destLoc!.longitude.toString();\r\n      fields[\"startAddress\"] = appFlowProvider.currentAdd ?? \"\";\r\n      fields[\"endAddress\"] = appFlowProvider.destAdd ?? \"\";\r\n\r\n      if (appFlowProvider.rideType == RideType.Reoccurring) {\r\n        fields.addAll({\r\n          \"isRecurring\": \"true\",\r\n          \"isScheduled\": \"true\",\r\n          \"scheduledTime\": \"${recProv.reoccurringSchedule?.time}\",\r\n          \"isRecurringActive\": \"true\",\r\n          \"recurringCount\": \"0\",\r\n        });\r\n\r\n        for (int i = 0; i < recProv.reoccurringSchedule!.days.length; i++) {\r\n          fields.addAll(\r\n              {\"selectedDay[${i}]\": \"${recProv.reoccurringSchedule!.days[i]}\"});\r\n        }\r\n      }\r\n    }\r\n\r\n    if (appFlowProvider.destinationType == DestinationType.Multiple) {\r\n      fields.addAll(taxiBookingProvider.multipleRideFields);\r\n    }\r\n\r\n    logger.i(fields);\r\n\r\n    String response = await ApiServices.postMethod(\r\n        feedUrl: ApiUrls.BOOK_A_RIDE, fields: fields);\r\n    if (response.isEmpty) {\r\n      await AppConst.errorSnackBar(\"Unable to book a Ride\");\r\n      return false;\r\n    }\r\n    bookARideResponseModel = bookARideResponseModelFromJson(response);\r\n\r\n    notifyListeners();\r\n    return true;\r\n  }\r\n\r\n  void receiveBiddingData(data) async {\r\n    biddingModel = BiddingModel.fromJson(data);\r\n    if (biddingModel != null) {\r\n      biddingList.add(biddingModel!);\r\n      runTimer(biddingList.length - 1);\r\n\r\n      await playBiddingSound(\"assets/sounds/booking_success.mp3\");\r\n    }\r\n    notifyListeners();\r\n  }\r\n\r\n  Future<bool> removeBiddingFrontEnd(int index,\r\n      {bool isApiCall = false}) async {\r\n    if (isApiCall) bool result = await declineBidFromServer(index);\r\n\r\n    biddingList.removeAt(index);\r\n    notifyListeners();\r\n\r\n    return true;\r\n  }\r\n\r\n  Future<bool> acceptBid(int index) async {\r\n    Map<String, String> fields = {\r\n      'driverId': biddingList[index].bidCreated?.user?.id?.toString() ?? \"\",\r\n      'requestId': biddingList[index].bidCreated?.requestId?.toString() ?? \"\",\r\n      'bidId': biddingList[index].bidCreated?.id?.toString() ?? \"\",\r\n    };\r\n\r\n    String response = await ApiServices.postMethod(\r\n        feedUrl: ApiUrls.ACCEPT_BID, fields: fields);\r\n\r\n    if (response.isEmpty) {\r\n      await AppConst.errorSnackBar(\"Unable to accept bid\");\r\n\r\n      return false;\r\n    }\r\n    logger.i(response);\r\n    bidAcceptModel = bidAcceptModelFromJson(response);\r\n    AppSockets.trackDriver(rideId: \"${bidAcceptModel?.data?.requestData?.id}\");\r\n    changeRideStage(RideStage.DriverToRider);\r\n    return true;\r\n  }\r\n\r\n  Future<bool> declineBidFromServer(int index) async {\r\n    Map<String, String> fields = {\r\n      'bidId': biddingList[index].bidCreated?.id?.toString() ?? \"\",\r\n    };\r\n\r\n    String response = await ApiServices.postMethod(\r\n        feedUrl: ApiUrls.DECLINE_BID, fields: fields);\r\n    if (response.isEmpty) {\r\n      await AppConst.errorSnackBar(\"Unable to decline bid\");\r\n\r\n      return false;\r\n    }\r\n    await AppConst.successSnackBar(\"Bid declined\");\r\n    return true;\r\n  }\r\n\r\n  Future<bool> getCancelReasons() async {\r\n    String response =\r\n        await ApiServices.postMethod(feedUrl: ApiUrls.CANCEL_REASONS);\r\n    if (response.isEmpty) {\r\n      await AppConst.errorSnackBar(\"Unable to get reasons\");\r\n      return false;\r\n    }\r\n    logger.i(response);\r\n    getCancelReasonModel = getCancelReasonModelFromJson(response);\r\n    notifyListeners();\r\n    return true;\r\n  }\r\n\r\n  Future<bool> cancelRide(int cancelReasonId) async {\r\n    logger.i(bookARideResponseModel!.data!.request!.id.toString());\r\n    Map<String, String> fields = {\r\n      \"requestId\": \"${bookARideResponseModel!.data!.request!.id.toString()}\",\r\n      \"cancelReasonId\": \"${cancelReasonId}\",\r\n    };\r\n\r\n    String response = await ApiServices.postMethod(\r\n        feedUrl: ApiUrls.CANCEL_RIDE, fields: fields);\r\n    if (response.isEmpty) {\r\n      await AppConst.errorSnackBar(\"Unable to cancel ride\");\r\n\r\n      return false;\r\n    }\r\n    await AppConst.infoSnackBar(\"Ride Canceled\");\r\n\r\n    return true;\r\n  }\r\n\r\n  RideCancelModel? rIdeCancelModel;\r\n\r\n  void onRideCancel(data) {\r\n    rIdeCancelModel = RideCancelModel.fromJson(data);\r\n    AppConst.successSnackBar(\"${\"Ride Canceled by Driver\"}\");\r\n    appFlowProvider.changeBookingStage(BookingStage.Destination);\r\n    Get.offAll(StartBooking());\r\n\r\n    notifyListeners();\r\n  }\r\n\r\n  Future<void> playBiddingSound(String assetPath) async {\r\n    await AssetsAudioPlayer.newPlayer().open(Audio(assetPath));\r\n  }\r\n\r\n  void getStartRideData(data) async {\r\n    startRideModel = StartRideModel.fromJson(data);\r\n    if (startRideModel != null) {\r\n      AppConst.successSnackBar(\r\n          startRideModel?.request?.status?.replaceAll(\"_\", \" \") ??\r\n              \"Ride Started\");\r\n      appFlowProvider.changeBookingStage(BookingStage.RideStarted);\r\n      notifyListeners();\r\n    }\r\n  }\r\n\r\n  late Timer timer;\r\n\r\n  void runTimer(int index) {\r\n    timer = Timer.periodic(\r\n      Duration(seconds: 1),\r\n      (Timer timer) {\r\n\r\n        if (biddingList.isEmpty) {\r\n          appFlowProvider.changeBookingStage(BookingStage.PickUp);\r\n          timer.cancel();\r\n          return;\r\n        }\r\n\r\n        if (biddingList.isNotEmpty && biddingList[index].time > 0) {\r\n          biddingList[index].time = biddingList[index].time - 1;\r\n        } else {\r\n          timer.cancel();\r\n          removeBiddingFrontEnd(index);\r\n        }\r\n        notifyListeners();\r\n      },\r\n    );\r\n  }\r\n\r\n  Future<void> makePhoneCall(String phoneNumber) async {\r\n    final Uri launchUri = Uri(\r\n      scheme: 'tel',\r\n      path: phoneNumber,\r\n    );\r\n    await launchUrl(launchUri);\r\n  }\r\n\r\n  void showDriverOnMap(data) {\r\n    onDriverLocationChange = OnLocationChange.fromJson(data);\r\n    locProv.setDriverMarker();\r\n    if (locProv.currentPosition != null && !isRiderNotify)\r\n      notifyNearToArrival();\r\n    notifyListeners();\r\n  }\r\n\r\n  void onDriverArrival(data) async {\r\n    driverArrivalModel = DriverArrivalModel.fromJson(data);\r\n    if (driverArrivalModel != null) {}\r\n    changeRideStage(RideStage.Arrived);\r\n\r\n    await notifyProv.showNotification(\r\n        title: \"Truck King\", body: \"Driver Arrived at your pickup location\");\r\n    notifyListeners();\r\n  }\r\n\r\n  void onRideEnd(data) async {\r\n    rideEndModel = RideEndModel.fromJson(data);\r\n    bool result = await taxiBookingProvider.getReviews();\r\n    if (result) changeRideStage(RideStage.FinishRide);\r\n    notifyListeners();\r\n  }\r\n\r\n  bool isRiderNotify = false;\r\n\r\n  void notifyNearToArrival() async {\r\n    await notifyProv.InitializationNotifications();\r\n    double distance = locProv.calculateRadius(\r\n        lat: double.parse(onDriverLocationChange!.lat),\r\n        lon: double.parse(onDriverLocationChange!.lng));\r\n    if (distance < 100) {\r\n      notifyProv.showNotification(\r\n          title: \"Truck King\", body: \" Driver is near to your pickup location\");\r\n    }\r\n\r\n    isRiderNotify = true;\r\n  }\r\n\r\n  GetReviewsModel? getReviewsModel;\r\n  List<String> reviewsList = [];\r\n  String review = \"\";\r\n  double rating = 0.0;\r\n  int? reviewId;\r\n\r\n  void setReview(String review, int reviewId) {\r\n    this.review = review;\r\n    this.reviewId = reviewId;\r\n    logger.i(this.review + this.reviewId.toString());\r\n    notifyListeners();\r\n  }\r\n\r\n  void setRating(double rating) {\r\n    this.rating = rating;\r\n    logger.i(this.rating);\r\n    notifyListeners();\r\n  }\r\n\r\n  Future<bool> getReviews() async {\r\n    reviewsList = [];\r\n    String response = await ApiServices.getMethod(feedUrl: ApiUrls.GET_REVIEWS);\r\n\r\n    if (response.isEmpty) return false;\r\n\r\n    getReviewsModel = getReviewsModelFromJson(response);\r\n\r\n    getReviewsModel!.data!.forEach((element) {\r\n      reviewsList.add(element.review ?? \"\");\r\n    });\r\n    notifyListeners();\r\n    return true;\r\n  }\r\n\r\n  Future<bool> addRatingAndReviews({\r\n    required String driverID,\r\n    required String requestId,\r\n  }) async {\r\n    Map<String, String> fields = {\r\n      'rating': this.rating.toString(),\r\n      'feedBack': this.review,\r\n      'nextUserId': driverID,\r\n      'requestId': requestId,\r\n      'reviewId': this.reviewId.toString()\r\n    };\r\n\r\n    String response = await ApiServices.postMethod(\r\n        feedUrl: ApiUrls.ADD_REVIEWS, fields: fields);\r\n    if (response.isEmpty) return false;\r\n\r\n    logger.i(response);\r\n    AppConst.successSnackBar(\"Review Added\");\r\n    return true;\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/providers/TaxiBookingProvider/taxi_booking_provider.dart b/lib/providers/TaxiBookingProvider/taxi_booking_provider.dart
--- a/lib/providers/TaxiBookingProvider/taxi_booking_provider.dart	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ b/lib/providers/TaxiBookingProvider/taxi_booking_provider.dart	(date 1679551618616)
@@ -317,7 +317,7 @@
     onDriverLocationChange = OnLocationChange.fromJson(data);
     locProv.setDriverMarker();
     if (locProv.currentPosition != null && !isRiderNotify)
-      notifyNearToArrival();
+      // notifyNearToArrival();
     notifyListeners();
   }
 
@@ -326,8 +326,8 @@
     if (driverArrivalModel != null) {}
     changeRideStage(RideStage.Arrived);
 
-    await notifyProv.showNotification(
-        title: "Truck King", body: "Driver Arrived at your pickup location");
+    // await notifyProv.showNotification(
+    //     title: "Truck King", body: "Driver Arrived at your pickup location");
     notifyListeners();
   }
 
@@ -340,18 +340,18 @@
 
   bool isRiderNotify = false;
 
-  void notifyNearToArrival() async {
-    await notifyProv.InitializationNotifications();
-    double distance = locProv.calculateRadius(
-        lat: double.parse(onDriverLocationChange!.lat),
-        lon: double.parse(onDriverLocationChange!.lng));
-    if (distance < 100) {
-      notifyProv.showNotification(
-          title: "Truck King", body: " Driver is near to your pickup location");
-    }
-
-    isRiderNotify = true;
-  }
+  // void notifyNearToArrival() async {
+  //   await notifyProv.InitializationNotifications();
+  //   double distance = locProv.calculateRadius(
+  //       lat: double.parse(onDriverLocationChange!.lat),
+  //       lon: double.parse(onDriverLocationChange!.lng));
+  //   if (distance < 100) {
+  //     notifyProv.showNotification(
+  //         title: "Truck King", body: " Driver is near to your pickup location");
+  //   }
+  //
+  //   isRiderNotify = true;
+  // }
 
   GetReviewsModel? getReviewsModel;
   List<String> reviewsList = [];
Index: lib/services/apiServices/api_services.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:convert';\r\nimport 'dart:io';\r\nimport 'package:http/http.dart' as http;\r\nimport 'package:sultan_cab/services/ApiServices/StorageServices/get_storage.dart';\r\nimport 'package:sultan_cab/services/ApiServices/api_urls.dart';\r\nimport 'package:sultan_cab/utils/commons.dart';\r\nimport 'package:sultan_cab/utils/const.dart';\r\n\r\nclass ApiServices {\r\n  static final headers = {\r\n    'Authorization': 'Bearer ${StorageCRUD.getUser().userTokens ?? ''}'\r\n  };\r\n  static final header = {'content-type': 'application/json'};\r\n\r\n  static Future<String> postMethod(\r\n      {Map<String, String>? fields,\r\n      String? files,\r\n      required String feedUrl,\r\n      bool forSignInSignUp = false,\r\n      bool showProgress = true}) async {\r\n    if (showProgress) AppConst.startProgress();\r\n    http.MultipartRequest request =\r\n        http.MultipartRequest('POST', Uri.parse(ApiUrls.BASE_URL + feedUrl));\r\n    if (fields != null) request.fields.addAll(fields);\r\n    if (files != null)\r\n      request.files\r\n          .add(await http.MultipartFile.fromPath('profileImage', files));\r\n    if (!forSignInSignUp) request.headers.addAll(headers);\r\n\r\n    http.StreamedResponse response = await request.send();\r\n    if (showProgress) AppConst.stopProgress();\r\n\r\n    if (response.statusCode == 200 || response.statusCode == 201) {\r\n      String result = await response.stream.bytesToString();\r\n      logger.i(result);\r\n      return result;\r\n    } else {\r\n      String result = await response.stream.bytesToString();\r\n      dynamic parsed = jsonDecode(result);\r\n      await AppConst.errorSnackBar(\r\n          \"${response.statusCode} ${parsed[\"message\"]}\");\r\n\r\n      logger.e(parsed);\r\n\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  static Future<String> getMethod({required String feedUrl}) async {\r\n    var request =\r\n        http.Request('GET', Uri.parse(\"${ApiUrls.BASE_URL}${feedUrl}\"));\r\n    request.headers.addAll(headers);\r\n\r\n    http.StreamedResponse response = await request.send();\r\n    String result = await response.stream.bytesToString();\r\n    logger.i(result);\r\n    if (response.statusCode == 200) {\r\n      return result;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  static Future<String> deleteMethod(\r\n      {required String feedUrl, required Map<String, String> fields}) async {\r\n    var request =\r\n        http.Request('DELETE', Uri.parse(\"${ApiUrls.BASE_URL}${feedUrl}\"));\r\n    request.bodyFields = fields;\r\n    request.headers.addAll(headers);\r\n\r\n    http.StreamedResponse response = await request.send();\r\n    String result = await response.stream.bytesToString();\r\n    logger.i(result);\r\n\r\n    if (response.statusCode == 200) {\r\n      return result;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  static Future<String> getMethodWithBody(\r\n      String feedUrl, Map<String, String>? fields) async {\r\n    var request =\r\n        http.MultipartRequest('GET', Uri.parse(ApiUrls.BASE_URL + feedUrl));\r\n    if (fields != null) request.fields.addAll(fields);\r\n    request.headers.addAll(headers);\r\n    http.StreamedResponse response = await request.send();\r\n\r\n    String result = await response.stream.bytesToString();\r\n\r\n    logger.i(result);\r\n    if (response.statusCode == 200) {\r\n      return result;\r\n    } else {\r\n      print(response.reasonPhrase);\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n\r\n  static Future<dynamic> postMethodTruck({\r\n    String feedUrl = \"\",\r\n    String body = \"\",\r\n    String requestType = \"POST\",\r\n    String contentType = 'application/json',\r\n  }) async {\r\n    var request = http.Request(\r\n        requestType, Uri.parse(\"https://api.truck.deeps.info/api/$feedUrl\"));\r\n\r\n    request.headers.addAll({'content-type': 'application/json'});\r\n    if (requestType == \"GET\") {\r\n    } else if (requestType == \"POST\") {\r\n      request.body = body;\r\n    }\r\n    http.StreamedResponse response = await request.send();\r\n    AppConst.stopProgress();\r\n\r\n    var s = await response.stream.bytesToString();\r\n\r\n    if (response.statusCode == 200) {\r\n      print(\"await response.stream.bytesToString()\");\r\n      return s;\r\n    } else {\r\n      AppConst.errorSnackBar('Something wrong \\n $s');\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  ///\r\n  ///\r\n  ///\r\n  ///\r\n\r\n  static Future<String> multiPartPostMethodTruck(\r\n      Map<String, String> fields,String feed) async {\r\n    AppConst.startProgress();\r\n    var request = http.MultipartRequest('POST',\r\n        Uri.parse('https://api.truck.deeps.info/api/${feed}'));\r\n    request.fields.addAll(fields);\r\n    request.headers.addAll({'content-type': 'multipart/form-data'});\r\n    http.StreamedResponse response = await request.send();\r\n    AppConst.stopProgress();\r\n\r\n    if (response.statusCode == 200 || response.statusCode == 201) {\r\n      String result = await response.stream.bytesToString();\r\n      logger.i(result);\r\n      return result;\r\n    } else {\r\n      String result = await response.stream.bytesToString();\r\n      logger.i(result.toString());\r\n      AppConst.errorSnackBar('Something is wrong \\n $result');\r\n\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  ///\r\n  ///\r\n  static Future<String> getMethodTruck({required String feedUrl}) async {\r\n    var request =\r\n        http.Request('GET', Uri.parse(\"${ApiUrls.BASE_URL_TRUCK}${feedUrl}\"));\r\n    http.StreamedResponse response = await request.send();\r\n    String result = await response.stream.bytesToString();\r\n    AppConst.stopProgress();\r\n    if (response.statusCode == 200) {\r\n      return result;\r\n    } else {\r\n      AppConst.errorSnackBar('Something is wrong \\n $result');\r\n      return \"\";\r\n    }\r\n  }\r\n  static Future<String> getMethodTruckWithBody({required String feedUrl,\r\n  required String body})\r\n  async {\r\n    var request =\r\n    http.Request('GET', Uri.parse(\"${ApiUrls\r\n        .BASE_URL_TRUCK}${feedUrl}${body}\"));\r\n    http.StreamedResponse response = await request.send();\r\n    String result = await response.stream.bytesToString();\r\n    AppConst.stopProgress();\r\n    if (response.statusCode == 200) {\r\n      return result;\r\n    } else {\r\n      AppConst.errorSnackBar('Something is wrong \\n $result');\r\n      return \"\";\r\n    }\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/services/apiServices/api_services.dart b/lib/services/apiServices/api_services.dart
--- a/lib/services/apiServices/api_services.dart	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ b/lib/services/apiServices/api_services.dart	(date 1679551619029)
@@ -122,7 +122,7 @@
 
     var s = await response.stream.bytesToString();
 
-    if (response.statusCode == 200) {
+    if (response.statusCode == 200 || response.statusCode == 201) {
       print("await response.stream.bytesToString()");
       return s;
     } else {
Index: lib/providers/Truck _provider/fair_provider.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:convert';\r\n\r\nimport 'package:flutter/cupertino.dart';\r\nimport 'package:get/get.dart';\r\nimport 'package:provider/provider.dart';\r\nimport 'package:sultan_cab/services/ApiServices/api_services.dart';\r\nimport 'package:sultan_cab/utils/const.dart';\r\n\r\nimport '../../models/Truck_models/getAllCitiesResponse.dart';\r\nimport '../../models/Truck_models/getAllOrdersResponse.dart';\r\nimport '../../models/fair_by_car_id/fair_by_truck_id.dart';\r\nimport '../../services/ApiServices/StorageServices/get_storage.dart';\r\nimport '../../services/ApiServices/api_urls.dart';\r\nimport '../../utils/commons.dart';\r\nimport '../GoogleMapProvider/location_and_map_provider.dart';\r\nimport '../NotificationProvider/notification_provider.dart';\r\n\r\nFairTruckProvider fairTruckProvider = Provider.of(Get.context!, listen: false);\r\n\r\nclass FairTruckProvider extends ChangeNotifier {\r\n  String loadCity = '';\r\n  String unloadCity = '';\r\n\r\n  List<GetTruckFareResponse>? getTruckFareResponse = [];\r\n\r\n// var totalFare;\r\n  Future<bool> getAllTruckFairs() async {\r\n    AppConst.startProgress();\r\n    var body =\r\n        await ApiServices.getMethodTruck(feedUrl: ApiUrls.TRUCK_ALL_FARES);\r\n    if (body.isEmpty) return false;\r\n\r\n    getTruckFareResponse = getTruckFareResponseFromJson(body);\r\n    logger.i(getTruckFareResponse![0].commission);\r\n    notifyListeners();\r\n    return true;\r\n  }\r\n\r\n  Future<bool> submitOrder() async {\r\n    var map2 = {\r\n      \"title\": \"\",\r\n      \"pickUpLat\": appFlowProvider.currentLoc!.latitude.toString(),\r\n      \"pickUpLng\": appFlowProvider.currentLoc!.longitude.toString(),\r\n      \"pickUpAddress\": appFlowProvider.currentAdd.toString(),\r\n      \"dropOffAddress\": appFlowProvider.destAdd.toString(),\r\n      \"dropOffLat\": appFlowProvider.destLoc!.latitude.toString(),\r\n      \"dropOffLng\": appFlowProvider.destLoc!.longitude.toString(),\r\n      \"contact\": StorageCRUD.getUser().phoneNumber,\r\n      \"userId\": StorageCRUD.getUser().id,\r\n      \"distance\": appFlowProvider.directions!.totalDistance.toString(),\r\n      \"pickUpCity\": loadCity,\r\n      \"dropOffCity\": unloadCity,\r\n    };\r\n    List<Map<String, String>> list = [];\r\n    int totalValue = 0;\r\n    fairTruckProvider.getTruckFareResponse!.forEach((element) {\r\n      if (element.quantity > 0) {\r\n        var i = element.quantity *\r\n            element.farePerKm!.toInt() *\r\n            double.parse(\r\n                    appFlowProvider.directions!.totalDistance!.split(\" \")[0])\r\n                .toInt();\r\n        totalValue = totalValue + i;\r\n        list.add({\r\n          \"truckId\": element.id.toString(),\r\n          \"noOfTrucks\": element.quantity.toString(),\r\n          \"totalFare\": i.toString(),\r\n        });\r\n      }\r\n    });\r\n    map2[\"truckDetails\"] = list;\r\n    map2[\"totalFare\"] = totalValue.toString();\r\n\r\n    print(map2);\r\n\r\n    AppConst.startProgress(barrierDismissible: true);\r\n    String response = await ApiServices.postMethodTruck(\r\n        feedUrl: ApiUrls.BOOKING_REQUEST, body: json.encode(map2));\r\n    AppConst.stopProgress();\r\n\r\n    if (response.isEmpty) {\r\n      return false;\r\n    }\r\n    logger.i('booking api done');\r\n    await notifyProv.showNotification(\r\n        title: \"Truck King\", body: \"Driver Arrived at your pickup location\");\r\n    notifyListeners();\r\n    return true;\r\n  }\r\n\r\n  List<GetAllCitiesResponse>? getAllCitiesResponse = [];\r\n\r\n  Future<bool> getAllCities() async {\r\n    var response =\r\n        await ApiServices.getMethodTruck(feedUrl: ApiUrls.GET_ALL_CITIES);\r\n    if (response.isEmpty) return false;\r\n\r\n    getAllCitiesResponse = getAllCitiesResponseFromJson(response);\r\n    notifyListeners();\r\n    return true;\r\n  }\r\n\r\n  List<GetAllOrdersResponse> getAllOrdersResponse = [];\r\n\r\n  Future<bool> getAllOrdersDetails() async {\r\n    String body = '?id=${StorageCRUD.getUser().id}';\r\n    var response = await ApiServices.getMethodTruckWithBody(\r\n        feedUrl: ApiUrls.GET_ALL_ORDERS, body: body);\r\n    if (response.isEmpty) return false;\r\n    getAllOrdersResponse = getAllOrdersResponseFromJson(response);\r\n    if(getAllOrdersResponse!=[])\r\n      {\r\n        logger.i(getAllOrdersResponse);\r\n      }\r\n\r\n    notifyListeners();\r\n    return true;\r\n  }\r\n\r\n  void getOrders() async {\r\n    await getAllOrdersDetails();\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/providers/Truck _provider/fair_provider.dart b/lib/providers/Truck _provider/fair_provider.dart
--- a/lib/providers/Truck _provider/fair_provider.dart	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ b/lib/providers/Truck _provider/fair_provider.dart	(date 1679551618825)
@@ -82,8 +82,8 @@
       return false;
     }
     logger.i('booking api done');
-    await notifyProv.showNotification(
-        title: "Truck King", body: "Driver Arrived at your pickup location");
+    // await notifyProv.showNotification(
+    //     title: "Truck King", body: "Driver Arrived at your pickup location");
     notifyListeners();
     return true;
   }
Index: android/app/src/debug/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.sultan_cab\">\r\n    <!-- The INTERNET permission is required for development. Specifically,\r\n         the Flutter tool needs it to communicate with the running application\r\n         to allow setting breakpoints, to provide hot reload, etc.\r\n    -->\r\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\r\n</manifest>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/app/src/debug/AndroidManifest.xml b/android/app/src/debug/AndroidManifest.xml
--- a/android/app/src/debug/AndroidManifest.xml	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ b/android/app/src/debug/AndroidManifest.xml	(date 1679551617835)
@@ -1,5 +1,5 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.sultan_cab">
+    package="com.futurevision.trucking">
     <!-- The INTERNET permission is required for development. Specifically,
          the Flutter tool needs it to communicate with the running application
          to allow setting breakpoints, to provide hot reload, etc.
Index: android/app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>def localProperties = new Properties()\r\ndef localPropertiesFile = rootProject.file('local.properties')\r\nif (localPropertiesFile.exists()) {\r\n    localPropertiesFile.withReader('UTF-8') { reader ->\r\n        localProperties.load(reader)\r\n    }\r\n}\r\n\r\ndef flutterRoot = localProperties.getProperty('flutter.sdk')\r\nif (flutterRoot == null) {\r\n    throw new GradleException(\"Flutter SDK not found. Define location with flutter.sdk in the local.properties file.\")\r\n}\r\n\r\ndef flutterVersionCode = localProperties.getProperty('flutter.versionCode')\r\nif (flutterVersionCode == null) {\r\n    flutterVersionCode = '1'\r\n}\r\n\r\ndef flutterVersionName = localProperties.getProperty('flutter.versionName')\r\nif (flutterVersionName == null) {\r\n    flutterVersionName = '1.0'\r\n}\r\n\r\napply plugin: 'com.android.application'\r\napply plugin: 'kotlin-android'\r\napply from: \"$flutterRoot/packages/flutter_tools/gradle/flutter.gradle\"\r\napply plugin: 'com.google.gms.google-services'\r\n\r\nandroid {\r\n    compileSdkVersion 33\r\n    ndkVersion flutter.ndkVersion\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n\r\n    sourceSets {\r\n        main.java.srcDirs += 'src/main/kotlin'\r\n    }\r\n\r\n    defaultConfig {\r\n        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\r\n        applicationId \"com.sultan_cab\"\r\n        // You can update the following values to match your application needs.\r\n        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\r\n        minSdkVersion 21\r\n        targetSdkVersion 33\r\n        versionCode flutterVersionCode.toInteger()\r\n        versionName flutterVersionName\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            // TODO: Add your own signing config for the release build.\r\n            // Signing with the debug keys for now, so `flutter run --release` works.\r\n            signingConfig signingConfigs.debug\r\n        }\r\n    }\r\n}\r\n\r\nflutter {\r\n    source '../..'\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\r\n    implementation platform('com.google.firebase:firebase-bom:31.2.3')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation 'com.google.firebase:firebase-auth:21.0.3'\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/app/build.gradle b/android/app/build.gradle
--- a/android/app/build.gradle	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ b/android/app/build.gradle	(date 1679551617833)
@@ -45,7 +45,7 @@
 
     defaultConfig {
         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
-        applicationId "com.sultan_cab"
+        applicationId "com.futurevision.trucking"
         // You can update the following values to match your application needs.
         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
         minSdkVersion 21
Index: lib/services/apiServices/StorageServices/get_storage.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:get_storage/get_storage.dart';\r\nimport '../../../models/registration/userRegResponse.dart';\r\n\r\nclass StorageCRUD {\r\n  static final box = GetStorage();\r\n\r\n  static Future write(String key, dynamic value) async {\r\n    await box.write(key, value);\r\n  }\r\n\r\n  static Future read(String key) async {\r\n    await box.read(key);\r\n  }\r\n\r\n  static Future remove(String key) async {\r\n    await box.remove(key);\r\n  }\r\n\r\n  static Future erase() async {\r\n    await box.erase();\r\n  }\r\n\r\n  static UserRegResponse getUser() {\r\n    UserRegResponse userRegResponse = userRegResponseFromJson(box.read\r\n      (StorageKeys.userData));\r\n\r\n    return userRegResponse;\r\n  }\r\n\r\n  static Future<void> saveUser(String data) async {\r\n    await box.write(StorageKeys.userData, data);\r\n  }\r\n}\r\n\r\nclass StorageKeys {\r\n  static String userData = \"userData\";\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/services/apiServices/StorageServices/get_storage.dart b/lib/services/apiServices/StorageServices/get_storage.dart
--- a/lib/services/apiServices/StorageServices/get_storage.dart	(revision fb006fc336a76cef9b8a854cbf28ca77e4dc1166)
+++ b/lib/services/apiServices/StorageServices/get_storage.dart	(date 1679551619028)
@@ -21,8 +21,7 @@
   }
 
   static UserRegResponse getUser() {
-    UserRegResponse userRegResponse = userRegResponseFromJson(box.read
-      (StorageKeys.userData));
+    UserRegResponse userRegResponse = userRegResponseFromJson(box.read(StorageKeys.userData));
 
     return userRegResponse;
   }
